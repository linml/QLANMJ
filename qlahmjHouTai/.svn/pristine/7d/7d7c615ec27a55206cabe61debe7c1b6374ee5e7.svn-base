<?php
if (! defined ( 'ACCESS' )) {
	exit ( 'Access denied.' );
}
class GamePlayer extends Base {
	// 表名
	private static $user_info = 'user_info';
	private static $user_account = 'user_account';
	private static $agent_info = 'agent_info';
	private static $user_stat = 'user_stat';
	/**
	 * [getAllUsers 获取玩家表数据]
	 * @Author   李龙
	 * @DateTime 2018-08-24T15:24:59+0800
	 * @return   [type]                   [返回结果集]
	 */
	public static function getAllUsers($uid='',$start='',$page_size=''){
		if($uid) $uid;
		$limit = " limit $start,$page_size";
		$where = " ";
		$db    = self::__instance();
		$sql   = 'select ui.userid,ui.nickname,ui.isname,ua.diamond,ua.gold,ua.qidou,ua.grift,ui.viplevel,ui.status,ui.addtime,ai.agentid,ai.agentname from '.self::$user_info.' ui left join '.self::$user_account.' ua on ui.userid = ua.userid left join '.self::$agent_info.' ai on ai.userid=ui.userid '.$uid.$limit;
		$result = $db->query($sql)->fetchAll(PDO::FETCH_ASSOC);
		if($result) return $result;else return array();
	}

	/**
	 * [getCountUsers 查询玩家表条目数]
	 * @Author   李龙
	 * @DateTime 2018-08-24T15:29:58+0800
	 * @return   [type]                   [返回玩家表条目数]
	 */
	public static function getCountUsers(){
		$db = self::__instance();
		$sql = 'select count(userid) as counts from '.self::$user_info;
		$result = $db->query($sql)->fetchColumn();
		return 0 + $result;
	}
	/**
	 * [getUserById 根据玩家id查询特定玩家信息]
	 * @Author   李龙
	 * @DateTime 2018-08-24T17:54:31+0800
	 * @param    [type]                   $userid [玩家id]
	 * @return   [type]                           [特定玩家信息]
	 */
	public static function getUserById($userid=''){
		if(empty($userid)) return ;
		$db = self::__instance();
		$sql = 'select ui.userid,ui.nickname,ua.diamond from '.self::$user_info.' ui left join '.self::$user_account.' ua on ui.userid = ua.userid where ui.userid = '.$userid;
		$result = $db->query($sql)->fetch(PDO::FETCH_ASSOC);
		if($result) return $result;else return array();
	}

	/**
	 * fixme
	 * [addGemsForUser 为玩家增加钻石]
	 * @Author   李龙
	 * @DateTime 2018-08-24T18:11:25+0800
	 * @param    string                   $userid [玩家id]
	 * @return   [int]                           [是否成功]
	 */
	public static function addGemsForUser($userid='',$gems='',$money=''){
		if(empty($userid)) return ;
		$db = self::__instance();
		return 0;
	}

	/**
	 * [showInfo 根据userid查询用户信息]
	 * @Author   李龙
	 * @DateTime 2018-08-25T10:40:22+0800
	 * @param    string                   $userid [玩家userid]
	 * @return   [type]                           [返回玩家信息]
	 */
	public static function showInfo($userid=''){
		if(empty($userid)) return ;
		$db = self::__instance();
		$sql = 'select ui.picfile,ui.userid,ui.nickname,ui.addtime,ui.refereeid,ui.logintime,IFNULL(us.roomcnt,0) as roomcnt,ui.status,ui.realname,ui.idcard,(select b.nickname from user_info a INNER JOIN user_info b on a.refereeid = b.userid where a.refereeid=ui.refereeid) as refereename from '.self::$user_info.' ui left join '.self::$user_stat.' us on ui.userid = us.userid where ui.userid = '.$userid;
		$result = $db->query($sql)->fetch(PDO::FETCH_ASSOC);
		if($result) return $result;else return array();
	}

	/**
	 * [updateUserStatus 根据玩家Id更改玩家状态]
	 * @Author   李龙
	 * @DateTime 2018-08-25T15:03:46+0800
	 * @param    string                   $userid [玩家id]
	 * @param    string                   $status [状态]
	 * @return   [type]                           [返回成功与否]
	 */
	public static function updateUserStatus($userid='',$status=''){
		if(empty($userid)||empty($status)) return ;
		$db = self::__instance();
		$set = ['status'=>$status];
		$where = ['userid'=>$userid];
		$result = $db->update(self::$user_info,$set,$where);
		return 0 + $result;
	}

	/**
	 * [changeParentAgent 修改代理的绑定关系]
	 * @Author   李龙
	 * @DateTime 2018-08-25T16:07:48+0800
	 * @param    string                   $userid  [玩家id]
	 * @param    string                   $agentid [代理id]
	 * @return   [type]                            [返回执行结果]
	 */
	public static function changeParentAgent($userid='',$agentid=''){
		if(empty($userid)||empty($agentid)) return;
		$db = self::__instance();
		$produce = 'call sp_user_bind_change('.$userid.','.$agentid.',@p_out)';
		$db->query($produce);
		return $db->query("select @p_out")->fetch(PDO::FETCH_ASSOC)['@p_out'];
	}
}