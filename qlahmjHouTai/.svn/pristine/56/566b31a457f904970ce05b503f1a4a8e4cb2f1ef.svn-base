<?php
if (! defined ( 'ACCESS' )) {
	exit ( 'Access denied.' );
}
class DiamondRecord extends Base {

	private static $log_funds_admin = 'log_funds_admin';
	private static $log_funds_agent = 'log_funds_agent';
	private static $log_funds_user  = 'log_funds_user';
	private static $order_transfer  = 'order_transfer';
	private static $agent_transfer  = 'agent_transfer';
	private static $agent_info      = 'agent_info';
	private static $user_info       = 'user_info';
	private static $order_pay       = 'order_pay';

	/**
	 * [getRechargeDiamondRecod 获取充钻记录--代理为玩家充钻]
	 * @Author   李龙
	 * @DateTime 2018-09-07T14:18:15+0800
	 * @param    [type]                   $start     [开始页码]
	 * @param    string                   $page_size [每页显示条目]
	 * @param    [type]                   $where     [筛选条件]
	 * @return   [type]                              [description]
	 */
	public static function  getRechargeDiamondRecod($start,$page_size='',$where){
		if(empty($page_size)) return;else $limit =" limit $start,$page_size";
		$db = self::__instance();
		$sql = 'SELECT
					lfa.relationid,
					lfa.addtime,
					at.auid,
					lfa.fundmoney,
					lfa.agomoney,
					lfa.agentid,
					at.status
				FROM
					'.self::$log_funds_agent.' lfa
				LEFT JOIN agent_transfer at ON lfa.relationid = at.id
				WHERE
					lfa.accounttype = "VD"
				AND lfa.fundtype = "81"
				AND at.cashtype = "U" '.$limit;
		$result = $db->query($sql)->fetchAll(PDO::FETCH_ASSOC);
		foreach ($result as $key => $value) {
			$result[$key] = array_merge($result[$key],parent::getAUInfo('agentid',$result[$key]['agentid'],'M'));
			$result[$key] = array_merge($result[$key],parent::getAUInfo('userid',$result[$key]['auid'],'A'));
		}
		if($result) return $result;else return array();
	}

	/**
	 * [getAgentTransferRecord 获取代理划拨记录---代理划拨给代理]
	 * @Author   李龙
	 * @DateTime 2018-09-07T14:20:37+0800
	 * @param    [type]                   $srart     [description]
	 * @param    string                   $page_size [description]
	 * @param    [type]                   $where     [description]
	 * @return   [type]                              [description]
	 */
	public static function getAgentTransferRecord($srart,$page_size='',$where){
		if(empty($page_size)) return;else $limit =" limit $start,$page_size";
		$db = self::__instance();
		$sql = 'SELECT
					lfa.relationid,
					lfa.addtime,
					at.auid,
					lfa.fundmoney,
					lfa.agomoney,
					lfa.agentid,
					at.status
				FROM
					'.self::$log_funds_agent.' lfa
				LEFT JOIN agent_transfer at ON lfa.relationid = at.id
				WHERE
					lfa.accounttype = "VD"
				AND lfa.fundtype = "82"
				AND at.cashtype = "H" '.$limit;
		foreach ($result as $key => $value) {
			$result[$key] = array_merge($result[$key],parent::getAUInfo('agentid',$result[$key]['agentid'],'M'));
			$result[$key] = array_merge($result[$key],parent::getAUInfo('agentid',$result[$key]['auid'],'A'));
		}
		$result = $db->query($sql)->fetchAll(PDO::FETCH_ASSOC);
	}

	/**
	 * [buyDiamondRecord 进钻记录---代理充钻（余额，微信）]
	 * @Author   李龙
	 * @DateTime 2018-09-07T16:03:59+0800
	 * @param    [type]                   $srart     [description]
	 * @param    string                   $page_size [description]
	 * @param    [type]                   $where     [description]
	 * @return   [type]                              [description]
	 */
	public static function buyDiamondRecord($srart,$page_size='',$where){
		if(empty($page_size)) return;else $limit =" limit $start,$page_size";		
		$db = self::__instance();
		$sql = 'SELECT
					lfa.relationid,
					lfa.addtime,
					lfa.agentid,
					lfa.fundtype
				FROM
					'.self::$log_funds_agent.' lfa
				WHERE 1=1
				 AND (
				 	lfa.fundtype = "80"
				 	OR lfa.fundtype = "83"
				 )';
		$result = $db->query($sql)->fetchAll(PDO::FETCH_ASSOC);
		if($result['fundtype'] == '80'){
			$result[$key] = array_merge($result[$key],self::buyDiamondRecordAuxOrderPay($result[$key]['relationid']));
		}else if($result['fundtype'] == '83'){
			$result[$key] = array_merge($result[$key],self::buyDiamondRecordAuxAgentTransfer($result[$key]['relationid']));
			$result[$key] = array_merge($result[$key],array('paytype'=>'余额支付'));
		}
	}

	/**
	 * [buyDiamondRecordAuxOrderPay 代理充值---微信充钻]
	 * @Author   李龙
	 * @DateTime 2018-09-07T15:59:46+0800
	 * @param    [type]                   $relationid [description]
	 * @return   [type]                               [description]
	 */
	public static function buyDiamondRecordAuxOrderPay($relationid){
		if(empty($relationid)) return ;
		$db = self::__instance();
		$sql = 'SELECT
					op.rmb,
					op.status,
					op.paytype,
					lfa.fundmoney
				FROM
					'.self::$order_pay.' op
				LEFT JOIN '.self::$log_funds_agent.' lfa
				ON lfa.relationid = op.id
				WHERE
					op.id = '.$relationid;
		$result = $db->query($sql)->fetch(PDO::FETCH_ASSOC);
		if($result) return $result;
	}


	/**
	 * [buyDiamondRecordAuxAgentTransfer 代理充值----余额充钻]
	 * @Author   李龙
	 * @DateTime 2018-09-07T16:00:07+0800
	 * @param    [type]                   $relationid [description]
	 * @return   [type]                               [description]
	 */
	public static function buyDiamondRecordAuxAgentTransfer($relationid){
		if(empty($relationid)) return ;
		$db = self::__instance();
		$sql = 'SELECT
					at.rmb,
					at.diamond,
					at.status
				FROM
					'.self::$agent_transfer.' at				
				WHERE
					at.id = '.$relationid;
	}

	
	/**
	 * [systemTransfer 管理给代理充或赠钻]
	 * @Author   李龙
	 * @DateTime 2018-09-07T18:04:59+0800
	 * @param    [type]                   $srart     [description]
	 * @param    string                   $page_size [description]
	 * @param    [type]                   $where     [description]
	 * @return   [type]                              [description]
	 */
	public static function systemTransfer($srart,$page_size='',$where){
		if(empty($page_size)) return;else $limit =" limit $start,$page_size";		
		$db = self::__instance();
		$sql = 'SELECT
					ot.id,
					ot.addtime,
					ot.auid,
					ot.toauid,
					ot.transfertype,
					ot.rmb,
					lfa.fundmoney
				FROM
					'.self::$order_transfer.' ot
				INNER JOIN '.self::$log_funds_agent.' lfa ON ot.id = lfa.relationid
				WHERE
					ot.accounttype = "VD" '.$limit;
		$result = $db->query($sql)->fetchAll(PDO::FETCH_ASSOC);
		foreach ($result as $key => $value) {
			$result[$key] = array_merge($result[$key],parent::getAUInfo('agentid',$result[$key]['toauid']));
			$result[$key] = array_merge($result[$key],self::getAdminInfo($result[$key]['auid']));
		}
		if($result) return $result;else return array();
	}


	/**
	 * [systemSendAndSold 管理给玩家充或者赠钻]
	 * @Author   李龙
	 * @DateTime 2018-09-07T18:37:26+0800
	 * @param    [type]                   $srart     [description]
	 * @param    string                   $page_size [description]
	 * @param    [type]                   $where     [description]
	 * @return   [type]                              [description]
	 */
	public static function systemSendAndSold($srart,$page_size='',$where){
		if(empty($page_size)) return;else $limit =" limit $start,$page_size";
		$db = self::__instance();
		$sql = 'SELECT
					ot.id,
					ot.addtime,
					ot.auid,
					ot.toauid,
					ot.transfertype,
					ot.rmb,
					lfu.fundmoney
				FROM
					'.self::$order_transfer.' ot
				INNER JOIN '.self::$log_funds_user.' lfu ON ot.id = lfa.relationid
				WHERE
					ot.accounttype = "VD" '.$limit;
		$result = $db->query($sql)->fetchAll(PDO::FETCH_ASSOC);
		foreach ($result as $key => $value) {
			$result[$key] = array_merge($result[$key],parent::getAUInfo('userid',$result[$key]['toauid']));
			$result[$key] = array_merge($result[$key],self::getAdminInfo($result[$key]['auid']));
		}
		if($result) return $result;else return array();		
	}


	/**
	 * [getAdminInfo 用管理ID获取管理名字信息]
	 * @Author   李龙
	 * @DateTime 2018-09-07T17:50:11+0800
	 * @param    [type]                   $adminid [管理ID]
	 * @return   [type]                            [description]
	 */
	public static function getAdminInfo($adminid){
		$db  = self::__instance();
		$sql = '';
		$result = $db->query($sql)->fetch(PDO::FETCH_ASSOC);
		if($result) return $result;else return array();
	}
}