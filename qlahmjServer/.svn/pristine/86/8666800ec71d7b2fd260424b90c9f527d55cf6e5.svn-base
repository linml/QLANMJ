<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GameIF</name>
    </assembly>
    <members>
        <member name="T:QL.Common.Main_CommonID">
            <summary>
            消息主码编号，定义各个服务器传递数据所需要的消息主码,包含方向性定义
            </summary> 
        </member>
        <member name="F:QL.Common.Main_CommonID.BaseGeneral">
            <summary>
            服务器内部通讯处理的消息,礼游平台基础通讯消息体定义
            </summary>
        </member>
        <member name="F:QL.Common.Main_CommonID.LS2LS">
            <summary>
            登录服务器发送给登录服务器？不要奇怪这个是发给其他登录服务器的指令消息，在多个登录服务器同步消息使用
            </summary>
        </member>
        <member name="F:QL.Common.Main_CommonID.LS2GS">
            <summary>
            登录服务器发给游戏服务器的消息主命令码
            </summary>
        </member>
        <member name="F:QL.Common.Main_CommonID.ServerGeneral">
            <summary>
            服务器通用主码，一般用于服务器启动注册，停止信息报告任务等
            </summary>
        </member>
        <member name="F:QL.Common.Main_CommonID.GS2LS">
            <summary>
            游戏服务器发给登陆服务器的消息主命令码
            </summary>
        </member>
        <member name="F:QL.Common.Main_CommonID.C2LS">
            <summary>
            往登录服务器
            </summary>
        </member>
        <member name="F:QL.Common.Main_CommonID.G2LS">
            <summary>
            大厅和游戏插件的直接交互消息主码
            </summary>
        </member>
        <member name="F:QL.Common.Main_CommonID.C2GS">
            <summary>
            往游戏服务器
            </summary>
        </member>
        <member name="F:QL.Common.Main_CommonID.LS2C">
            <summary>
            从登录服务器来
            </summary>
        </member>
        <member name="F:QL.Common.Main_CommonID.GS2C">
            <summary>
            从游戏服务器来
            </summary>
        </member>
        <member name="T:QL.Common.SUB_BaseGeneral_CommonID">
            <summary>
            服务器内部通讯处理的消息,礼游平台基础通讯消息体定义
            </summary>
        </member>
        <member name="F:QL.Common.SUB_BaseGeneral_CommonID.GameTimerMsg">
            <summary>
            定时器消息
            </summary>
        </member>
        <member name="F:QL.Common.SUB_BaseGeneral_CommonID.H5Connected">
            <summary>
            H5客户端连接成功的回调通知消息
            </summary>
        </member>
        <member name="F:QL.Common.SUB_BaseGeneral_CommonID.NullMsg">
            <summary>
            一个空消息，服务端标记使用，大厅请不要使用该消息体
            </summary>
        </member>
        <member name="F:QL.Common.SUB_BaseGeneral_CommonID.PipelineDisposed">
            <summary>
            管道释放消息
            </summary>
        </member>
        <member name="F:QL.Common.SUB_BaseGeneral_CommonID.ServerMaintain">
            <summary>
            服务端测试通信序列化消息体
            </summary>
        </member>
        <member name="T:QL.Common.SUB_LS2LS_CommonID">
            <summary>
            服务器内部通讯处理的消息,礼游平台基础通讯消息体定义
            </summary>
        </member>
        <member name="F:QL.Common.SUB_LS2LS_CommonID.UserRepeatLogon">
            <summary>
            玩家重复登录
            </summary>
        </member>
        <member name="F:QL.Common.SUB_LS2LS_CommonID.PlayerLogon">
            <summary>
            玩家登陆
            </summary>
        </member>
        <member name="F:QL.Common.SUB_LS2LS_CommonID.RouteUserMessage">
            <summary>
            服务器之间中转服务器消息
            </summary>
        </member>
        <member name="F:QL.Common.SUB_LS2LS_CommonID.SystemHornMsg">
            <summary>
            系统跑马灯消息
            </summary>
        </member>
        <member name="T:QL.Common.SUB_GS2LS_CommonID">
            <summary>
            服务器内部通讯处理的消息,礼游平台基础通讯消息体定义
            </summary>
        </member>
        <member name="F:QL.Common.SUB_GS2LS_CommonID.UpdateGameRoomInfo">
            <summary>
            更新场地信息
            </summary>
        </member>
        <member name="F:QL.Common.SUB_GS2LS_CommonID.UserCreateTableNotice">
            <summary>
            玩家创建桌子的通知信息
            </summary>
        </member>
        <member name="F:QL.Common.SUB_GS2LS_CommonID.SendDataToPlayer">
            <summary>
            给指定的玩家发送数据，该消息会通过中心服务器中转发送给相应服务器处理,如果玩家不在线会被丢弃
            </summary>
        </member>
        <member name="T:QL.Common.SUB_ServerGeneral_CommonID">
            <summary>
            服务器通用消息副码
            </summary>
        </member>
        <member name="F:QL.Common.SUB_ServerGeneral_CommonID.InternalServerInvolveMessage">
            <summary>
            服务器内部保护级别通知消息，这个消息不应该被序列化和传输
            </summary>
        </member>
        <member name="F:QL.Common.SUB_ServerGeneral_CommonID.SetSocketRemoteIP">
            <summary>
            设置服务器远端IP信息
            </summary>
        </member>
        <member name="F:QL.Common.SUB_ServerGeneral_CommonID.ShowWindows">
            <summary>
            弹出窗体
            </summary>
        </member>
        <member name="F:QL.Common.SUB_ServerGeneral_CommonID.Update_PlayerMoneyBag">
            <summary>
            推送通知的玩家余额更新信息
            </summary>
        </member>
        <member name="F:QL.Common.SUB_ServerGeneral_CommonID.Update_AIDispositionParam">
            <summary>
            刷新AI性格控制参数配置数据
            </summary>
        </member>
        <member name="F:QL.Common.SUB_ServerGeneral_CommonID.Update_AITimeParam">
            <summary>
            刷新AI时间段控制参数数据
            </summary>
        </member>
        <member name="F:QL.Common.SUB_ServerGeneral_CommonID.ServerReflushCache">
            <summary>
            通知刷新服务器配置信息
            </summary>
        </member>
        <member name="T:QL.Common.SUB_LS2GS_CommonID">
            <summary>
            LS 向 GS发送消息的副码
            </summary>
        </member>
        <member name="F:QL.Common.SUB_LS2GS_CommonID.GameUserSelectRoom">
            <summary>
            玩家选择进入游戏场地消息
            </summary>
        </member>
        <member name="F:QL.Common.SUB_LS2GS_CommonID.GameUserSelectRoomByTableID">
            <summary>
            玩家选择进入游戏场地消息
            </summary>
        </member>
        <member name="F:QL.Common.SUB_LS2GS_CommonID.LogonServerPullGSInfo">
            <summary>
            登陆服务器拉取游戏服务器状态信息
            </summary>
        </member>
        <member name="T:QL.Common.SUB_CommandSC">
            <summary>
            服务端客户端通信子码
            </summary>
        </member>
        <member name="T:QL.Common.SUB_CommandSC.C2LS">
            <summary>
            往登录服务器
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.C2LS.MSG_C_LoginByAccount">
            <summary>
            根据账号登录
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.C2LS.MSG_C_EnterGameRoom">
            <summary>
            进入游戏房间
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.C2LS.MSG_C_HeartBeatMessage">
            <summary>
            心跳包
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.C2LS.MSG_T_TestMessage">
            <summary>
            测试消息体
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.C2LS.MSG_C_QueryRoomByGameIDArray">
            <summary>
            根据游戏Id数据查询场地列表
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.C2LS.MSG_C_QueryGame">
            <summary>
            查询游戏
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.C2LS.MSG_C_QueryGameByIDArray">
            <summary>
            根据传入的一个游戏Id数组来查询游戏信息
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.C2LS.MSG_C_QueryUserProp">
            <summary>
            查询玩家道具余额，提供给玩家的余额更新通知
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.C2LS.MSG_C_QueryOfflineRoom">
            <summary>
            查询断线场地
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.C2LS.MSG_C_QueryGroupTableList">
            <summary>
            获取群内创建房间列表
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.C2LS.MSG_C_SubscribeOrUnsubscribeMessage">
            <summary>
            订阅或者取消订阅指定类别消息的处理接口
            </summary>
        </member>
        <member name="T:QL.Common.SUB_CommandSC.C2GS">
            <summary>
            往游戏服务器
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.C2GS.c2gs_offerPairTable">
            <summary>
            请求配桌
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.C2GS.c2gs_sitDown">
            <summary>
            坐下
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.C2GS.c2gs_ready">
            <summary>
            玩家准备
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.C2GS.c2gs_standUP">
            <summary>
            玩家从座位上起立(离开)
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.C2GS.c2gs_chartMsg">
            <summary>
            聊天消息
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.C2GS.c2gs_queryAgentMatchStatus">
            <summary>
            查询商户比赛状态
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.C2GS.c2gs_reliveAgentMatch">
            <summary>
            复活参加商户比赛
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.C2GS.c2gs_offlineComein">
            <summary>
            玩家断线重连进来
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.C2GS.c2gs_signupMatch">
            <summary>
            报名参赛
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.C2GS.c2gs_queryReliveRule">
            <summary>
            查询复活规则
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.C2GS.c2gs_exitRoom">
            <summary>
            退出场地
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.C2GS.MSG_C_ChartVoiceMsg">
            <summary>
            同桌语音聊天
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.C2GS.MSG_C_EliminateUser">
            <summary>
            踢出桌子上的玩家，玩家会被强制起立离开当前桌子
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.C2GS.MSG_C_SeekHelpUser">
            <summary>
             玩家发起求助请求，服务服务器在接收到该消息后会将该消息转发给指定玩家，客户端也需要处理该消息
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.C2GS.MSG_C_RequestChangeChairId">
            <summary>
            玩家请求更换座位
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.C2GS.MSG_C_AcceptChangeChairId">
            <summary>
            玩家同意更换玩家座位号
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.C2GS.MSG_C_SendGameContinueStatus">
            <summary>
            服务端发送给玩家请求更换座位的请求消息
            </summary>
        </member>
        <member name="T:QL.Common.SUB_CommandSC.LS2C">
            <summary>
            从登录服务器来
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.LS2C.MSG_S_SystmPushMsg">
            <summary>
            系统推送消息
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.LS2C.MSG_S_ErrorCode">
            <summary>
            错误码
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.LS2C.MSG_S_PlayerLatestBalance">
            <summary>
            玩家最新余额
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.LS2C.MSG_S_LoginSuccess">
            <summary>
            登录成功
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.LS2C.MSG_S_UserSessionKey">
            <summary>
            刷新玩家的登录信息Token
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.LS2C.MSG_S_UserCreateTableNotice">
            <summary>
            玩家创建桌子信息的推送
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.LS2C.MSG_S_RoomList">
            <summary>
            查询场地信息返回
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.LS2C.MSG_S_GameList">
            <summary>
            游戏列表
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.LS2C.MSG_S_OfflineRoom">
            <summary>
            断线场地
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.LS2C.MSG_S_SysConfig">
            <summary>
            系统配置表
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.LS2C.MSG_S_UserProp">
            <summary>
            玩家道具列表
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.LS2C.MSG_S_SingleTableInfo">
            <summary>
            根据桌子Id获取创建的房间信息
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.LS2C.MSG_S_GroupTableList">
            <summary>
            获取到的群内玩家创建的房间列表
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.LS2C.MSG_S_SystemHornMsg">
            <summary>
            系统跑马灯消息
            </summary>
        </member>
        <member name="T:QL.Common.SUB_CommandSC.GS2C">
            <summary>
            从游戏服务器来
            </summary> 
        </member>
        <member name="F:QL.Common.SUB_CommandSC.GS2C.gs2c_pairTableSuccess">
            <summary>
            配桌成功
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.GS2C.gs2c_playerSitDown">
            <summary>
            玩家坐下
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.GS2C.gs2c_tablePlayer">
            <summary>
            桌子上的玩家
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.GS2C.gs2c_playerStandUP">
            <summary>
            玩家起立
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.GS2C.gs2c_playerStatus">
            <summary>
            玩家状态
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.GS2C.gs2c_tableChartMsg">
            <summary>
            本桌聊天消息
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.GS2C.gs2c_matchStatus">
            <summary>
            我的比赛状态
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.GS2C.MSG_S_ExitRoomSuccess">
            <summary>
            玩家进入场地成功
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.GS2C.MSG_S_EnterRoomSuccess">
            <summary>
            玩家进入场地成功
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.GS2C.MSG_S_GameOver">
            <summary>
            游戏结束的通知消息
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.GS2C.MSG_S_GameScene">
            <summary>
            游戏场景状态
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.GS2C.MSG_S_GameStart">
            <summary>
            游戏开始的通知消息
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.GS2C.MSG_S_PlayerGameOfflineStatus">
            <summary>
            玩家断线游戏的当前状态
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.GS2C.MSG_S_PlayerReadyTimer">
            <summary>
            玩家准备计时
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.GS2C.MSG_S_PlayerChangeTableSucess">
            <summary>
            玩家换桌完成，这个消息是推送的随时会出现
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.GS2C.MSG_S_PlayerExitRoom">
            <summary>
            玩家被系统请离场地，这个时候玩家已经不在场地中
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.GS2C.MSG_S_RequestChangeChairId">
            <summary>
            玩家响应更换座位的请求
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.GS2C.MSG_S_PlayerNewChairInfo">
            <summary>
            玩家椅子号被更换分配的新的椅子号
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.GS2C.MSG_S_BeginGameContinue">
            <summary>
            开始处理续局功能结果
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.GS2C.MSG_S_EndGameContinue">
            <summary>
            完成续局功能操作
            </summary>
        </member>
        <member name="F:QL.Common.SUB_CommandSC.GS2C.MSG_S_PlayerGameContinueStatus">
            <summary>
            服务端发送给玩家请求更换座位的请求消息
            </summary>
        </member>
        <member name="T:QL.Common.AccountingReasons">
            <summary>
            账务原因枚举
            </summary>
        </member>
        <member name="F:QL.Common.AccountingReasons.Singin">
            <summary>
            报名扣费
            </summary>
        </member>
        <member name="F:QL.Common.AccountingReasons.Prop">
            <summary>
            购买道具
            </summary>
        </member>
        <member name="F:QL.Common.AccountingReasons.Resurrection">
            <summary>
            复活扣费
            </summary>
        </member>
        <member name="F:QL.Common.AccountingReasons.RaceFee">
            <summary>
            百人游戏消耗扣费
            </summary>
        </member>
        <member name="F:QL.Common.AccountingReasons.ExitSingin">
            <summary>
            退赛返还
            </summary>
        </member>
        <member name="F:QL.Common.AccountingReasons.Contest">
            <summary>
            比赛奖励
            </summary>
        </member>
        <member name="F:QL.Common.AccountingReasons.Game">
            <summary>
            游戏奖励
            </summary>
        </member>
        <member name="F:QL.Common.AccountingReasons.RaceReward">
            <summary>
            百人游戏比赛奖励
            </summary>
        </member>
        <member name="T:QL.Common.AIRunParam">
            <summary>
            
            </summary>
        </member>
        <member name="F:QL.Common.AIRunParam.P1">
            <summary>
            AI动作的概率控制参数
            </summary>
        </member>
        <member name="F:QL.Common.AIRunParam.P2">
            <summary>
            
            </summary>
        </member>
        <member name="F:QL.Common.AIRunParam.P3">
            <summary>
            
            </summary>
        </member>
        <member name="F:QL.Common.AIRunParam.P4">
            <summary>
            
            </summary>
        </member>
        <member name="F:QL.Common.AIRunParam.T1">
            <summary>
            AI动作的时间控制参数
            </summary>
        </member>
        <member name="F:QL.Common.AIRunParam.T2">
            <summary>
            
            </summary>
        </member>
        <member name="F:QL.Common.AIRunParam.T3">
            <summary>
            
            </summary>
        </member>
        <member name="F:QL.Common.AIRunParam.T4">
            <summary>
            
            </summary>
        </member>
        <member name="F:QL.Common.AIRunParam.num1">
            <summary>
            产生的预置AI总个数
            </summary>
        </member>
        <member name="F:QL.Common.AIRunParam.num2">
            <summary>
            
            </summary>
        </member>
        <member name="F:QL.Common.AIRunParam.num3">
            <summary>
            
            </summary>
        </member>
        <member name="F:QL.Common.AIRunParam.num4">
            <summary>
            
            </summary>
        </member>
        <member name="M:QL.Common.AIRunParam.FromJson(System.String)">
            <summary>
            
            </summary>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="F:QL.Common.AIRunParam.RoomID">
            <summary>
            所属的场地ID
            </summary>
        </member>
        <member name="M:QL.Common.AIRunParam.ToJson">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:QL.Common.InvalidValue">
            <summary>
            无效值定义
            </summary>
        </member>
        <member name="F:QL.Common.InvalidValue.InvalidID">
            <summary>
            无效的ID
            </summary>
        </member>
        <member name="F:QL.Common.InvalidValue.InvalidIdx">
            <summary>
             无效的索引
            </summary>
        </member>
        <member name="F:QL.Common.InvalidValue.InvalidTableID">
            <summary>
            无效的桌子号
            </summary>
        </member>
        <member name="F:QL.Common.InvalidValue.InvalidChairID">
            <summary>
            无效的椅子号
            </summary>
        </member>
        <member name="F:QL.Common.InvalidValue.InvlidRank">
            <summary>
            排名无效值
            </summary>
        </member>
        <member name="F:QL.Common.InvalidValue.InvalidRoomID">
            <summary>
            
            </summary>
        </member>
        <member name="T:QL.Common.ConstValueDef">
            <summary>
            常量值定义
            </summary>
        </member>
        <member name="F:QL.Common.ConstValueDef.platform_ios">
            <summary>
            ios平台
            </summary>
        </member>
        <member name="F:QL.Common.ConstValueDef.platform_android">
            <summary>
            android平台
            </summary>
        </member>
        <member name="F:QL.Common.ConstValueDef.platform_web">
            <summary>
            web版本
            </summary>
        </member>
        <member name="F:QL.Common.ConstValueDef.platform_pc">
            <summary>
            pc版本
            </summary>
        </member>
        <member name="F:QL.Common.ConstValueDef.platform_h5">
            <summary>
            h5版本
            </summary>
        </member>
        <member name="F:QL.Common.ConstValueDef.platform_mac">
            <summary>
            mac版本
            </summary>
        </member>
        <member name="T:QL.Common.PlayerBase">
            <summary>
            玩家客户端版本，带金币钻石
            </summary>
        </member>
        <member name="P:QL.Common.PlayerBase.IsAIPlayer">
            <summary>
            指示玩家是否是AI
            </summary>
            
        </member>
        <member name="F:QL.Common.PlayerBase.Gender">
            <summary>
            玩家性别 1男 2女
            </summary>
        </member>
        <member name="F:QL.Common.PlayerBase.CAttachData">
            <summary>
            客户端登录时携带的附加参数
            </summary>
        </member>
        <member name="T:QL.Common.PlayerDataSimple">
            <summary>
            玩家数据(超简版)
            </summary>
        </member>
        <member name="P:QL.Common.PlayerDataSimple.UserID">
            <summary>
            玩家ID
            </summary>
        </member>
        <member name="F:QL.Common.PlayerDataSimple.NickName">
            <summary>
            昵称
            </summary>
        </member>
        <member name="F:QL.Common.PlayerDataSimple.Header">
            <summary>
            头像
            </summary>
        </member>
        <member name="T:QL.Common.PlayerData">
            <summary>
            玩家数据
            </summary>
        </member>
        <member name="F:QL.Common.PlayerData.LV">
             <summary>
            友情树等级（下级用户总数）
             </summary> 
        </member>
        <member name="F:QL.Common.PlayerData.VipLV">
            <summary>
            玩家的VIP等级
            </summary>
        </member>
        <member name="P:QL.Common.PlayerData.MoneyBag">
            <summary>
            玩家背包数据
            </summary>
        </member>
        <member name="T:QL.Common.MoneyBag">
            <summary>
            
            </summary>
        </member>
        <member name="F:QL.Common.MoneyBag.Empty">
            <summary>
            
            </summary>
        </member>
        <member name="P:QL.Common.MoneyBag.GoldNum">
            <summary>
            金币
            </summary> 
        </member>
        <member name="P:QL.Common.MoneyBag.DiamondNum">
            <summary>
            钻石
            </summary> 
        </member>
        <member name="P:QL.Common.MoneyBag.RMBNum">
            <summary>
            玩家金豆的数量
            </summary>
        </member>
        <member name="P:QL.Common.MoneyBag.QiDouNum">
            <summary>
            玩家活跃度
            </summary>
        </member>
        <member name="P:QL.Common.MoneyBag.Item(System.Byte)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:QL.Common.MoneyBag._data">
            <summary>
            
            </summary>
        </member>
        <member name="T:QL.Common.Player">
            <summary>
            玩家客户端版本，带金币钻石
            </summary>
        </member>
        <member name="F:QL.Common.Player.UserAccount">
             <summary>
            用户名
             </summary> 
        </member>
        <member name="F:QL.Common.Player.UserLogonToken">
            <summary>
            用户登陆成功刷新的登陆令牌，下次可以使用该令牌自动登陆，有效期7天，每登陆一次刷新一次
            </summary>
        </member>
        <member name="F:QL.Common.Player.LogonCacheToken">
            <summary>
            客户端可以长时间保存玩家登陆信息令牌，可用于用户自动登录
            </summary>
        </member>
        <member name="F:QL.Common.Player.UserIP">
            <summary>
            玩家当前的外网IP
            </summary>
        </member>
        <member name="F:QL.Common.Player.AgentId">
            <summary>
            玩家绑定的代理编号Id
            </summary>
        </member>
        <member name="F:QL.Common.Player.RealName">
            <summary>
            真实姓名
            </summary>
        </member>
        <member name="F:QL.Common.Player.PhoneNum">
            <summary>
            手机号码
            </summary>
        </member>
        <member name="F:QL.Common.Player.IdCardNum">
            <summary>
            身份证号码
            </summary>
        </member>
        <member name="F:QL.Common.Player.AttachParam">
            <summary>
            附加参数
            </summary>
        </member>
        <member name="T:QL.Common.PlayerServer">
            <summary>
            玩家信息（服务器全版）
            </summary>
        </member>
        <member name="F:QL.Common.PlayerServer.UserType">
            <summary>
            用户类别
            </summary>
        </member>
        <member name="T:QL.Common.RoomInfoSingleID">
            <summary>
            场地信息的最终基类，包含一个场地ID
            </summary>
        </member>
        <member name="F:QL.Common.RoomInfoSingleID.ID">
             <summary>
            游戏场地ID
             </summary> 
        </member>
        <member name="T:QL.Common.RoomStateInfo">
            <summary>
            场地信息，包含场地的状态信息
            </summary>
        </member>
        <member name="F:QL.Common.RoomStateInfo.RoomState">
             <summary>
            0，初始，尚未编辑
            <para>1，编辑，尚未审核</para>
            <para>2，审核，尚未开始（不能再编辑）</para>
            <para>3，开始运行</para>
            <para>4，停止运行：（系统维护）</para>
            <para>5，停止运行：（租金不够）</para>
            <para>6，停止运行：（其他原因）</para>
             </summary> 
        </member>
        <member name="T:QL.Common.RoomClient">
            <summary>
            场地：客户端简版
            </summary>
        </member>
        <member name="F:QL.Common.RoomClient.GameID">
             <summary>
            游戏ID
             </summary> 
        </member>
        <member name="F:QL.Common.RoomClient.RoomType">
            <summary>
            场地所属类别（单选）
            </summary> 
        </member>
        <member name="F:QL.Common.RoomClient.BaseMoney">
             <summary>
            底金
             </summary> 
        </member>
        <member name="F:QL.Common.RoomClient.JoinMultiNum">
            <summary>
            准入倍数
            准入条件：= 底金* 准入倍数
            </summary> 
        </member>
        <member name="F:QL.Common.RoomClient.RoomLV">
             <summary>
            场地等级
             </summary> 
        </member>
        <member name="F:QL.Common.RoomClient.CheckMoneyType">
            <summary>
            结算币种
            </summary> 
        </member>
        <member name="F:QL.Common.RoomClient.TableCost">
            <summary>
            桌费
            </summary> 
        </member>
        <member name="F:QL.Common.RoomClient.Name">
            <summary>
            场地名称
            </summary> 
        </member>
        <member name="F:QL.Common.RoomClient.GameRule">
            <summary>
            游戏规则
            </summary>
        </member>
        <member name="F:QL.Common.RoomClient.TableCostMoneyType">
            <summary>
            场地桌费的币种
            </summary> 
        </member>
        <member name="F:QL.Common.RoomClient.CSpareAttrib">
            <summary>
            场地特殊属性
            </summary>
        </member>
        <member name="F:QL.Common.RoomClient.MinCount">
             <summary>
            每桌最小开始人数
             </summary> 
        </member>
        <member name="F:QL.Common.RoomClient.MaxCount">
             <summary>
            每桌最大开始人数
             </summary>  
        </member>
        <member name="T:QL.Common.RoomServer">
            <summary>
            场地：服务端全版
            </summary>
        </member>
        <member name="F:QL.Common.RoomServer.ServerInfo">
            <summary>
            服务器连接管理配置信息
            </summary>
        </member>
        <member name="P:QL.Common.RoomServer.NeedCheckUserJoinCondition">
            <summary>
            指示当前的场地是否需要检查玩家的进入条件
            </summary>
        </member>
        <member name="F:QL.Common.RoomServer.LimitAICount">
            <summary>
            当前场地的AI数量上限
            </summary> 
        </member>
        <member name="F:QL.Common.RoomServer.SpareAttrib">
            <summary>
            场地特殊属性
            </summary> 
        </member>
        <member name="F:QL.Common.RoomServer.RunParam">
            <summary>
            AI动作绑定参数
            </summary> 
        </member>
        <member name="F:QL.Common.RoomServer.PlayerReadTimeOut">
            <summary>
            玩家准备超时时间（秒）
            </summary> 
        </member>
        <member name="F:QL.Common.RoomServer.MaxLookCount">
            <summary>
            玩家最大连续旁观次数（针对不定数量的场地玩家）
            </summary> 
        </member>
        <member name="T:QL.Common.TableInfo">
            <summary>
            桌子信息
            </summary>
        </member>
        <member name="F:QL.Common.TableInfo.GroupId">
            <summary>
            只是当前桌子所属的群Id,如果房间已经绑定牌友群则为非零值，否则为零
            </summary>
        </member>
        <member name="F:QL.Common.TableInfo.TableID">
            <summary>
            桌子号
            </summary>
        </member>
        <member name="F:QL.Common.TableInfo.TablePlayerList">
            <summary>
            桌子上的玩家信息集合
            </summary>
        </member>
        <member name="T:QL.Common.TablePlayer">
            <summary>
            桌子上的玩家信息
            </summary>
        </member>
        <member name="P:QL.Common.TablePlayer.NickName">
            <summary>
            昵称
            </summary>
        </member>
        <member name="P:QL.Common.TablePlayer.FaceID">
            <summary>
            头像
            </summary>
        </member>
        <member name="P:QL.Common.TablePlayer.PlayerID">
            <summary>
            玩家ID
            </summary>
        </member>
        <member name="P:QL.Common.TablePlayer.PlayerLV">
            <summary>
            玩家成长树等级
            </summary>
        </member>
        <member name="P:QL.Common.TablePlayer.VIPLV">
            <summary>
            玩家VIP等级
            </summary>
        </member>
        <member name="P:QL.Common.TablePlayer.PlayerState">
            <summary>
            玩家在游戏服务器上的状态
            </summary>
        </member>
        <member name="P:QL.Common.TablePlayer.GoldNum">
            <summary>
            玩家持有的金豆数量
            </summary>
        </member>
        <member name="P:QL.Common.TablePlayer.RMBNum">
            <summary>
            玩家持有的当前金币数量
            </summary>
        </member>
        <member name="P:QL.Common.TablePlayer.DiamondsNum">
            <summary>
            玩家持有的钻石数量
            </summary>
        </member>
        <member name="P:QL.Common.TablePlayer.QiDouNum">
            <summary>
            玩家活跃度
            </summary>
        </member>
        <member name="P:QL.Common.TablePlayer.MoneyBag">
            <summary>
            玩家背包数据
            </summary> 
        </member>
        <member name="P:QL.Common.TablePlayer.Gender">
            <summary>
            表示玩家的性别 1-男 2-女
            </summary>
        </member>
        <member name="P:QL.Common.TablePlayer.UserIP">
            <summary>
            玩家IP
            </summary>
        </member>
        <member name="P:QL.Common.TablePlayer.CAttachData">
            <summary>
            客户端登录时携带的附加参数
            </summary>
        </member>
        <member name="M:QL.Common.TablePlayer.Clone">
            <summary>
            创建一个玩家信息的浅表副本
            </summary>
            <returns></returns>
        </member>
        <member name="M:QL.Common.TablePlayer.#ctor">
            <summary>
            初始化 TablePlayer 实例
            </summary>
        </member>
        <member name="M:QL.Common.TablePlayer.Initializer">
            <summary>
            清理玩家信息
            </summary>
        </member>
        <member name="T:QL.Common.GSTablePlayer">
            <summary>
            游戏服务器桌子玩家信息，提供给GMTools客户端使用
            </summary>
        </member>
        <member name="P:QL.Common.GSTablePlayer.TableID">
            <summary>
            玩家所在的桌子ID
            </summary>
        </member>
        <member name="P:QL.Common.GSTablePlayer.RoomID">
            <summary>
            玩家所在的场地ID
            </summary>
        </member>
        <member name="P:QL.Common.GSTablePlayer.PlayerInfo">
            <summary>
            玩家基本信息
            </summary>
        </member>
        <member name="P:QL.Common.GSTablePlayer.ChairID">
            <summary>
            玩家椅子号
            </summary>
        </member>
        <member name="T:QL.Common.UserType">
            <summary>
            指定当前登录的用户信息
            </summary>
        </member>
        <member name="F:QL.Common.UserType.Normal">
            <summary>
            正常用户
            </summary>
        </member>
        <member name="F:QL.Common.UserType.Tester">
            <summary>
            测试用户
            </summary>
        </member>
        <member name="F:QL.Common.UserType.GM">
            <summary>
            GM用户
            </summary>
        </member>
        <member name="T:QL.Common.GameState">
            <summary>
            游戏状态
            0:正常
            1:显示但不准进入
            2:不显示
            </summary>
        </member>
        <member name="F:QL.Common.GameState.Normal">
            <summary>
            正常
            </summary>
        </member>
        <member name="F:QL.Common.GameState.ShowCannotJoin">
            <summary>
            显示但不准进入
            </summary>
        </member>
        <member name="F:QL.Common.GameState.Hide">
            <summary>
            隐藏,不显示
            </summary>
        </member>
        <member name="T:QL.Common.RoomState">
            <summary>
            游戏场地状态
            0，初始，尚未编辑 （保存）
            1，编辑，尚未审核 （提交）
            2，审核，尚未开始（不能再编辑）
            3，开始运行
            4，停止运行：（系统维护）
            5，停止运行：（租金不够）
            6，停止运行：（其他原因）
            7. 停止运行：（红包不足）
            8. 停止运行: 商户停办
            </summary>
        </member>
        <member name="F:QL.Common.RoomState.Unknown">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:QL.Common.RoomState.Running">
            <summary>
            正常运行
            </summary>
        </member>
        <member name="F:QL.Common.RoomState.Stop">
            <summary>
            停止:系统维护
            </summary>
        </member>
        <member name="F:QL.Common.RoomState.StopByNoMoney">
            <summary>
            停止:租金不够
            </summary>
        </member>
        <member name="F:QL.Common.RoomState.StopByOtherReason">
            <summary>
            停止:其他原因
            </summary>
        </member>
        <member name="F:QL.Common.RoomState.StopByNoRedGift">
            <summary>
            停止:红包不足
            </summary>
        </member>
        <member name="F:QL.Common.RoomState.StopByAgentStop">
            <summary>
            停止：商户停办
            </summary>
        </member>
        <member name="F:QL.Common.RoomState.Upcoming">
            <summary>
            等待：即将开始比赛
            </summary>
        </member>
        <member name="T:QL.Common.CurrencyType">
            <summary>
            货币种类
            </summary>
        </member>
        <member name="F:QL.Common.CurrencyType.Unknown">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:QL.Common.CurrencyType.RMB">
            <summary>
            人民币
            </summary>
        </member>
        <member name="F:QL.Common.CurrencyType.Diamond">
            <summary>
            钻石
            </summary>
        </member>
        <member name="F:QL.Common.CurrencyType.Gold">
            <summary>
            金币
            </summary>
        </member>
        <member name="F:QL.Common.CurrencyType.QiDou">
            <summary>
            七豆
            </summary>
        </member>
        <member name="F:QL.Common.CurrencyType.MatchScore">
            <summary>
            记分币种
            </summary>
        </member>
        <member name="T:QL.Common.RoomCostPayType">
            <summary>
            房费的付费方式
            </summary>
        </member>
        <member name="F:QL.Common.RoomCostPayType.Unknown">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:QL.Common.RoomCostPayType.AA">
            <summary>
            AA制
            </summary>
        </member>
        <member name="F:QL.Common.RoomCostPayType.RoomOwnerPay">
            <summary>
            房主付费
            </summary>
        </member>
        <member name="F:QL.Common.RoomCostPayType.GroupOwnerPay">
            <summary>
            亲友圈圈主支付
            </summary>
        </member>
        <member name="T:QL.Common.GameType">
            <summary>
            游戏类型
            </summary>
        </member>
        <member name="F:QL.Common.GameType.Unknown">
            <summary>
            敬请期待
            </summary>
        </member>
        <member name="F:QL.Common.GameType.VideoGame">
            <summary>
            电玩游戏
            </summary>
        </member>
        <member name="F:QL.Common.GameType.ChessGame">
            <summary>
            扑克牌类游戏
            </summary>
        </member>
        <member name="F:QL.Common.GameType.Mahjong">
            <summary>
            麻将类游戏
            </summary>
        </member>
        <member name="T:QL.Common.GameLabelType">
            <summary>
            游戏标签类型
            </summary>
        </member>
        <member name="F:QL.Common.GameLabelType.None">
            <summary>
            无
            </summary>
        </member>
        <member name="F:QL.Common.GameLabelType.Fire">
            <summary>
            火爆
            </summary>
        </member>
        <member name="F:QL.Common.GameLabelType.Free">
            <summary>
            免费
            </summary>
        </member>
        <member name="F:QL.Common.GameLabelType.InTest">
            <summary>
            内测
            </summary>
        </member>
        <member name="F:QL.Common.GameLabelType.Maintain">
            <summary>
            维护中
            </summary>
        </member>
        <member name="F:QL.Common.GameLabelType.LimitFree">
            <summary>
            限免
            </summary>
        </member>
        <member name="F:QL.Common.GameLabelType.Hot">
            <summary>
            热门
            </summary>
        </member>
        <member name="F:QL.Common.GameLabelType.New">
            <summary>
            新
            </summary>
        </member>
        <member name="F:QL.Common.GameLabelType.PubTest">
            <summary>
            公测
            </summary>
        </member>
        <member name="T:QL.Common.RoomType">
            <summary>
            场地类型
            </summary>
        </member>
        <member name="F:QL.Common.RoomType.Unknown">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:QL.Common.RoomType.MultipleGame">
            <summary>
            多人游戏场地
            </summary>
        </member>
        <member name="F:QL.Common.RoomType.MachineGame">
            <summary>
            机台
            </summary>
        </member>
        <member name="F:QL.Common.RoomType.HundredGame">
            <summary>
            百人
            </summary>
        </member>
        <member name="F:QL.Common.RoomType.MathRoomGame">
            <summary>
            比赛场地
            </summary>
        </member>
        <member name="F:QL.Common.RoomType.MomentsGame">
            <summary>
            朋友圈游戏
            </summary>
        </member>
        <member name="T:QL.Common.TableStatus">
            <summary>
            桌子状态
            </summary>
        </member>
        <member name="F:QL.Common.TableStatus.free">
            <summary>
            空闲
            </summary>
        </member>
        <member name="F:QL.Common.TableStatus.gameing">
            <summary>
            游戏中
            </summary>
        </member>
        <member name="T:QL.Common.GState">
            <summary>
            玩家在游戏服务器GS上的状态
            </summary>
        </member>
        <member name="F:QL.Common.GState.Unknown">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:QL.Common.GState.Free">
            <summary>
            空闲（刚进入场地时的状态）
            </summary>
        </member>
        <member name="F:QL.Common.GState.HasTableState">
            <summary>
            系统已经分配椅子号，但玩家还没有坐下
            </summary>
        </member>
        <member name="F:QL.Common.GState.SitDown">
            <summary>
            玩家坐下
            </summary>
        </member>
        <member name="F:QL.Common.GState.PlayerReady">
            <summary>
            玩家已经准备
            </summary>
        </member>
        <member name="F:QL.Common.GState.Gaming">
            <summary>
            配桌成功开始游戏
            </summary>
        </member>
        <member name="F:QL.Common.GState.OnLooking">
            <summary>
            旁观状态
            </summary>
        </member>
        <member name="F:QL.Common.GState.OfflineInGame">
            <summary>
            某局游戏中断线
            </summary>
        </member>
        <member name="T:QL.Common.ServerType">
            <summary>
            连接服务器类型枚举
            </summary>
        </member>
        <member name="F:QL.Common.ServerType.Unknown">
            <summary>
            未知类型
            </summary>
        </member>
        <member name="F:QL.Common.ServerType.GameServer">
            <summary>
            游戏服务器连接
            </summary>
        </member>
        <member name="F:QL.Common.ServerType.LogonServer">
            <summary>
            登录服务器连接
            </summary>
        </member>
        <member name="F:QL.Common.ServerType.WebApiServer">
            <summary>
            提供HttpAPI接口的服务器
            </summary>
        </member>
        <member name="F:QL.Common.ServerType.ManagerServer">
            <summary>
            管理服务器
            </summary>
        </member>
        <member name="T:QL.Common.ServerState">
            <summary>
            连接客户端类型枚举
            </summary>
        </member>
        <member name="F:QL.Common.ServerState.Runing">
            <summary>
            正在运行
            </summary>
        </member>
        <member name="F:QL.Common.ServerState.Stoped">
            <summary>
            停止服务
            </summary>
        </member>
        <member name="F:QL.Common.ServerState.Restart">
            <summary>
            服务器重启状态
            </summary>
        </member>
        <member name="T:QL.Common.SystemErrorCode">
            <summary>
            错误码定义
            </summary>
        </member>
        <member name="F:QL.Common.SystemErrorCode.Success">
            <summary>
            操作成功
            </summary>
        </member>
        <member name="F:QL.Common.SystemErrorCode.RequestFail">
            <summary>
            请求失败
            </summary>
        </member>
        <member name="F:QL.Common.SystemErrorCode.ServerMaintain">
            <summary>
            服务器维护
            </summary>
        </member>
        <member name="F:QL.Common.SystemErrorCode.ExitRoomFail">
            <summary>
            玩家退出场地失败，游戏已经开始
            </summary>
        </member>
        <member name="F:QL.Common.SystemErrorCode.RequestTableFail">
            <summary>
            请求配桌失败
            </summary>
        </member>
        <member name="F:QL.Common.SystemErrorCode.RemoteLogin">
            <summary>
            玩家重复登录通知
            </summary>
        </member>
        <member name="F:QL.Common.SystemErrorCode.LoginFail">
            <summary>
            登录失败
            </summary>
        </member>
        <member name="F:QL.Common.SystemErrorCode.JoinRoomFail">
            <summary>
            进入场地失败
            </summary>
        </member>
        <member name="T:QL.Common.SubscribeMessageOpType">
            <summary>
            订阅或取消的操作类别
            </summary>
        </member>
        <member name="F:QL.Common.SubscribeMessageOpType.Subscribe">
            <summary>
            订阅消息
            </summary>
        </member>
        <member name="F:QL.Common.SubscribeMessageOpType.Unsubscribe">
            <summary>
            取消订阅
            </summary>
        </member>
        <member name="F:QL.Common.SubscribeMessageOpType.UnsubscribeAll">
            <summary>
            取消所有订阅
            </summary>
        </member>
        <member name="F:QL.Common.SubscribeMessageOpType.RunAction">
            <summary>
            执行方法
            </summary>
        </member>
        <member name="F:QL.Common.SubscribeMessageOpType.SendMessage">
            <summary>
            发送消息
            </summary>
        </member>
        <member name="T:QL.Common.LoginType">
            <summary>
            用户登录方式
            </summary>
        </member>
        <member name="F:QL.Common.LoginType.Unknown">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:QL.Common.LoginType.Normal">
            <summary>
            玩家正常登陆，登陆采用输入账号和密码的方式登陆游戏服务器
            </summary>
        </member>
        <member name="F:QL.Common.LoginType.Onekey">
            <summary>
            玩家采用一键登录（当玩家在第一次使用当前客户端自动登陆的）
            </summary>
        </member>
        <member name="F:QL.Common.LoginType.UserLogonToken">
            <summary>
            玩家采用登陆令牌自动登陆方式登陆
            </summary>
        </member>
        <member name="T:QL.Common.KeyValueData">
            <summary>
            系统配置数据实体
            </summary>
        </member>
        <member name="F:QL.Common.KeyValueData.Key">
            <summary>
            系统配置信息的Key
            </summary>
        </member>
        <member name="F:QL.Common.KeyValueData.Value">
            <summary>
            系统配置的对应键的值
            </summary>
        </member>
        <member name="T:QL.Common.UserTagObjectBase">
            <summary>
            
            </summary>
        </member>
        <member name="P:QL.Common.UserTagObjectBase.Tag">
            <summary>
            客户端使用的用户对象信息
            </summary>
        </member>
        <member name="T:QL.Common.GameInfoBaseForID">
            <summary>
            游戏信息的基类，只有一个游戏ID信息
            </summary>
        </member>
        <member name="F:QL.Common.GameInfoBaseForID.GameID">
            <summary>
            游戏ID
            </summary>
        </member>
        <member name="T:QL.Common.GameInfo">
            <summary>
            游戏基本信息
            </summary>
        </member>
        <member name="F:QL.Common.GameInfo.GameName">
            <summary>
            游戏名称
            </summary>
        </member>
        <member name="F:QL.Common.GameInfo.ModuleName">
            <summary>
            游戏模块名称
            </summary>
        </member>
        <member name="F:QL.Common.GameInfo.GameType">
            <summary>
            游戏类型（多选）
            </summary>
        </member>
        <member name="F:QL.Common.GameInfo.GameStatus">
            <summary>
            游戏状态
            </summary>
        </member>
        <member name="F:QL.Common.GameInfo.LatestVersion">
            <summary>
            最新版本
            </summary> 
        </member>
        <member name="F:QL.Common.GameInfo.SortID">
            <summary>
            排序号码
            </summary> 
        </member>
        <member name="F:QL.Common.GameInfo.SupportPlatform">
            <summary>
            支持平台
            </summary>
        </member>
        <member name="F:QL.Common.GameInfo.GameCity">
            <summary>
            支持平台
            </summary>
        </member>
        <member name="F:QL.Common.GameInfo.GameDesc">
            <summary>
            游戏描述
            </summary>
        </member>
        <member name="F:QL.Common.GameInfo.GameLabel">
            <summary>
            游戏标签类型
            </summary>
        </member>
        <member name="M:QL.Common.GameInfo.CheckSupportPlatform(System.UInt16)">
            <summary>
            
            </summary>
            <param name="platform"></param>
            <returns></returns>
        </member>
        <member name="T:QL.Common.PropEntity">
            <summary>
            道具实体
            </summary>
        </member>
        <member name="F:QL.Common.PropEntity.ID">
            <summary>
            ID
            </summary>
        </member>
        <member name="F:QL.Common.PropEntity.propType">
            <summary>
            类型
            </summary>
        </member>
        <member name="F:QL.Common.PropEntity.propCount">
            <summary>
            数量
            </summary>
        </member>
        <member name="T:QL.Common.TableType">
            <summary>
            表示请求的桌子类型
            </summary>
        </member>
        <member name="F:QL.Common.TableType.Default">
            <summary>
            默认类型
            </summary>
        </member>
        <member name="F:QL.Common.TableType.BuildOneSelf">
            <summary>
            自建桌子
            </summary>
        </member>
        <member name="T:QL.Common.EnterRoomMethod">
            <summary>
            指示进入场地的方式
            </summary>
        </member>
        <member name="F:QL.Common.EnterRoomMethod.RoomID">
            <summary>
            使用场地编号进入场地
            </summary>
        </member>
        <member name="F:QL.Common.EnterRoomMethod.TableID">
            <summary>
            使用创建房间的房间编号进入场地
            </summary>
        </member>
        <member name="F:QL.Common.EnterRoomMethod.QueryTableInfo">
            <summary>
            查询指定桌子Id的桌子信息
            </summary>
        </member>
        <member name="T:QL.Common.SystemHornType">
            <summary>
            游戏服务端发送跑马灯公告
            </summary>
        </member>
        <member name="F:QL.Common.SystemHornType.Unkonown">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:QL.Common.SystemHornType.System">
            <summary>
            指定系统跑马灯类型
            </summary>
        </member>
        <member name="F:QL.Common.SystemHornType.Server">
            <summary>
            服务器跑马灯
            </summary>
        </member>
        <member name="F:QL.Common.SystemHornType.Game">
            <summary>
            游戏内跑马灯
            </summary>
        </member>
        <member name="F:QL.Common.SystemHornType.Hall">
            <summary>
            大厅（游戏外）跑马灯
            </summary>
        </member>
        <member name="F:QL.Common.SystemHornType.All">
            <summary>
            所有
            </summary>
        </member>
        <member name="T:QL.Common.SystemHornEntity">
            <summary>
            系统跑马灯消息实体
            </summary>
        </member>
        <member name="F:QL.Common.SystemHornEntity.LoopCount">
            <summary>
            跑马灯循环次数
            </summary>
        </member>
        <member name="F:QL.Common.SystemHornEntity.Context">
            <summary>
            跑马灯内容
            </summary>
        </member>
        <member name="F:QL.Common.SystemHornEntity.HornType">
            <summary>
            跑马灯类别
            </summary>
        </member>
        <member name="F:QL.Common.SystemHornEntity.AttachData">
            <summary>
            附加参数
            </summary>
        </member>
        <member name="F:QL.Common.SystemHornEntity.LoopInterval">
            <summary>
            循环间隔（单位秒）
            </summary>
        </member>
        <member name="T:QL.Common.SystemHornServerEntity">
            <summary>
            服务器数据交换时使用的跑马灯实体信息
            </summary>
        </member>
        <member name="T:QL.Common.UserCreateTableNoticeStatus">
            <summary>
            
            </summary>
        </member>
        <member name="F:QL.Common.UserCreateTableNoticeStatus.CreateTable">
            <summary>
            指示创建桌子
            </summary>
        </member>
        <member name="F:QL.Common.UserCreateTableNoticeStatus.TableInGameing">
            <summary>
            指示桌子游戏开始
            </summary>
        </member>
        <member name="F:QL.Common.UserCreateTableNoticeStatus.TableGameOver">
            <summary>
            指示桌子游戏结束
            </summary>
        </member>
        <member name="F:QL.Common.UserCreateTableNoticeStatus.TableUpdate">
            <summary>
            刷新状态数据
            </summary>
        </member>
        <member name="F:QL.Common.UserCreateTableNoticeStatus.ChangeTableOwner">
            <summary>
            
            </summary>
        </member>
        <member name="T:QL.Common.PlayerMoneyBag">
            
             @创建时间：2017年03月30日 09:42:19
             @创建人员：DESKTOP-TKSI8P1\Liusiyu
             @备注信息：玩家的财务背包数据（提供数据更新推送服务）
            
        </member>
        <member name="F:QL.Common.PlayerMoneyBag.UserID">
            <summary>
            
            </summary>
        </member>
        <member name="T:QL.Common.PlayerMoneyBagBase">
            <summary>
            
            </summary>
        </member>
        <member name="F:QL.Common.PlayerMoneyBagBase.MoneyType">
            <summary>
            币种类型
            </summary>
        </member>
        <member name="F:QL.Common.PlayerMoneyBagBase.MoneyNum">
            <summary>
            币种数量
            </summary>
        </member>
        <member name="T:QL.Common.UserCreateTableInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:QL.Common.UserCreateTableInfo.RoomOwner">
            <summary>
            所属的房主Id
            </summary>
        </member>
        <member name="P:QL.Common.UserCreateTableInfo.GameNum">
            <summary>
            当前游戏已经完成的局数
            </summary>
        </member>
        <member name="F:QL.Common.UserCreateTableInfo.IsFreeCreate">
            <summary>
            指示是否是在请有权自由创建的房间
            </summary>
        </member>
        <member name="F:QL.Common.UserCreateTableInfo.IsFullUsered">
            <summary>
            指示当前桌子是否曾经出现过满员的状态，亲友圈使用
            </summary>
        </member>
        <member name="F:QL.Common.UserCreateTableInfo.TableId">
            <summary>
            创建的房间号
            </summary>
        </member>
        <member name="F:QL.Common.UserCreateTableInfo.GameId">
            <summary>
            创建桌子所属的游戏
            </summary>
        </member>
        <member name="F:QL.Common.UserCreateTableInfo.RoomId">
            <summary>
            创建桌子所属的场地
            </summary>
        </member>
        <member name="F:QL.Common.UserCreateTableInfo.PlayerCount">
            <summary>
            玩家人数
            </summary>
        </member>
        <member name="F:QL.Common.UserCreateTableInfo.status">
            <summary>
            桌子的状态
            </summary>
        </member>
        <member name="F:QL.Common.UserCreateTableInfo.GroupId">
            <summary>
            该房间所属的群Id
            </summary>
        </member>
        <member name="F:QL.Common.UserCreateTableInfo.AttachParams">
            <summary>
            游戏内发送给客户端的附加参数
            </summary>
        </member>
        <member name="F:QL.Common.UserCreateTableInfo.Id">
            <summary>
            
            </summary>
        </member>
        <member name="F:QL.Common.UserCreateTableInfo.PlayerHeaders">
            <summary>
            
            </summary>
        </member>
        <member name="T:QL.Common.GameMessageCommon.GameMessageCommonSubCode">
            <summary>
            消息主副命令码定义
            </summary>
        </member>
        <member name="F:QL.Common.GameMessageCommon.GameMessageCommonSubCode.MainId">
            <summary>
            大厅和游戏插件的直接交互消息主码
            </summary>
        </member>
        <member name="F:QL.Common.GameMessageCommon.GameMessageCommonSubCode.MSG_C_Hall2GamePluginMessage">
            <summary>
            
            </summary>
        </member>
        <member name="T:QL.Common.GameMessageCommon.GameMessageCommonBase">
            <summary>
            大厅和游戏插件直接的交互公共消息基础基类
            </summary>
        </member>
        <member name="F:QL.Common.GameMessageCommon.GameMessageCommonBase.ServerUuid">
            <summary>
            服务器编号（指定该消息将要被发送到的服务器编号）,可以在房间信息获取
            </summary>
        </member>
        <member name="F:QL.Common.GameMessageCommon.GameMessageCommonBase.TableID">
            <summary>
            消息需要投递到的桌子编号
            </summary>
        </member>
        <member name="F:QL.Common.GameMessageCommon.GameMessageCommonBase.UserId">
            <summary>
            该条消息的发送者，不用赋值，平台在接收到该消息时会直接绑定当前会话的玩家ID
            </summary>
        </member>
        <member name="F:QL.Common.GameMessageCommon.GameMessageCommonBase.isRunOnRoomThread">
            <summary>
            指示这个消息是否运行在指定的场地线程上
            </summary>
        </member>
        <member name="F:QL.Common.GameMessageCommon.GameMessageCommonBase.IsCreateRoom">
            <summary>
            指示当前的房间是不是创建房间模式
            </summary>
        </member>
        <member name="T:QL.Common.GameMessageCommon.MSG_C_Hall2GamePluginMessage">
            <summary>
            
            </summary>
        </member>
        <member name="F:QL.Common.GameMessageCommon.MSG_C_Hall2GamePluginMessage.Handle">
            <summary>
            处理命令的名称
            </summary>
        </member>
        <member name="F:QL.Common.GameMessageCommon.MSG_C_Hall2GamePluginMessage.Params">
            <summary>
            处理命令的参数
            </summary>
        </member>
        <member name="T:QL.Common.PlayerForFeeDataMultiple">
            <summary>
            表示玩家在服务器平台中进行财务结算的信息(多人)
            </summary>
        </member>
        <member name="F:QL.Common.PlayerForFeeDataMultiple.FeeDataType">
            <summary>
            结算类型
            </summary>
        </member>
        <member name="F:QL.Common.PlayerForFeeDataMultiple.MoneyType">
            <summary>
            结算币种
            </summary>
        </member>
        <member name="F:QL.Common.PlayerForFeeDataMultiple.Mark">
            <summary>
            结算备注。（结算时填写的交易说明文本）
            </summary>                        
        </member>
        <member name="F:QL.Common.PlayerForFeeDataMultiple.UserAuditDataArray">
            <summary>
            表示多个人结算信息的一个数组，现在可以传入空值来直接进行房费之类的单独结算
            </summary>
        </member>
        <member name="F:QL.Common.PlayerForFeeDataMultiple.NoCheckUserMoney">
            <summary>
            指示结算是否检查玩家的背包余额，如果不检查为 1 否则为 非 1 值
            </summary>
        </member>
        <member name="F:QL.Common.PlayerForFeeDataMultiple.RoomCostType">
            <summary>
            本次结算的房费币种类型
            </summary>
        </member>
        <member name="F:QL.Common.PlayerForFeeDataMultiple.RoomCostPayType">
            <summary>
            当前房间房费的支付方式
            </summary>
        </member>
        <member name="F:QL.Common.PlayerForFeeDataMultiple.RoomCost">
            <summary>
            单个玩家的房费值（单个玩家，即使是房主买单也是单个玩家的房费）具体房费由结算的玩家数量决定包含AI在内
            </summary>
        </member>
        <member name="F:QL.Common.PlayerForFeeDataMultiple.FeeUserCount">
            <summary>
            本次结算的玩家数量，如果指定为零平台会自动计算赋值，如果指定了大于零的数值，平台以传入的数值为准，不会计算赋值
            </summary>
        </member>
        <member name="F:QL.Common.PlayerForFeeDataMultiple.GameNum">
            <summary>
            本次计算时的游戏局数
            </summary>
        </member>
        <member name="F:QL.Common.PlayerForFeeDataMultiple.TotalGameNum">
            <summary>
            本次开局的总局数
            </summary>
        </member>
        <!-- 对于成员“F:QL.Common.PlayerForFeeDataMultiple.ContinueGameNum”忽略有格式错误的 XML 注释 -->
        <member name="F:QL.Common.PlayerForFeeDataMultiple.GroupId">
            <summary>
            本游戏所在的亲友圈编号，不需要赋值，平台会自动赋值
            </summary>
        </member>
        <member name="F:QL.Common.PlayerForFeeDataMultiple.RoomID">
            <summary>
            玩家结算数据的场地ID，不需要赋值，平台会自动赋值
            </summary>
        </member>
        <member name="F:QL.Common.PlayerForFeeDataMultiple.GameId">
            <summary>
            本次结算的游戏编号，不需要赋值，平台会自动赋值
            </summary>
        </member>
        <member name="F:QL.Common.PlayerForFeeDataMultiple.TableId">
            <summary>
            本次结算的桌子编号，不需要赋值，平台会自动赋值
            </summary>
        </member>
        <member name="F:QL.Common.PlayerForFeeDataMultiple.OwnerId">
            <summary>
            当前结算时桌子的房主Id，不需要赋值，平台会自动赋值
            </summary>
        </member>
        <member name="F:QL.Common.PlayerForFeeDataMultiple.RuleId">
            <summary>
            当前结算时桌子的亲友圈玩法Id，不需要赋值，平台会自动赋值
            </summary>
        </member>
        <member name="F:QL.Common.PlayerForFeeDataMultiple.RecordMid">
            <summary>
            当前结算时桌子的录像主局号，不需要赋值，平台会自动赋值
            </summary>
        </member>
        <member name="F:QL.Common.PlayerForFeeDataMultiple.PayRoomCostUserID">
            <summary>
            本次房费的结算人 UserID ；如果本局的桌费是房主买单则填写房主的UserID  玩家平摊传入 0 即可
            桌子的房主ID可以通过宿主接口获取
            </summary>
        </member>
        <member name="T:QL.Common.ForFeeDataType">
            <summary>
            服务端统一结算类型
            </summary>
        </member>
        <member name="F:QL.Common.ForFeeDataType.UnKonwn">
            <summary>
            UnKonwn
            </summary>
        </member>
        <member name="F:QL.Common.ForFeeDataType.绑定手机赠送">
            <summary>
            绑定手机赠送
            </summary>
        </member>
        <member name="F:QL.Common.ForFeeDataType.绑定邀请码赠送">
            <summary>
            绑定邀请码赠送
            </summary>
        </member>
        <member name="F:QL.Common.ForFeeDataType.问题反馈奖励">
            <summary>
            问题反馈奖励
            </summary>
        </member>
        <member name="F:QL.Common.ForFeeDataType.系统补偿">
            <summary>
            系统补偿
            </summary>
        </member>
        <member name="F:QL.Common.ForFeeDataType.系统充值赠送">
            <summary>
            系统充值赠送
            </summary>
        </member>
        <member name="F:QL.Common.ForFeeDataType.系统赠送">
            <summary>
            系统赠送
            </summary>
        </member>
        <member name="F:QL.Common.ForFeeDataType.玩家钻石兑换金币">
            <summary>
            玩家钻石兑换金币
            </summary>
        </member>
        <member name="F:QL.Common.ForFeeDataType.玩家充值">
            <summary>
            玩家充值
            </summary>
        </member>
        <member name="F:QL.Common.ForFeeDataType.报名扣费">
            <summary>
            报名扣费
            </summary>
        </member>
        <member name="F:QL.Common.ForFeeDataType.百人游戏消费">
            <summary>
            百人游戏消费
            </summary>
        </member>
        <member name="F:QL.Common.ForFeeDataType.股票交易">
            <summary>
            股票交易
            </summary>
        </member>
        <member name="F:QL.Common.ForFeeDataType.系统充值奖励">
            <summary>
            系统充值奖励
            </summary>
        </member>
        <member name="F:QL.Common.ForFeeDataType.玩家购买vip">
            <summary>
            玩家购买vip
            </summary>
        </member>
        <member name="F:QL.Common.ForFeeDataType.玩家幸运转盘抽奖">
            <summary>
            玩家幸运转盘抽奖
            </summary>
        </member>
        <member name="F:QL.Common.ForFeeDataType.玩家登录大转盘抽奖">
            <summary>
            玩家登录大转盘抽奖
            </summary>
        </member>
        <member name="F:QL.Common.ForFeeDataType.扣除奖励红包">
            <summary>
            扣除奖励红包
            </summary>
        </member>
        <member name="F:QL.Common.ForFeeDataType.加入报名费">
            <summary>
            加入报名费
            </summary>
        </member>
        <member name="F:QL.Common.ForFeeDataType.玩家道具消耗">
            <summary>
            玩家道具消耗
            </summary>
        </member>
        <member name="F:QL.Common.ForFeeDataType.投放红包">
            <summary>
            投放红包
            </summary>
        </member>
        <member name="F:QL.Common.ForFeeDataType.Ai游戏奖励返还">
            <summary>
            Ai游戏奖励返还
            </summary>
        </member>
        <member name="F:QL.Common.ForFeeDataType.玩家购买道具">
            <summary>
            玩家购买道具
            </summary>
        </member>
        <member name="F:QL.Common.ForFeeDataType.商户游戏结算">
            <summary>
            商户游戏结算
            </summary>
        </member>
        <member name="F:QL.Common.ForFeeDataType.多人游戏结算">
            <summary>
            多人游戏结算
            </summary>
        </member>
        <member name="F:QL.Common.ForFeeDataType.玩家收取友情树果实">
            <summary>
            玩家收取友情树果实
            </summary>
        </member>
        <member name="F:QL.Common.ForFeeDataType.玩家收取友情树礼包">
            <summary>
            玩家收取友情树礼包
            </summary>
        </member>
        <member name="F:QL.Common.ForFeeDataType.玩家之间转账">
            <summary>
            玩家之间转账
            </summary>
        </member>
        <member name="F:QL.Common.ForFeeDataType.玩家参与众筹消耗">
            <summary>
            玩家参与众筹消耗
            </summary>
        </member>
        <member name="F:QL.Common.ForFeeDataType.合成实物消耗">
            <summary>
            合成实物消耗
            </summary>
        </member>
        <member name="F:QL.Common.ForFeeDataType.玩家收取邮件附件">
            <summary>
            玩家收取邮件附件
            </summary>
        </member>
        <member name="F:QL.Common.ForFeeDataType.玩家红包兑换奖品">
            <summary>
            玩家红包兑换奖品
            </summary>
        </member>
        <member name="F:QL.Common.ForFeeDataType.初始化充值扣除">
            <summary>
            初始化充值扣除
            </summary>
        </member>
        <member name="F:QL.Common.ForFeeDataType.房费扣除">
            <summary>
            房费扣除
            </summary>
        </member>
        <member name="T:QL.Common.ForFeeDataTypeDic">
            <summary>
            服务端统一结算类型字典索引
            </summary>
        </member>
        <member name="F:QL.Common.ForFeeDataTypeDic.FeeDataType">
            <summary>
            FeeDataType 的值对字符串的映射信息
            </summary>
        </member>
        <member name="T:QL.Common.UserAuditData">
            <summary>
            数据库用户结算数据实体（多人）
            </summary>
        </member>
        <member name="F:QL.Common.UserAuditData.UserID">
            <summary>
            结算的玩家ID,如果是AI直接填写AI的玩家ID即可，平台会对AI的结算进行统一处理
            </summary>
        </member>
        <member name="F:QL.Common.UserAuditData.MoneyNum">
            <summary>
            结算的数量，相对于币种的增加或者扣除数量
            </summary>
        </member>
        <member name="F:QL.Common.UserAuditData.CustomParam">
            <summary>
            结算自定义参数对象，通知结算结果时原样带回
            </summary>
        </member>
        <member name="F:QL.Common.UserAuditData.PlayerActNum">
            <summary>
            可选，记录本次结算和玩家结算的相关数据。特殊属性之类的计分结算有效，其他会被平台忽略
            </summary>
        </member>
        <member name="T:QL.Common.UserAuditResultTable">
            <summary>
            玩家结算处理结果的信息表，已经排除掉AI信息
            </summary>
        </member>
        <member name="F:QL.Common.UserAuditResultTable.MoneyType">
            <summary>
            结算时所传入的币种，原样带回
            </summary>
        </member>
        <member name="F:QL.Common.UserAuditResultTable.UserAuditResultArray">
            <summary>
            玩家结算信息的数据表，表示每个玩家的结算结果信息，注意：结算表中的数据只是包含真人玩家的结算信息，不包含AI的结算信息
            </summary>
        </member>
        <member name="T:QL.Common.SingleUserAuditResult">
            <summary>
            对于单个玩家的结算结果信息
            </summary>
        </member>
        <member name="F:QL.Common.SingleUserAuditResult.IsSuccess">
            <summary>
            表示玩家的结算是否成功
            </summary>
        </member>
        <member name="F:QL.Common.SingleUserAuditResult.RealFeeMoneyNum">
            <summary>
            本次结算中真实实际扣除金额，当结算模式不检查玩家余额的情况下，该值表示玩家实际扣除背包的数量
            </summary>
        </member>
        <member name="T:QL.Common.ServerInfo">
            <summary>
            服务器信息
            </summary>
        </member>
        <member name="F:QL.Common.ServerInfo.Uuid">
            <summary>
            服务器编号
            </summary>
        </member>
        <member name="F:QL.Common.ServerInfo.Adress">
            <summary>
            服务器地址
            </summary>
        </member>
        <member name="F:QL.Common.ServerInfo.Port">
            <summary>
            服务器端口
            </summary>
        </member>
        <member name="T:QL.Common.UserLSLocation">
            <summary>
            玩家在登录服务器上的位置信息
            </summary>
        </member>
        <member name="F:QL.Common.UserLSLocation.UserId">
            <summary>
            玩家Id
            </summary>
        </member>
        <member name="F:QL.Common.UserLSLocation.ServerUUID">
            <summary>
            
            </summary>
        </member>
        <member name="F:QL.Common.UserLSLocation.SessionId">
            <summary>
            
            </summary>
        </member>
        <member name="T:QL.Common.UserGSLocation">
            <summary>
            玩家在登录服务器上的位置信息
            </summary>
        </member>
        <member name="F:QL.Common.UserGSLocation.UserId">
            <summary>
            玩家Id
            </summary>
        </member>
        <member name="F:QL.Common.UserGSLocation.GsInfo">
            <summary>
            玩家断线所在的场地Id
            </summary>
        </member>
        <member name="T:QL.Common.UserCRoomInfo">
            <summary>
            玩家将创建的房间信息
            </summary>
        </member>
        <member name="F:QL.Common.UserCRoomInfo.MaxUserCount">
            <summary>
            
            </summary>
        </member>
        <member name="F:QL.Common.UserCRoomInfo.ServerInfo">
            <summary>
            当前房间的服务器信息
            </summary>
        </member>
        <member name="T:QL.Common.R2GsInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:QL.Common.R2GsInfo.RoomId">
            <summary>
            场地Id
            </summary>
        </member>
        <member name="F:QL.Common.R2GsInfo.SInfo">
            <summary>
            服务信息
            </summary>
        </member>
        <member name="T:QL.Common.PhoneSmsCode">
            <summary>
            手机验证码相关信息
            </summary>
        </member>
        <member name="F:QL.Common.PhoneSmsCode.Phone">
            <summary>
            发送短信的手机号码
            </summary>
        </member>
        <member name="F:QL.Common.PhoneSmsCode.SmsCode">
            <summary>
            手机验证码
            </summary>
        </member>
        <member name="F:QL.Common.PhoneSmsCode.Scene">
            <summary>
            验证码的使用场景
            </summary>
        </member>
        <member name="F:QL.Common.PhoneSmsCode.TryCount">
            <summary>
            验证码验证次数
            </summary>
        </member>
        <member name="F:QL.Common.PhoneSmsCode.SendTime">
            <summary>
            验证码的发送时间
            </summary>
        </member>
        <member name="T:QL.Common.MSG_T_TestMessage">
            <summary>
            提供序列化测试类
            </summary>
        </member>
        <member name="F:QL.Common.MSG_T_TestMessage.V7">
            <summary>
            
            </summary>
        </member>
        <member name="T:QL.Common.MSG_C_LoginByAccount">
            <summary>
            客户端登录平台游戏服务器统一请求消息
            </summary>
        </member>
        <member name="F:QL.Common.MSG_C_LoginByAccount.PlayerLogonType">
            <summary>
            登录类型（必填）
            </summary>
        </member>
        <member name="F:QL.Common.MSG_C_LoginByAccount.Account">
            <summary>
            登录账号（必填,一键登陆时该字段可以省略）
            </summary>
        </member>
        <member name="F:QL.Common.MSG_C_LoginByAccount.Password">
            <summary>
            登录密码，如果采用令牌登陆直接在这个字段填写登陆令牌（必填,一键登陆时该字段可以省略）
            </summary>
        </member>
        <member name="F:QL.Common.MSG_C_LoginByAccount.CAttachData">
            <summary>
            客户端登录时携带的附加参数
            </summary>
        </member>
        <member name="T:QL.Common.MSG_C_EnterGameRoom">
            <summary>
            进入游戏场地
            </summary>
        </member>
        <member name="F:QL.Common.MSG_C_EnterGameRoom.RoomID">
            <summary>
            场地ID
            </summary>
        </member>
        <member name="F:QL.Common.MSG_C_EnterGameRoom.Method">
            <summary>
            指定玩家进入场地的进入方式
            </summary>
        </member>
        <member name="T:QL.Common.MSG_C_QueryRoomByGameIDArray">
            <summary>
            查询某个游戏下的所有场地
            </summary>
        </member>
        <member name="F:QL.Common.MSG_C_QueryRoomByGameIDArray.GameIDArray">
            <summary>
            游戏ID
            </summary>
        </member>
        <member name="T:QL.Common.MSG_C_QueryGame">
            <summary>
            查询游戏
            </summary>
        </member>
        <member name="F:QL.Common.MSG_C_QueryGame.GameIDArray">
            <summary>
            游戏ID
            </summary>
        </member>
        <member name="T:QL.Common.MSG_C_QueryGameByIDArray">
            <summary>
            查询游戏
            </summary>
        </member>
        <member name="F:QL.Common.MSG_C_QueryGameByIDArray.GameIDArray">
            <summary>
            
            </summary>
        </member>
        <member name="T:QL.Common.MSG_C_QueryUserProp">
            <summary>
            查询玩家道具余额，提供给玩家的余额更新通知
            </summary>
        </member>
        <member name="F:QL.Common.MSG_C_QueryUserProp.queryTypeAry">
            <summary>
            查询类型数组
            </summary>
        </member>
        <member name="T:QL.Common.MSG_C_QueryOfflineRoom">
            <summary>
            查询断线场地
            </summary>
        </member>
        <member name="T:QL.Common.MSG_C_HeartBeatMessage">
            <summary>
            心跳包消息
            </summary>
        </member>
        <member name="T:QL.Common.MSG_C_QueryGroupTableList">
            <summary>
            获取群内创建房间列表 
            </summary>
        </member>
        <member name="F:QL.Common.MSG_C_QueryGroupTableList.UserId">
            <summary>
            查询的玩家Id，（服务端自动赋值）
            </summary>
        </member>
        <member name="F:QL.Common.MSG_C_QueryGroupTableList.GroupId">
            <summary>
            查询的群组Id
            </summary>
        </member>
        <member name="F:QL.Common.MSG_C_QueryGroupTableList.startId">
            <summary>
            起始Id
            </summary>
        </member>
        <member name="F:QL.Common.MSG_C_QueryGroupTableList.count">
            <summary>
            获取数量
            </summary>
        </member>
        <member name="T:QL.Common.MSG_C_SubscribeOrUnsubscribeMessage">
            <summary>
            获取群内创建房间列表 
            </summary>
        </member>
        <member name="F:QL.Common.MSG_C_SubscribeOrUnsubscribeMessage.ChanelName">
            <summary>
            要订阅消息的渠道名称
            </summary>
        </member>
        <member name="F:QL.Common.MSG_C_SubscribeOrUnsubscribeMessage.OpType">
            <summary>
            
            </summary>
        </member>
        <member name="T:QL.Common.MSG_C_OfferPairTable">
            <summary>
            请求配桌
            </summary>
        </member>
        <member name="P:QL.Common.MSG_C_OfferPairTable.TableID">
            <summary>
            一个玩家ID，在邀请玩家进行游戏和邀请玩家帮助抢红包需要携带的一些参数信息
            </summary>
        </member>
        <member name="F:QL.Common.MSG_C_OfferPairTable.ChairID">
            <summary>
            请求配桌的椅子号，只有在邀请朋友加入的情况下有效
            </summary>
        </member>
        <member name="F:QL.Common.MSG_C_OfferPairTable.GroupId">
            <summary>
            请求配桌时携带分组Id，指示该桌子是否是在牌友群界面创建的。以及所属的群号
            </summary>
        </member>
        <member name="F:QL.Common.MSG_C_OfferPairTable.IsFreeCreate">
            <summary>
            表示是否是自由创建
            </summary>
        </member>
        <member name="F:QL.Common.MSG_C_OfferPairTable.RuleId">
            <summary>
            创建房间使用的玩法编号，没有可以传零
            </summary>
        </member>
        <member name="F:QL.Common.MSG_C_OfferPairTable.Empty">
            <summary>
            
            </summary>
        </member>
        <member name="T:QL.Common.MSG_C_ExitRoom">
            <summary>
            退出场地
            </summary>
        </member>
        <member name="F:QL.Common.MSG_C_ExitRoom.PlayerID">
            <summary>
            玩家ID
            </summary>
        </member>
        <member name="T:QL.Common.MSG_C_SitDown">
            <summary>
            玩家坐下
            </summary>
        </member>
        <member name="T:QL.Common.MSG_C_PlayerReady">
            <summary>
            玩家准备
            </summary>
        </member>
        <member name="T:QL.Common.MSG_C_PlayerStandUP">
            <summary>
            玩家起立
            </summary>
        </member>
        <member name="T:QL.Common.MSG_C_ChartMsg">
            <summary>
            同桌聊天
            </summary>
        </member>
        <member name="F:QL.Common.MSG_C_ChartMsg.chartContext">
            <summary>
            聊天信息
            </summary>
        </member>
        <member name="F:QL.Common.MSG_C_ChartMsg.type">
            <summary>
            消息类别
            </summary>
        </member>
        <member name="T:QL.Common.MSG_C_OfflineComein">
            <summary>
            断线重连进来
            </summary>
        </member>
        <member name="T:QL.Common.MSG_C_EliminateUser">
            <summary>
            玩家执行踢人处理逻辑，必须在游戏的桌子中且游戏没有开始
            </summary>
        </member>
        <member name="F:QL.Common.MSG_C_EliminateUser.EliminateUserID">
            <summary>
            踢出的玩家UserID,该玩家必须在当前桌子上并且不是房主
            <para>玩家的VIP等级必须低于或者等于请求的玩家的VIP等级才会被踢出</para>
            </summary>
        </member>
        <member name="T:QL.Common.MSG_C_SeekHelpUser">
            <summary>
            玩家发起求助请求，服务服务器在接收到该消息后会将该消息转发给指定玩家，客户端也需要处理该消息
            </summary>
        </member>
        <member name="F:QL.Common.MSG_C_SeekHelpUser.SeekHelpUserID">
            <summary>
            玩家求助时候指定的玩家ID,该玩家,如果是客户端发起求助则为向谁求助。接收求助的玩家ID
            <para>如果是服务器发给客户端的求助消息时候，该玩家ID指示是谁发起的求助；发起求助的玩家ID</para>
            </summary>
        </member>
        <member name="T:QL.Common.MSG_S_PlayerLatestBalance">
            <summary>
            玩家最新余额
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_PlayerLatestBalance.MoneyBag">
            <summary>
            玩家最新余额数据
            </summary>
        </member>
        <member name="T:QL.Common.MSG_S_LoginSuccess">
            <summary>
            登录成功
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_LoginSuccess.playerData">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="T:QL.Common.MSG_S_UserSessionKey">
            <summary>
            通知客户端刷新的玩家 SessionKey 
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_UserSessionKey.SessionKey">
            <summary>
            
            </summary>
        </member>
        <member name="T:QL.Common.MSG_S_UserCreateTableNotice">
            <summary>
            玩家创建桌的推送消息（实时推送）
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_UserCreateTableNotice.Status">
            <summary>
            指示该条通知信息的操作，服务器间数据同步使用这个消息来同步玩家的桌子列表刷新
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_UserCreateTableNotice.UserId">
            <summary>
            创建的玩家（房主）
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_UserCreateTableNotice.TableInfo">
            <summary>
            创建的桌子信息
            </summary>
        </member>
        <member name="T:QL.Common.MSG_S_SystemPushMsg">
            <summary>
            推送消息（实时推送）
            </summary>
        </member>
        <member name="M:QL.Common.MSG_S_SystemPushMsg.#ctor">
            <summary>
            初始化
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_SystemPushMsg.TargerUser">
            <summary>
            通知推送的目标主体
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_SystemPushMsg.EventCode">
            <summary>
            通知的事件类型
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_SystemPushMsg.EventData">
            <summary>
            通知事件的附加参数
            </summary>
        </member>
        <member name="T:QL.Common.MSG_S_RoomList">
            <summary>
            场地列表
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_RoomList.roomList">
            <summary>
            场地列表
            </summary>
        </member>
        <member name="T:QL.Common.MSG_S_GameList">
            <summary>
            游戏列表
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_GameList.gameList">
            <summary>
            游戏列表
            </summary>
        </member>
        <member name="T:QL.Common.MSG_S_SysConfig">
            <summary>
            系统配置表
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_SysConfig.sysConfigArray">
            <summary>
            
            </summary>
        </member>
        <member name="T:QL.Common.MSG_S_UserProp">
            <summary>
            玩家道具列表
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_UserProp.propAry">
            <summary>
            道具列表
            </summary>
        </member>
        <member name="T:QL.Common.MSG_S_OfflineRoom">
            <summary>
            断线场地
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_OfflineRoom.room">
            <summary>
            玩家所在的断线场地信息，执行断线重连。如果玩家没有断线场地，则为 null
            </summary>
        </member>
        <member name="T:QL.Common.MSG_S_SingleTableInfo">
            <summary>
            根据桌子Id获取创建的房间信息
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_SingleTableInfo.GroupId">
            <summary>
            查询的群Id
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_SingleTableInfo.Data">
            <summary>
            房间列表
            </summary>
        </member>
        <member name="T:QL.Common.MSG_S_GroupTableList">
            <summary>
            获取到的群内玩家创建的房间列表
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_GroupTableList.GroupId">
            <summary>
            查询的群Id
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_GroupTableList.RuleId">
            <summary>
            查询的群玩法编号Id
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_GroupTableList.Data">
            <summary>
            房间列表
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_GroupTableList.Total">
            <summary>
            总数据大小
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_GroupTableList.LastId">
            <summary>
            下次请求分页数据时携带的起始Id,客户端透传
            </summary>
        </member>
        <member name="T:QL.Common.MSG_S_SystemHornMsg">
            <summary>
            系统跑马灯消息
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_SystemHornMsg.HornMsgList">
            <summary>
            跑马灯消息列表
            </summary>
        </member>
        <member name="T:QL.Common.MSG_S_PlayerChairInfo">
            <summary>
            配桌成功
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_PlayerChairInfo.tableID">
            <summary>
            桌子号
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_PlayerChairInfo.chairID">
            <summary>
            椅子号
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_PlayerChairInfo.resultStatus">
            <summary>
            表示玩家请求配桌操作结果状态
            0 -- 正常配桌
            1 -- 正常选桌
            2 -- 玩家被换桌 
            </summary>
        </member>
        <member name="T:QL.Common.MSG_S_PlayerChangeTableSucess">
            <summary>
            玩家换桌完成，这个消息是推送的随时会出现
            </summary>
        </member>
        <member name="T:QL.Common.MSG_S_PlayerSitDown">
            <summary>
            玩家坐到桌子上
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_PlayerSitDown.chairID">
            <summary>
            椅子号
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_PlayerSitDown.playerInfo">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="T:QL.Common.MSG_S_TablePlayer">
            <summary>
            桌子上的玩家
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_TablePlayer.chairID">
            <summary>
            椅子号
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_TablePlayer.playerInfo">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="T:QL.Common.MSG_S_PlayerStandUp">
            <summary>
            玩家从椅子上起立
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_PlayerStandUp.chairID">
            <summary>
            椅子号
            </summary>
        </member>
        <member name="T:QL.Common.MSG_S_PlayerExitRoom">
            <summary>
            玩家从场地中离开，推送消息，玩家在被系统强制离开场地会发送该消息
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_PlayerExitRoom.UserID">
            <summary>
            退出场地的玩家ID
            </summary>
        </member>
        <member name="T:QL.Common.MSG_S_TablePlayerStatus">
            <summary>
            桌子上的玩家状态更新
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_TablePlayerStatus.chairID">
            <summary>
            椅子号
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_TablePlayerStatus.status">
            <summary>
            状态
            </summary>
        </member>
        <member name="T:QL.Common.MSG_S_TableChart">
            <summary>
            桌子上的聊天消息
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_TableChart.chairID">
            <summary>
            发送者
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_TableChart.chartContext">
            <summary>
            聊天内容
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_TableChart.Type">
            <summary>
            表示当前消息是不是语音消息,1是语音消息，0 是普通消息（文字消息）
            </summary>
        </member>
        <member name="T:QL.Common.MSG_S_ExitRoomSuccess">
            <summary>
            玩家进入场地成功
            </summary> 
        </member>
        <member name="T:QL.Common.MSG_S_EnterRoomSuccess">
            <summary>
            玩家进入场地成功
            </summary> 
        </member>
        <member name="F:QL.Common.MSG_S_EnterRoomSuccess.EnterRoomID">
            <summary>
            客户端请求进入的场地ID
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_EnterRoomSuccess.IsOffLine">
            <summary>
            表示玩家是否在场地断线，如果断线需要断线重连
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_EnterRoomSuccess.RoomInfo">
            <summary>
            如果玩家断线重连则该字段表示玩家所在的断线的场地信息
            </summary>
        </member>
        <member name="T:QL.Common.MSG_S_GameOver">
            <summary>
            游戏结束的通知消息
            </summary> 
        </member>
        <member name="T:QL.Common.MSG_S_GameScene">
            <summary>
            游戏场景状态
            </summary> 
        </member>
        <member name="F:QL.Common.MSG_S_GameScene.GameSceneStatus">
            <summary>
            游戏当前的场景状态信息
            </summary>
        </member>
        <member name="T:QL.Common.MSG_S_GameStart">
            <summary>
            游戏开始的通知消息
            </summary> 
        </member>
        <member name="T:QL.Common.MSG_S_PlayerGameOfflineStatus">
            <summary>
            玩家断线游戏的当前状态
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_PlayerGameOfflineStatus.selfChair">
            <summary>
            自己的椅子号
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_PlayerGameOfflineStatus.tableID">
            <summary>
            自己的桌子号
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_PlayerGameOfflineStatus.ifCanOfflineConnect">
            <summary>
            是否可以断线重连
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_PlayerGameOfflineStatus.gameStatus">
            <summary>
            游戏场景状态
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_PlayerGameOfflineStatus.TableType">
            <summary>
            桌子类型
            </summary>
        </member>
        <member name="T:QL.Common.MSG_S_PlayerReadyTimer">
            <summary>
            玩家准备倒计时
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_PlayerReadyTimer.TimeTick">
            <summary>
            玩家当前的计时周期,当为 -1 时表示玩家计时器取消
            </summary>
        </member>
        <member name="T:QL.Common.MSG_C_RequestChangeChairId">
            <summary>
            
            </summary>
        </member>
        <member name="F:QL.Common.MSG_C_RequestChangeChairId.chairId">
            <summary>
            请求更换座位的椅子号，如果座位上已经有玩家将会发送请求让对方同意。如果座位上没有其他玩家则直接更换到其座位上
            </summary>
        </member>
        <member name="T:QL.Common.MSG_C_AcceptChangeChairId">
            <summary>
            
            </summary>
        </member>
        <member name="F:QL.Common.MSG_C_AcceptChangeChairId.chairId">
            <summary>
            请求更换座位玩家的椅子号，根据 MSG_S_RequestChangeChairId 内的椅子号参数原样带回
            </summary>
        </member>
        <member name="F:QL.Common.MSG_C_AcceptChangeChairId.IsAccept">
            <summary>
            表示玩家是否同意更换座位
            </summary>
        </member>
        <member name="T:QL.Common.MSG_S_RequestChangeChairId">
            <summary>
            服务端发送给玩家请求更换座位的请求消息
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_RequestChangeChairId.chairId">
            <summary>
            请求更换座位玩家的椅子号
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_RequestChangeChairId.Mark">
            <summary>
            更换座位的提示显示内容
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_RequestChangeChairId.selfChairId">
            <summary>
            发起前的自己的椅子号
            </summary>
        </member>
        <member name="T:QL.Common.MSG_S_PlayerNewChairInfo">
            <summary>
            玩家座位号被更换，如果新座位上有玩家存在直接调换座次，服务端不另行通知
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_PlayerNewChairInfo.oldChairId">
            <summary>
            玩家的原始椅子号
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_PlayerNewChairInfo.chairID">
            <summary>
            玩家被分配的新的椅子号
            </summary>
        </member>
        <member name="T:QL.Common.MSG_S_BeginGameContinue">
            <summary>
            开始处理续局功能结果
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_BeginGameContinue.Time">
            <summary>
            操作剩余时间
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_BeginGameContinue.GamePlayerScore">
            <summary>
            玩家的结算分数信息
            </summary>
        </member>
        <member name="T:QL.Common.MSG_S_EndGameContinue">
            <summary>
            完成续局功能操作
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_EndGameContinue.status">
            <summary>
            续局操作结束，操作结果
            </summary>
        </member>
        <member name="T:QL.Common.MSG_S_PlayerGameContinueStatus">
            <summary>
            服务端发送给玩家请求更换座位的请求消息
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_PlayerGameContinueStatus.PlayerId">
            <summary>
            
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_PlayerGameContinueStatus.ChairId">
            <summary>
            
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_PlayerGameContinueStatus.GameScore">
            <summary>
            
            </summary>
        </member>
        <member name="T:QL.Common.MSG_C_SendGameContinueStatus">
            <summary>
            服务端发送给玩家请求更换座位的请求消息
            </summary>
        </member>
        <member name="T:QL.Common.GameContinueStatus">
            <summary>
            
            </summary>
        </member>
        <member name="F:QL.Common.GameContinueStatus.Unknown">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:QL.Common.GameContinueStatus.Agree">
            <summary>
            同意
            </summary>
        </member>
        <member name="F:QL.Common.GameContinueStatus.Denied">
            <summary>
            拒绝
            </summary>
        </member>
        <member name="T:QL.Common.PlayerGameScore">
            <summary>
            表示游戏内玩家的分数信息
            </summary>
        </member>
        <member name="F:QL.Common.PlayerGameScore.PlayerId">
            <summary>
            玩家Id
            </summary>
        </member>
        <member name="F:QL.Common.PlayerGameScore.ChairId">
            <summary>
            玩家椅子号
            </summary>
        </member>
        <member name="F:QL.Common.PlayerGameScore.GameScore">
            <summary>
            玩家分数
            </summary>
        </member>
        <member name="T:QL.Common.SysMaintainLogonUser">
            <summary>
            类SysMaintainLogonUser的注释信息
            </summary>
        </member>
        <member name="M:QL.Common.SysMaintainLogonUser.#ctor">
            <summary>
            类SysMaintainLogonUser的默认构造函数
            </summary>
        </member>
        <member name="T:QL.Common.MSG_S_ErrorCode">
            <summary>
            错误码
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_ErrorCode.errorCode">
            <summary>
            错误码数值
            </summary>
        </member>
        <member name="F:QL.Common.MSG_S_ErrorCode.ErrorReason">
            <summary>
            错误原因
            </summary>
        </member>
        <member name="T:QL.Common.SystemPushMsgType">
            <summary>
            类SystemPushMsgType的注释信息
            </summary> 
        </member>
        <member name="F:QL.Common.SystemPushMsgType.NewEmailMessage">
            <summary>
            
            </summary>
        </member>
        <member name="F:QL.Common.SystemPushMsgType.NewEmail">
            <summary>
            新邮件到达
            </summary>
        </member>
        <member name="T:QL.Platfrom2Web.DataZipServices">
            <summary>
             服务器数据压缩处理服务
            </summary>
        </member>
        <member name="M:QL.Platfrom2Web.DataZipServices.CompressDataService(System.Byte[])">
            <summary>
            将字节数据进行压缩
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:QL.Platfrom2Web.DataZipServices.DecompressDataService(System.Byte[])">
            <summary>
            将字节数据进行解压缩
            </summary>
            <param name="data">需要解压缩的对象</param>
            <returns></returns>
        </member>
        <member name="T:QL.Platfrom2Web.ServerDataSerializerService`1">
            <summary>
            提供数据对象到字符串编码的序列化和反序列化操作类，以便提供http数据的传输服务
            </summary>
        </member>
        <member name="F:QL.Platfrom2Web.ServerDataSerializerService`1.serializer">
            <summary>
            指定类型 T 的类型序列化器
            </summary>
        </member>
        <member name="M:QL.Platfrom2Web.ServerDataSerializerService`1.#cctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:QL.Platfrom2Web.ServerDataSerializerService`1.GetSerializerData(System.String)">
            <summary>
            将Base64字符串反序列化成对象
            </summary>
            <param name="base64String"></param>
            <returns></returns>
        </member>
        <member name="M:QL.Platfrom2Web.ServerDataSerializerService`1.GetBase64String(`0)">
            <summary>
            把对象序列化成字符串的表示形式
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:QL.Platfrom2Web.Session.LogonAccessTokenData_V0">
            <summary>
            玩家登陆服务器平台用 AccessToken 数据对象
            <para>签名方式分两种：</para>
            1、Platfrom 签名方式UserID+TimeTick+Password+LogonType
            <para>2、WebApi 签名方式：UserID+TimeTick+LogonType+web_Secret </para>
            </summary>
        </member>
        <member name="P:QL.Platfrom2Web.Session.LogonAccessTokenData_V0.UserId">
            <summary>
            
            </summary>
        </member>
        <member name="P:QL.Platfrom2Web.Session.LogonAccessTokenData_V0.Region">
            <summary>
            所属分区
            </summary>
        </member>
        <member name="F:QL.Platfrom2Web.Session.LogonAccessTokenData_V0.TimeTick">
            <summary>
            
            </summary>
        </member>
        <member name="F:QL.Platfrom2Web.Session.LogonAccessTokenData_V0.Sign">
            <summary>
            
            </summary>
        </member>
        <member name="F:QL.Platfrom2Web.Session.LogonAccessTokenData_V0.LogonType">
            <summary>
            
            </summary>
        </member>
        <member name="M:QL.Platfrom2Web.Session.LogonAccessTokenData_V0.MarkSign(System.String)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:QL.Platfrom2Web.Session.LogonAccessTokenData_V0.SerializerData">
            <summary>
            将对象序列化成字符串的表示形式
            </summary>
            <returns></returns>
        </member>
        <member name="M:QL.Platfrom2Web.Session.LogonAccessTokenData_V0.DeserializerData(System.String)">
            <summary>
            将字符串反序列化成对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:QL.Platfrom2Web.Session.LogonAccessTokenData_V0.Serializer(System.String)">
            <summary>
            
            </summary>
            <param name="secret"></param>
            <returns></returns>
        </member>
        <member name="P:QL.Platfrom2Web.Session.LogonAccessTokenData_V1.Nonstr">
            <summary>
            
            </summary>
        </member>
        <member name="T:QL.Platfrom2Web.Session.LogonAccessTokenDataProvider">
            <summary>
            
            </summary>
        </member>
        <member name="M:QL.Platfrom2Web.Session.LogonAccessTokenDataProvider.Deserializer(System.String)">
            <summary>
            
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:QL.Platfrom2Web.Session.LogonAccessTokenDataProvider.GetNewData(System.UInt32,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="userId"></param>
            <param name="region"></param>
            <param name="secret"></param>
            <param name="nonstr"></param>
            <returns></returns>
        </member>
        <member name="M:QL.Platfrom2Web.Session.LogonAccessTokenDataProvider.GetNewDataV0(System.UInt32,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="userId"></param>
            <param name="region"></param>
            <param name="secret"></param>
            <returns></returns>
        </member>
        <member name="M:QL.Platfrom2Web.Session.LogonAccessTokenDataProvider.GetNewDataV1(System.UInt32,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="userId"></param>
            <param name="region"></param>
            <param name="secret"></param>
            <param name="nonstr"></param>
            <returns></returns>
        </member>
        <member name="T:QL.Platfrom2Web.Session.ILogonAccessTokenData">
            <summary>
            
            </summary>
        </member>
        <member name="P:QL.Platfrom2Web.Session.ILogonAccessTokenData.UserId">
            <summary>
            登录玩家Id
            </summary>
        </member>
        <member name="P:QL.Platfrom2Web.Session.ILogonAccessTokenData.Region">
             <summary>
            所属分区
             </summary>
        </member>
        <member name="T:QL.Platfrom2Web.Session.UserSessionKey_V0">
            <summary>
             玩家的临时会话SessionKey字段信息
            </summary> 
        </member>
        <member name="M:QL.Platfrom2Web.Session.UserSessionKey_V0.#ctor">
            <summary>
            类UserSessionKey的默认构造函数
            </summary>
        </member>
        <member name="P:QL.Platfrom2Web.Session.UserSessionKey_V0.UserId">
            <summary>
            
            </summary>
        </member>
        <member name="P:QL.Platfrom2Web.Session.UserSessionKey_V0.Region">
            <summary>
            当前SessionKey所属分区
            </summary>
        </member>
        <member name="P:QL.Platfrom2Web.Session.UserSessionKey_V0.Version">
            <summary>
            当前的版本
            </summary>
        </member>
        <member name="F:QL.Platfrom2Web.Session.UserSessionKey_V0.IPAdressBytes">
            <summary>
            指示玩家所在登录服务器IP
            </summary>
        </member>
        <member name="F:QL.Platfrom2Web.Session.UserSessionKey_V0.Port">
            <summary>
            绑定登录服务器的服务端口号
            </summary>
        </member>
        <member name="F:QL.Platfrom2Web.Session.UserSessionKey_V0.TimeStamp">
            <summary>
            
            </summary>
        </member>
        <member name="F:QL.Platfrom2Web.Session.UserSessionKey_V0.signData">
            <summary>
            签名数据
            </summary>
        </member>
        <member name="M:QL.Platfrom2Web.Session.UserSessionKey_V0.#ctor(System.UInt32)">
            <summary>
            初始化实例
            </summary>
            <param name="UserID"></param> 
        </member>
        <member name="M:QL.Platfrom2Web.Session.UserSessionKey_V0.RefreshSessionKey">
            <summary>
            刷新会话key
            </summary>
        </member>
        <member name="M:QL.Platfrom2Web.Session.UserSessionKey_V0.Serializer(System.String)">
            <summary>
            
            </summary>
            <param name="secret"></param>
            <returns></returns>
        </member>
        <member name="M:QL.Platfrom2Web.Session.UserSessionKey_V0.Serializer">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:QL.Platfrom2Web.Session.UserSessionKey_V0.MarkSign(System.String)">
            <summary>
            标记签名
            </summary>
            <param name="secret"></param>
        </member>
        <member name="M:QL.Platfrom2Web.Session.UserSessionKey_V0.Deserializer(System.String)">
            <summary>
            将字符串反序列化成对象
            </summary>
            <param name="str">需要反序列化的对象</param> 
            <returns>返回序列化完成的对象，如果反序列化失败则返回 null </returns>
        </member>
        <member name="M:QL.Platfrom2Web.Session.UserSessionKey_V0.VerifySign(System.String)">
            <summary>
            
            </summary> 
            <param name="secret"></param>
            <returns></returns>
        </member>
        <member name="M:QL.Platfrom2Web.Session.UserSessionKey_V0.MemoryCompare(System.Byte[],System.Byte[])">
            <summary>
            比较字节数组
            </summary>
            <param name="b1">字节数组1</param>
            <param name="b2">字节数组2</param>
            <returns>如果两个数组相同，返回0；如果数组1小于数组2，返回小于0的值；如果数组1大于数组2，返回大于0的值。</returns>
        </member>
        <member name="T:QL.Platfrom2Web.Session.UserSessionKey_V1">
            <summary>
            
            </summary>
        </member>
        <member name="P:QL.Platfrom2Web.Session.UserSessionKey_V1.UserId">
            <summary>
            获取的玩家Id
            </summary>
        </member>
        <member name="P:QL.Platfrom2Web.Session.UserSessionKey_V1.Version">
            <summary>
            请求数据的版本
            </summary>
        </member>
        <member name="P:QL.Platfrom2Web.Session.UserSessionKey_V1.Region">
            <summary>
            当前SessionKey所属分区
            </summary>
        </member>
        <member name="M:QL.Platfrom2Web.Session.UserSessionKey_V1.MarkSign(System.String)">
            <summary>
            
            </summary>
            <param name="secret"></param>
            <returns></returns>
        </member>
        <member name="T:QL.Platfrom2Web.Session.UserSessionKey_V2">
            <summary>
            
            </summary>
        </member>
        <member name="P:QL.Platfrom2Web.Session.UserSessionKey_V2.UserId">
            <summary>
            获取的玩家Id
            </summary>
        </member>
        <member name="P:QL.Platfrom2Web.Session.UserSessionKey_V2.Version">
            <summary>
            请求数据的版本
            </summary>
        </member>
        <member name="P:QL.Platfrom2Web.Session.UserSessionKey_V2.Region">
            <summary>
            当前SessionKey所属分区
            </summary>
        </member>
        <member name="M:QL.Platfrom2Web.Session.UserSessionKey_V2.MarkSign(System.String)">
            <summary>
            
            </summary>
            <param name="secret"></param>
            <returns></returns>
        </member>
        <member name="T:QL.Platfrom2Web.Session.UserSessionKeyProvider">
            <summary>
            
            </summary>
        </member>
        <member name="M:QL.Platfrom2Web.Session.UserSessionKeyProvider.Deserializer(System.String)">
            <summary>
            
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:QL.Platfrom2Web.Session.UserSessionKeyProvider.GetNewSessionKey(System.UInt32,System.String,QL.Common.UserType,System.String)">
            <summary>
            
            </summary>
            <param name="userId"></param>
            <param name="region"></param>
            <param name="userType"></param>
            <param name="secret"></param>
            <returns></returns>
        </member>
        <member name="M:QL.Platfrom2Web.Session.UserSessionKeyProvider.GetSessionKeyVersion(System.String,System.String@,System.Byte@)">
            <summary>
            
            </summary>
            <param name="session_key"></param>
            <param name="base64Str"></param>
            <param name="version"></param>
            <returns></returns>
        </member>
        <member name="T:QL.Platfrom2Web.Session.IUserSessionKey">
            <summary>
            为玩家的SessionKey的定义处理接口
            </summary>
        </member>
        <member name="P:QL.Platfrom2Web.Session.IUserSessionKey.UserId">
            <summary>
            获取的玩家Id
            </summary>
        </member>
        <member name="P:QL.Platfrom2Web.Session.IUserSessionKey.UserType">
            <summary>
            只是当前用户是否是测试用户
            </summary>
        </member>
        <member name="P:QL.Platfrom2Web.Session.IUserSessionKey.Region">
            <summary>
            当前SessionKey所属分区
            </summary>
        </member>
        <member name="T:QL.WebCommon.WebCustomMessage">
            <summary>
            消息基类
            </summary>
        </member>
        <member name="T:QL.WebCommon.SysEmail">
            <summary>
            系统邮件
            </summary> 
        </member>
        <member name="F:QL.WebCommon.SysEmail.emailID">
            <summary>
            邮件ID
            </summary>
        </member>
        <member name="F:QL.WebCommon.SysEmail.sendTime">
            <summary>
            发送时间
            </summary>
        </member>
        <member name="F:QL.WebCommon.SysEmail.emailTitle">
            <summary>
            标题
            </summary>
        </member>
        <member name="F:QL.WebCommon.SysEmail.emailContext">
            <summary>
            内容
            </summary>
        </member>
        <member name="F:QL.WebCommon.SysEmail.NickName">
            <summary>
            发件人昵称
            </summary>
        </member>
        <member name="F:QL.WebCommon.SysEmail.SendPlayerID">
            <summary>
            发送者ID
            </summary> 
        </member>
        <member name="F:QL.WebCommon.SysEmail.Attachment">
            <summary>
            邮件附件
            </summary> 
        </member>
        <member name="T:QL.WebCommon.EmailAttachment">
            <summary>
            邮件附件
            </summary> 
        </member>
        <member name="F:QL.WebCommon.EmailAttachment.AttachmentType">
            <summary>
            附件类型
            </summary> 
        </member>
        <member name="F:QL.WebCommon.EmailAttachment.AttachmentNum">
            <summary>
            附近数量
            </summary> 
        </member>
        <member name="F:QL.WebCommon.EmailAttachment.MessageID">
            <summary>
            当前附件所属的消息ID
            </summary>
        </member>
        <member name="F:QL.WebCommon.TopGameRecordInfo.gameGroupName">
            <summary>
            录像总局号
            </summary>
        </member>
        <member name="F:QL.WebCommon.TopGameRecordInfo.Owner">
            <summary>
            指示当前局的房主信息
            </summary>
        </member>
        <member name="F:QL.WebCommon.TopGameRecordInfo.TopId">
            <summary>
            总局编号
            </summary>
        </member>
        <member name="F:QL.WebCommon.TopGameRecordInfo.GameId">
            <summary>
            玩家查看录像的游戏Id
            </summary>
        </member>
        <member name="P:QL.WebCommon.TopGameRecordInfo.TotalUserData">
            <summary>
            本局结算的玩家计分信息
            </summary>
        </member>
        <member name="T:QL.WebCommon.GameRecordInfo">
            <summary>
            表示一个游戏录像数据
            </summary>
        </member>
        <member name="F:QL.WebCommon.GameRecordInfo.TopID">
            <summary>
            
            </summary>
        </member>
        <member name="F:QL.WebCommon.GameRecordInfo.GameId">
            <summary>
            玩家查看录像的游戏Id
            </summary>
        </member>
        <member name="F:QL.WebCommon.GameRecordInfo.ID">
            <summary>
            录像ID
            </summary>
        </member>
        <member name="F:QL.WebCommon.GameRecordInfo.gameGroupName">
            <summary>
            录像总局号
            </summary>
        </member>
        <member name="F:QL.WebCommon.GameRecordInfo.GameNo">
            <summary>
            录像子局号
            </summary>
        </member>
        <member name="F:QL.WebCommon.GameRecordInfo.CTime">
            <summary>
            录像的创建时间
            </summary>
        </member>
        <member name="F:QL.WebCommon.GameRecordInfo.Owner">
            <summary>
            指示当前局的房主信息
            </summary>
        </member>
        <member name="F:QL.WebCommon.GameRecordInfo.UserData">
            <summary>
            本局结算的玩家计分信息
            </summary>
        </member>
        <member name="F:QL.WebCommon.GameRecordInfo.RcordCost">
            <summary>
            当前玩家对于该录像已经支付的费用
            </summary>
        </member>
        <member name="P:QL.WebCommon.SimpleUserGameRecordData.Header">
            <summary>
            玩家头像
            </summary>
        </member>
        <member name="P:QL.WebCommon.SimpleUserGameRecordData.UserID">
            <summary>
            玩家Id
            </summary>
        </member>
        <member name="F:QL.WebCommon.SimpleUserGameRecordData.NickName">
            <summary>
            玩家昵称
            </summary>
        </member>
        <member name="F:QL.WebCommon.SimpleUserGameRecordData.MoneyNum">
            <summary>
            玩家比赛积分信息
            </summary>
        </member>
        <member name="T:QL.WebCommon.UserGameRecordData">
            <summary>
            玩家录像数据集合
            </summary>
        </member>
        <member name="P:QL.WebCommon.UserGameRecordData.Header">
            <summary>
            玩家头像
            </summary>
        </member>
        <member name="P:QL.WebCommon.UserGameRecordData.UserID">
            <summary>
            玩家Id
            </summary>
        </member>
        <member name="F:QL.WebCommon.UserGameRecordData.RcordID">
            <summary>
            录像ID
            </summary>
        </member>
        <!-- 对于成员“T:QL.WebCommon.customJsonSerializer.TopGameRecordInfoJsonSerializer”忽略有格式错误的 XML 注释 -->
        <member name="T:QL.WebCommon.MSG_S_EmailData">
            <summary>
            邮件数据
            </summary>
        </member>
        <member name="F:QL.WebCommon.MSG_S_EmailData.emailAry">
            <summary>
            邮件数据
            </summary> 
        </member>
        <member name="T:QL.WebCommon.MSG_S_ReadEmail">
            <summary>
            邮件数据
            </summary>
        </member>
        <member name="F:QL.WebCommon.MSG_S_ReadEmail.num">
            <summary>
            剩余的邮件数量
            </summary>
        </member>
        <member name="T:QL.WebCommon.MSG_S_GameRecordInfoArray">
            <summary>
            邮件数据
            </summary>
        </member>
        <member name="T:QL.WebCommon.MSG_S_UserFriendTree">
            <summary>
            邮件数据
            </summary>
        </member>
        <member name="M:QL.WebApi.Session.UserLogonCacheTokenDataProvider.Deserializer(System.String)">
            <summary>
            
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:QL.WebApi.Session.UserLogonCacheTokenDataProvider.GetNewData(System.UInt32,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="userId"></param>
            <param name="region"></param>
            <param name="secret"></param>
            <param name="nonstr"></param>
            <returns></returns>
        </member>
        <member name="T:QL.WebApi.Session.IUserLogonCacheTokenData">
            <summary>
            
            </summary>
        </member>
        <member name="P:QL.WebApi.Session.IUserLogonCacheTokenData.UserId">
            <summary>
            登录玩家Id
            </summary>
        </member>
        <member name="P:QL.WebApi.Session.IUserLogonCacheTokenData.Region">
             <summary>
            所属分区
             </summary>
        </member>
        <member name="P:QL.WebApi.Session.IUserLogonCacheTokenData.NonStr">
            <summary>
            
            </summary>
        </member>
        <member name="T:GameIF.Common.ConstDefine">
            <summary>
            一些常量值得定义
            </summary>
        </member>
        <member name="F:GameIF.Common.ConstDefine.NotUseInLY20">
            <summary>
            标记将不会再礼游2.0中使用到的成员信息
            </summary>
        </member>
        <member name="F:GameIF.Common.ConstDefine.NotImplemented">
            <summary>
            指定方法未实现
            </summary>
        </member>
        <member name="F:GameIF.Common.ConstDefine.ErrorUse">
            <summary>
            
            </summary>
        </member>
        <member name="T:GameIF.Common.RadioType">
            <summary>
            选项类型
            </summary>
        </member>
        <member name="F:GameIF.Common.RadioType.MultipleRadio">
            <summary>
            复选框
            </summary>
        </member>
        <member name="F:GameIF.Common.RadioType.SingleRadio">
            <summary>
            单选
            </summary>
        </member>
        <member name="P:GameIF.Common.Base.ID">
            <summary>
            规则id
            </summary>
        </member>
        <member name="P:GameIF.Common.MarkBase.Text">
            <summary>
            分组描述文本
            </summary>
        </member>
        <member name="P:GameIF.Common.MarkBase.Mark">
            <summary>
            规则备注
            </summary>
        </member>
        <member name="T:GameIF.Common.GroupItem">
            <summary>
            用于标记一个选项
            </summary>
        </member>
        <member name="F:GameIF.Common.GroupItem.Group">
            <summary>
            选项所在分组
            </summary>
        </member>
        <member name="T:GameIF.Common.GameRuleItem">
            <summary>
            游戏规则项
            </summary>
        </member>
        <member name="P:GameIF.Common.GameRuleItem.DefaultStatus">
            <summary>
            默认选中状态
            </summary>
        </member>
        <member name="T:GameIF.Common.GameRuleGroup">
            <summary>
            游戏私有规则分组
            </summary>
        </member>
        <member name="F:GameIF.Common.GameRuleGroup.Root">
            <summary>
            关联父节点
            </summary>
        </member>
        <member name="P:GameIF.Common.GameRuleGroup.GameRuleSet">
            <summary>
            此分组下包括的所有选项
            </summary>
        </member>
        <member name="F:GameIF.Common.GameRuleGroup.radio">
            <summary>
            分组类型，单选还是多选
            </summary>
        </member>
        <member name="T:GameIF.Common.GameCostItem">
            <summary>
            一条局数与消费
            </summary>
        </member>
        <member name="P:GameIF.Common.GameCostItem.CurrencyType">
            <summary>
            币种类型
            </summary>
        </member>
        <member name="P:GameIF.Common.GameCostItem.CurrencyNum">
            <summary>
            币种数量
            </summary>
        </member>
        <member name="T:GameIF.Common.GameCostGroup">
            <summary>
            游戏局数与消费相关
            </summary>
        </member>
        <member name="F:GameIF.Common.GameCostGroup.Root">
            <summary>
            关联父节点
            </summary>
        </member>
        <member name="P:GameIF.Common.GameCostGroup.GameCostSet">
            <summary>
            游戏房费可选项
            </summary>
        </member>
        <member name="T:GameIF.Common.GameRuleEntity">
            <summary>
            游戏规则总表
            </summary>
        </member>
        <member name="M:GameIF.Common.GameRuleEntity.op_Implicit(System.String)~GameIF.Common.GameRuleEntity">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="P:GameIF.Common.GameRuleEntity.RoomCostData">
            <summary>
            房费情况
            </summary>
        </member>
        <member name="P:GameIF.Common.GameRuleEntity.GameData">
            <summary>
            游戏私有规则表
            </summary>
        </member>
        <member name="P:GameIF.Common.GameRuleEntity.Mark">
            <summary>
            面板上使用的注释信息
            </summary>
        </member>
        <member name="T:GameIF.Common.GRSpareAttrib">
            <summary>
            场地特殊属性
            </summary>
        </member>
        <member name="F:GameIF.Common.GRSpareAttrib.Attribute1">
            <summary>
            场地特殊信息1
            </summary>
        </member>
        <member name="F:GameIF.Common.GRSpareAttrib.Attribute2">
            <summary>
            场地特殊信息2
            </summary>
        </member>
        <member name="F:GameIF.Common.GRSpareAttrib.Attribute3">
            <summary>
            场地特殊信息3
            </summary>
        </member>
        <member name="F:GameIF.Common.GRSpareAttrib.Attribute4">
            <summary>
            场地特殊信息4
            </summary>
        </member>
        <member name="F:GameIF.Common.GRSpareAttrib.Attribute5">
            <summary>
            场地特殊信息5
            </summary>
        </member>
        <member name="F:GameIF.Common.GRSpareAttrib.Attribute6">
            <summary>
            场地特殊信息6
            </summary>
        </member>
        <member name="T:GameIF.Common.RaceInOrOutScore">
            <summary>
            百人游戏的出入分信息
            </summary>
        </member>
        <member name="F:GameIF.Common.RaceInOrOutScore.OutScore">
            <summary>
            当前出分
            </summary>
        </member>
        <member name="F:GameIF.Common.RaceInOrOutScore.OutScoreRate">
            <summary>
            出分率(暂时用不到)
            </summary>
        </member>
        <member name="T:GameIF.Common.StockDataResult">
            <summary>
            股票游戏的卖出结算表数据
            </summary>
        </member>
        <member name="F:GameIF.Common.StockDataResult.PoundageValue">
            <summary>
            玩家本次交易的手续费
            </summary>
        </member>
        <member name="F:GameIF.Common.StockDataResult.TradeNum">
            <summary>
            交易手数
            </summary>
        </member>
        <member name="F:GameIF.Common.StockDataResult.TradePrice">
            <summary>
            玩家实际交易总价
            </summary>
        </member>
        <member name="F:GameIF.Common.StockDataResult.TradeSingleMoneyNum">
            <summary>
            交易单价
            </summary>
        </member>
        <member name="T:GameIF.Common.MaxRedPacketResult">
            <summary>
            获取商户红包的预扣值的操作结果
            </summary>
        </member>
        <member name="F:GameIF.Common.MaxRedPacketResult.MoneyNum">
             <summary>
            商户红包的预扣值
             </summary>
        </member>
        <member name="T:GameIF.Common.HandselSettlementResult">
            <summary>
            玩家获得彩金的结算结果
            </summary>
        </member>
        <member name="F:GameIF.Common.HandselSettlementResult.UserID">
            <summary>
            玩家ID
            </summary>
        </member>
        <member name="F:GameIF.Common.HandselSettlementResult.GetMoneyNum">
            <summary>
            用户获得的彩金数量
            彩金结算目前仅仅有金币
            </summary>
        </member>
        <member name="F:GameIF.Common.HandselSettlementResult.Tag">
            <summary>
            结算时携带的用户对象信息，结算操作完毕后原样返回
            </summary>
        </member>
        <member name="T:GameIF.Common.HandselSettlementPlayerReq">
            <summary>
            玩家获得彩金的结算信息
            </summary>
        </member>
        <member name="F:GameIF.Common.HandselSettlementPlayerReq.UserID">
            <summary>
            玩家ID
            </summary>
        </member>
        <member name="F:GameIF.Common.HandselSettlementPlayerReq.GetMoneyNum">
            <summary>
            用户获得的彩金数量
            彩金结算目前仅仅有金币
            </summary>
        </member>
        <member name="F:GameIF.Common.HandselSettlementPlayerReq.Tag">
            <summary>
            结算时携带的用户对象信息，结算操作完毕后原样返回
            </summary>
        </member>
        <member name="T:GameIF.Common.UserTransferGameQiuZhuReq">
            <summary>
            玩家获得彩金的结算信息
            </summary>
        </member>
        <member name="F:GameIF.Common.UserTransferGameQiuZhuReq.MyUserID">
            <summary>
            同意求助请求的玩家ID
            </summary>
        </member>
        <member name="F:GameIF.Common.UserTransferGameQiuZhuReq.OtherUserID">
            <summary>
            求助的玩家ID
            </summary>
        </member>
        <member name="F:GameIF.Common.UserTransferGameQiuZhuReq.MoneyNum">
            <summary>
            求助获得的金额数量必须大于零才会结算
            </summary>
        </member>
        <member name="F:GameIF.Common.UserTransferGameQiuZhuReq.MoneyType">
            <summary>
            赠予币种，目前仅仅支持金币的求助，其他币种不支持
            </summary>
        </member>
        <member name="F:GameIF.Common.UserTransferGameQiuZhuReq.MarkContext">
            <summary>
            本次结算的账务说明文本
            </summary>
        </member>
        <member name="T:GameIF.Common.UserTransferGameQiuZhuResult">
            <summary>
            同意求助操作结果信息
            </summary>
        </member>
        <member name="F:GameIF.Common.UserTransferGameQiuZhuResult.MyUserID">
            <summary>
            同意求助请求的玩家ID
            </summary>
        </member>
        <member name="F:GameIF.Common.UserTransferGameQiuZhuResult.OtherUserID">
            <summary>
            求助的玩家ID
            </summary>
        </member>
        <member name="F:GameIF.Common.UserTransferGameQiuZhuResult.MoneyNum">
            <summary>
            求助获得的金额数量必须大于零才会结算
            </summary>
        </member>
        <member name="F:GameIF.Common.UserTransferGameQiuZhuResult.MoneyType">
            <summary>
            赠予币种，目前仅仅支持金币的求助，其他币种不支持
            </summary>
        </member>
        <member name="T:GameIF.Common.WithHoldRoomCostCallback">
            <summary>
            玩家预扣或者返还操作的回调结果对象信息
            </summary>
        </member>
        <member name="F:GameIF.Common.WithHoldRoomCostCallback.PrePayID">
            <summary>
            为本次预扣生成的临时唯一编号
            </summary>
        </member>
        <member name="T:GameIF.CustomMessage">
            <summary>
            消息基类,所有需要传输的消息均需要继承该类
            </summary>
        </member>
        <member name="P:GameIF.CustomMessage.SessionID">
            <summary>
            Socket会话ID，不用赋值
            </summary>
        </member>
        <member name="P:GameIF.CustomMessage.wMainCmdID">
            <summary>
            主命令码，根据PacketContract属性值解析，不用赋值
            </summary>
        </member>
        <member name="P:GameIF.CustomMessage.wSubCmdID">
            <summary>
            副命令码，根据PacketContract属性值解析，不用赋值
            </summary>
        </member>
        <member name="F:GameIF.CustomMessage.Function">
            <summary>
            事件执行函数,需要在指定的消息队列中执行的方法
            此消息的方法会在投放的消息队列中同步顺序执行
            </summary>
        </member>
        <member name="F:GameIF.CustomMessage.MessageUserID">
            <summary>
            <para>消息的用户ID，服务器平台使用，不进行序列化处理</para>
            <para>这个ID与玩家通信会话阶段后期绑定的玩家ID相对应，但不保证所有消息均初始化该字段的值，需要谨慎使用</para>
            </summary>
        </member>
        <member name="F:GameIF.CustomMessage.IsProcessOnRoomHadle">
            <summary>
            表示当前消息是否在场地消息队列上执行
            </summary>
        </member>
        <member name="T:GameIF.GameMessage">
            <summary>
            游戏通用消息;
            主命令码：
            0~50:系统指令，平台
            51-255：游戏指令
            副命令码游戏开发者自己定义
            </summary>
        </member>
        <member name="T:GameIF.RedisMessage">
            <summary>
            为Redis消息提供基类支持
            </summary>
        </member>
        <member name="F:GameIF.RedisMessage.IsFromRedis">
            <summary>
            指示消息是否是从远端接收的消息
            </summary> 
        </member>
        <member name="F:GameIF.RedisMessage.ServerUUID">
            <summary>
            发送该消息的服务器编号 
            </summary>
        </member>
        <member name="T:GameIF.H5Connected">
            <summary>
            H5客户端连接成功的回调通知消息
            </summary>
        </member>
        <member name="M:GameIF.H5Connected.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:GameIF.NullMsg">
            <summary>
            一个空消息，服务端标记使用，大厅请不要使用该消息体
            </summary> 
        </member>
        <member name="M:GameIF.NullMsg.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:GameIF.PipelineDisposed">
            <summary>
            服务器通讯管道断开的通知消息
            </summary>
        </member>
        <member name="F:GameIF.PipelineDisposed.PipelineID">
            <summary>
            管道通信ID
            </summary>
        </member>
        <member name="F:GameIF.PipelineDisposed.PlayerID">
            <summary>
            玩家ID 
            </summary>
        </member>
        <member name="F:GameIF.PipelineDisposed.ServerID">
            <summary>
            服务端dll
            </summary>
        </member>
        <member name="M:GameIF.PipelineDisposed.#ctor">
            <summary>
            类PipelineDisposed的默认构造函数
            </summary>
        </member>
        <member name="T:GameIF.GamePlugBaseClass">
            <summary>
            游戏插件的抽象基础类，所有的游戏插件必须继承与该抽象类
            </summary>
        </member>
        <member name="P:GameIF.GamePlugBaseClass.EmptyEmail">
            <summary>
            
            </summary>
        </member>
        <member name="P:GameIF.GamePlugBaseClass.GameID">
            <summary>
            游戏插件的游戏编号。宿主需要该字段标识游戏插件，具体请咨询服务器管理人员
            </summary>
        </member>
        <member name="P:GameIF.GamePlugBaseClass.GameName">
            <summary>
            游戏名称。应该尽量保证与其他游戏插件的名称不存在冲突
            </summary>
        </member>
        <member name="P:GameIF.GamePlugBaseClass.GameVersion">
            <summary>
            请提供游戏服务端版本。版本号格式：{主版本}.{次版本}.{修订号}
            </summary>
        </member>
        <member name="P:GameIF.GamePlugBaseClass.IsDisorder">
            <summary>
            指示消息是否支持无序消息模式
            </summary>
        </member>
        <member name="M:GameIF.GamePlugBaseClass.ReceiveMsg(System.UInt16,GameIF.GameMessage)">
            <summary>
            宿主与游戏服务端的消息通讯接口
            </summary>
            <param name="chairID">通讯的玩家椅子号</param>
            <param name="cm">通知的消息对象</param>
            <returns></returns>
        </member>
        <member name="M:GameIF.GamePlugBaseClass.GameStart">
            <summary>
            边界:游戏开始；当宿主平台配桌成功后，通知游戏服务端启动
            </summary>
            <returns></returns>
        </member>
        <member name="P:GameIF.GamePlugBaseClass.GameHost">
            <summary>
            得到宿主平台,边界关联
            </summary>
        </member>
        <member name="P:GameIF.GamePlugBaseClass.ErrorEmails">
            <summary>
            提供异常接收日志的邮件地址
            </summary>
        </member>
        <member name="M:GameIF.GamePlugBaseClass.OnTableError(System.Exception)">
            <summary>
            <para>平台捕获当前桌发生异常的通知，并返回一个bool值指示平台是否需要立即结束当前桌比赛
            在游戏内的异常处理方法中请勿直接调用GameEnd方法</para>
            </summary>
            <param name="ex">捕获的平台异常信息</param>
            <returns>返回一个布尔值指示当前桌是否需要立即结束当前桌的游戏，如果需要立即结束请返回true,否则返回 false </returns>
        </member>
        <member name="M:GameIF.GamePlugBaseClass.OnDestory">
            <summary>
            宿主通知游戏插件当前的实例将被销毁（这个销毁是无条件的）
            </summary>
        </member>
        <member name="M:GameIF.GamePlugBaseClass.GameInitialize">
            <summary>
            <para>--------------------------------------------------------------------------------------------------------------------------</para>
            <para>1、宿主通知游戏插件初始化，这个是游戏插件创建完毕并准备完毕后的初始化通知函数</para>
            <para>2、当宿主调用该方法之后游戏插件即可调用宿主的接口处理相关逻辑，游戏插件请按照需要重写该方法</para>
            <para>3、这个方法的调用时期是不同于 GameStart 方法的，游戏插件的开发者请务必不要在这个函数中处理与游戏开始相关的逻辑</para>
            <para>4、warning：这是一个预留功能，在后期的平台的其他中宿主可能会多次执行其初始化方法，以便重置游戏插件内部上下文。请游戏开发人员务必关注其游戏插件的初始化逻辑</para>
            <para>--------------------------------------------------------------------------------------------------------------------------</para>
            </summary>
        </member>
        <member name="M:GameIF.GamePlugBaseClass.OnServerMaintain(System.Int32,System.String)">
            <summary>
            服务器维护的通知接口
            </summary>
            <param name="status">服务器状态 1维护，0取消维护</param>
            <param name="MaintainText">维护文本</param>
        </member>
        <member name="M:GameIF.GamePlugBaseClass.OnBeforUserReady(System.UInt16,QL.Common.TablePlayer,System.String@)">
            <summary>
            一个玩家准备前的通知接口，服务端可以根据需要处理相关逻辑
            </summary>
            <param name="chairID">准备玩家的椅子号</param>
            <param name="userInfo">玩家信息</param>
            <param name="errorMsg">如果玩家准备不符合条件的提示文本内容</param>
            <returns>如果玩家的准备符合条件则为 0 否则则为 非 零值</returns>
        </member>
        <member name="M:GameIF.GamePlugBaseClass.OnUserReady(System.UInt16,QL.Common.TablePlayer,System.Byte)">
            <summary>
            一个玩家准备的通知接口，服务端可以根据需要处理相关逻辑
            </summary>
            <param name="chairID">准备玩家的椅子号</param>
            <param name="userInfo">玩家信息</param>
            <param name="userState">保留字段</param>
            <returns></returns>
        </member>
        <member name="M:GameIF.GamePlugBaseClass.OnBeforGetPlayerTableSeat(QL.Common.TablePlayer,System.Byte,System.String@)">
            <summary>
            玩家还未进入桌子。等待分配椅子号的前置条件判断
            </summary>
            <param name="player">等待分配椅子号的玩家</param>
            <param name="selectChairId">玩家的邀请逻辑中自选的椅子号位置信息</param>
            <param name="errorMsg">如果玩家不符合进入条件的错误提示文本内容</param> 
            <returns>如果允许玩家进入返回 0 否则为 非0 值</returns>
        </member>
        <member name="M:GameIF.GamePlugBaseClass.OnBeforUserComeIn(System.UInt16,QL.Common.TablePlayer,System.Byte,System.String@)">
            <summary>
            系统通知玩家坐下前的通知
            </summary>
            <param name="chairID">椅子号</param>
            <param name="userInfo">用户信息</param>
            <param name="errorMsg">如果玩家坐下不符合条件的提示文本内容</param>
            <param name="userState">用户状态，0正常进入；1断线重连； 2旁观进来</param>
            <returns></returns>
        </member>
        <member name="M:GameIF.GamePlugBaseClass.OnUserComeIn(System.UInt16,QL.Common.TablePlayer,System.Byte)">
            <summary>
            系统通知玩家坐下前的通知
            </summary>
            <param name="chairID">椅子号</param>
            <param name="userInfo">用户信息</param> 
            <param name="userState">用户状态，0正常进入；1断线重连； 2旁观进来</param>
            <returns></returns>
        </member>
        <member name="M:GameIF.GamePlugBaseClass.OnUserRematching(System.UInt16,QL.Common.TablePlayer,System.Byte)">
            <summary>
            当玩家被系统重新换桌前的通知事件方法，当前方法是在玩家当前桌子上通知的，是玩家换桌前的桌子位置
            </summary>
            <param name="chairID">玩家椅子号</param>
            <param name="userInfo">玩家基本信息</param>
            <param name="userState">玩家状态（保留字段，暂时用不到）</param>
            <returns></returns>
        </member>
        <member name="M:GameIF.GamePlugBaseClass.GetGameAttachParams">
            <summary>
            暴露给平台使用的游戏插件附加参数，具体数据请和大厅开发者协调。
            </summary>
            <returns></returns>
        </member>
        <member name="M:GameIF.GamePlugBaseClass.OnUserLeft(System.UInt16,QL.Common.TablePlayer,System.Byte)">
            <summary>
            玩家离开桌子（站起）后调用
            </summary>
            <param name="chairID">离开玩家的椅子号</param>
            <param name="userInfo">离开的玩家信息</param>
            <param name="userState">0正常离开，1强退;玩家自主离开对于不支持断线重连的游戏该值为 0
            </param>
            <returns></returns>
        </member>
        <member name="M:GameIF.GamePlugBaseClass.OnGameContinueResult(System.Int32)">
            <summary>
            游戏发起了请求续局请求的处理结果通知信息
            </summary>
            <param name="result">处理结果，1同意续局。-1拒绝续局</param>
            <returns></returns>
        </member>
        <member name="M:GameIF.GamePlugBaseClass.OnBeforGameContinueResult(QL.Common.TablePlayer,System.Int32,System.String@)">
            <summary>
            游戏发起了续局请求的前验证结果信息
            </summary>
            <param name="player">操作玩家</param>
            <param name="result">处理结果，1同意续局。-1拒绝续局</param>
            <param name="errorMsg">如果玩家坐下不符合条件的提示文本内容</param>
            <returns>如果玩家续局操作成功 返回 0 否则为 非0 值</returns>
        </member>
        <member name="P:GameIF.GamePlugBaseClass.CanOffline">
            <summary>
            标识当前游戏插件是否允许断线重连，当游戏插件支持断线重连时需要宿主通知的玩家断线和重连的相关接口逻辑 
            </summary>
        </member>
        <member name="P:GameIF.GamePlugBaseClass.GMTools">
            <summary>
            获得GM工具的窗体实例，如果没有则为 null
            </summary>
        </member>
        <member name="M:GameIF.GamePlugBaseClass.OnHallMessage(System.UInt32,System.String,System.String)">
            <summary>
            游戏插件接收处理大厅发送消息，具体业务游戏开发和大厅相商
            这个消息的处理器是在大厅未与游戏插件建立联系的条件下直接发送处理命令的处理接口
            </summary>
            <param name="UserId">发送消息的玩家Id</param>
            <param name="handle">处理消息命令</param>
            <param name="param">处理消息参数</param>
        </member>
        <member name="M:GameIF.GamePlugBaseClass.OnUserStatusChangeToOnLooking(System.Byte,QL.Common.GSTablePlayer,System.Byte)">
            <summary>
             通知游戏插件玩家已经被置换为旁观状态
            </summary>
            <param name="chairID">玩家椅子号</param>
            <param name="player">玩家信息</param>
            <param name="statue">操作状态</param>
        </member>
        <member name="M:GameIF.GamePlugBaseClass.CanSwapChair(QL.Common.TablePlayer,System.Byte,System.String@)">
            <summary>
            指示当前阶段游戏是否支持更换座位信息
            </summary>
            <param name="errorReason">如果不能更换座位请返回原因字符串</param>
            <param name="chairId">玩家希望更换到的座位编号</param>
            <param name="player">操作的玩家信息</param>
            <returns></returns>
        </member>
        <member name="M:GameIF.GamePlugBaseClass.StartSwapChair(System.Byte,System.Byte)">
            <summary>
            玩家更换座位前通知
            </summary>
            <param name="ChairId1">被对调座位的椅子号参数 1 </param>
            <param name="ChairId2">被对调座位的椅子号参数 2 </param>
            <returns></returns>
        </member>
        <member name="M:GameIF.GamePlugBaseClass.EndSwapChair(System.Byte,System.Byte)">
            <summary>
            玩家更换座位完成通知
            </summary>
            <param name="ChairId1">被对调座位的椅子号参数 1 </param>
            <param name="ChairId2">被对调座位的椅子号参数 2 </param>
            <returns></returns>
        </member>
        <member name="M:GameIF.GamePlugBaseClass.CanStartGame">
            <summary>
            指示当前的桌子游戏是否可以开始游戏。该接口目前处于试测试阶段，为了应对后期多人不定人数游戏的开局控制
            </summary>
            <returns></returns>
        </member>
        <member name="T:GameIF.IGameHost">
            <summary>
            游戏宿主接口:即游戏平台接口
            <para>1、现在 整个服务端框架全部整体升级到Net 4.5 </para>
            <para>2、重写了异步操作模型，使用基于 Taks TAP 异步操作模型</para>
            </summary>
        </member>
        <member name="M:GameIF.IGameHost.SendMsgByChairID(System.Int32,GameIF.CustomMessage)">
            <summary>
            根据椅子号发送消息,并返回序列化完成的消息字节流
            </summary>
            <param name="chairID">椅子号为-1时群发消息</param>
            <param name="message">发送的消息</param>
            <returns>序列化完成的消息字节流</returns> 
        </member>
        <member name="M:GameIF.IGameHost.SendMsgByPlayerID(System.UInt32,GameIF.CustomMessage)">
            <summary>
            根据玩家ID发送消息,并返回序列化完成的消息字节流
            </summary>
            <param name="PlayerID">需要发送消息的玩家ID</param>
            <param name="message">需要发送的消息</param>
            <returns>序列化完成的消息字节流</returns>
        </member>
        <member name="M:GameIF.IGameHost.WriteMessage(System.String)">
            <summary>
            向宿主控制台输出消息，调试使用
            </summary>
            <param name="msg">需要输出的消息</param> 
        </member>
        <member name="M:GameIF.IGameHost.SaveLog(System.String)">
            <summary>
            写入游戏日志，以便追踪游戏进程，游戏日志在调用GameEnd方法后写入到硬盘中
            </summary>
            <param name="context">写入的内容</param> 
        </member>
        <member name="P:GameIF.IGameHost.LogFileName">
            <summary>
            表示当前局游戏生成的游戏日志号 
            </summary> 
        </member>
        <member name="P:GameIF.IGameHost.StackTraceInfo">
            <summary>
            获取当前程序运行的堆栈跟踪信息
            </summary> 
        </member>
        <member name="P:GameIF.IGameHost.TableInfo">
            <summary>
            
            </summary>
        </member>
        <member name="M:GameIF.IGameHost.GameEnd">
            <summary>
            通知平台结束游戏
            </summary>
            <returns>返回值没有用</returns>
        </member>
        <member name="M:GameIF.IGameHost.OnHostGameStart">
            <summary>
            游戏插件通知宿主游戏已经开始
            </summary>
            <returns></returns>
        </member>
        <member name="P:GameIF.IGameHost.GetRoomInfo">
            <summary>
            获取桌子相关的场地信息（商户）
            </summary>
        </member>
        <member name="P:GameIF.IGameHost.GameSceneStatus">
            <summary>
            游戏场景状态信息
            </summary>
        </member>
        <member name="P:GameIF.IGameHost.PlayerInfoOnTable">
            <summary>
            获取当前桌子的所有玩家信息（只有已经在当前桌子坐下或者已经分配椅子号的玩家才会在该数组内存在）
            </summary>
        </member>
        <member name="P:GameIF.IGameHost.PlayerInfoOnTableSeat">
            <summary>
            获取当前桌子的座位信息，这个是区别于 PlayerInfoOnTable 的
            </summary> 
        </member>
        <member name="P:GameIF.IGameHost.TableOnwer">
            <summary>
            获取本局游戏的房主信息，没有则为 null 该值需要在合适的时候获取，建议在游戏开始逻辑获取
            </summary>
        </member>
        <member name="M:GameIF.IGameHost.SetTableOwner(System.UInt32)">
            <summary>
            变更房主信息
            </summary>
            <param name="UserID"></param>
            <returns></returns>
        </member>
        <member name="M:GameIF.IGameHost.OnCreateRoomInfoChanged(System.Object)">
            <summary>
            通知宿主创建房间的一些信息已经修改，需要刷新信息
            </summary>
            <param name="tag">预留参数</param>
        </member>
        <member name="P:GameIF.IGameHost.PlayerDataService">
            <summary>
            玩家信息相关的统一服务接口
            </summary>
        </member>
        <member name="P:GameIF.IGameHost.RaceHostService">
            <summary>
            百人游戏统一服务接口
            </summary>
        </member>
        <member name="P:GameIF.IGameHost.HostRandomService">
            <summary>
            平台宿主提供的随机数生成服务接口
            </summary>
        </member>
        <member name="P:GameIF.IGameHost.HostTimerService">
            <summary>
            平台提供的定时器注册服务，提供游戏计时服务
            </summary>
        </member>
        <member name="P:GameIF.IGameHost.HostSettlementService">
            <summary>
            平台提供的玩家游戏结算的统一服务接口
            </summary>
        </member>
        <member name="P:GameIF.IGameHost.HostMultiplayerGameService">
            <summary>
            多人游戏平台提供的宿主统一服务接口
            </summary>
        </member>
        <member name="P:GameIF.IGameHost.HostSystemConfigManger">
            <summary>
            服务器的系统配置数据管理器 可以获取系统的配置数据
            </summary>
        </member>
        <member name="P:GameIF.IGameHost.HostGameReplayHelperServices">
            <summary>
            游戏录像的上传并保存接口
            </summary>
        </member>
        <member name="P:GameIF.IGameHost.HostHundredGameSettlementService">
            <summary>
            百人游戏结算接口
            </summary>
        </member>
        <member name="P:GameIF.IGameHost.HostGameContinueService">
            <summary>
            百人游戏结算接口
            </summary>
        </member>
        <member name="T:GameIF.IPlayerDataService">
            <summary>
            玩家信息相关的统一服务接口
            </summary>
        </member>
        <member name="M:GameIF.IPlayerDataService.GetPlayerByChairID(System.Int32)">
            <summary>
            根据椅子号获取玩家基本信息
            </summary>
            <param name="chairId">椅子号</param>
            <returns></returns>
        </member>
        <member name="M:GameIF.IPlayerDataService.GetPlayerScoreByPlayerID(System.UInt32)">
            <summary>
            根据玩家ID获取积分数据
            </summary>
            <param name="playerid"></param>
            <returns></returns>
        </member>
        <member name="M:GameIF.IPlayerDataService.GetPlayerInfoByPlayerID(System.UInt32)">
            <summary>
            根据玩家ID获取玩家基本信息
            </summary>
            <param name="playerID">需要获取玩家信息的玩家ID，这个ID不能是AI的玩家ID</param>
            <returns>返回指定玩家ID的玩家信息，如果没有找到返回 null</returns>
        </member>
        <member name="M:GameIF.IPlayerDataService.PostUserExitMessage(QL.Common.TablePlayer)">
            <summary>
            给平台发送一个消息，该玩家被强制请离退出
            </summary>
            <param name="player">玩家基本信息</param>
            <returns></returns>
        </member>
        <member name="M:GameIF.IPlayerDataService.PostUserExitMessage(QL.Common.TablePlayer,System.String)">
            <summary>
            给平台发送一个消息，该玩家被强制请离退出
            </summary>  
        </member>
        <member name="M:GameIF.IPlayerDataService.SetPlayerData``1(System.UInt32,``0)">
            <summary>
            设置玩家的游戏临时对象信息,该数据在该场地内共享可跨越桌子
            </summary>
            <param name="UserId">玩家Id</param>
            <param name="data">设置的数据对象</param>
        </member>
        <member name="M:GameIF.IPlayerDataService.GetPlayerData``1(System.UInt32)">
            <summary>
            获取存储的玩家数据,该数据在该场地内共享可跨越桌子
            </summary>
            <param name="UserId">需要获取的玩家Id</param> 
            <returns></returns>
        </member>
        <member name="T:GameIF.IRaceHostService">
            <summary>
            百人游戏服务接口
            </summary>
        </member>
        <member name="M:GameIF.IRaceHostService.GetOutScore">
            <summary>
            获取当前处分率
            </summary>
            <returns></returns>
        </member>
        <member name="M:GameIF.IRaceHostService.SendHallNotice(System.String,System.Byte,System.UInt16,QL.Common.KeyValueData[],QL.Common.SystemHornType)">
            <summary>
            向客户端发送群发一条跑马灯公告
            </summary> 
            <param name="msg">需要发送的消息内容，该条跑马灯公告会使用默认的显示优先级进行显示</param>
            <param name="showCount">公告显示次数,如果为 255 则表示循环显示，跑马灯最少显示一次</param>
            <param name="IntervalTime">跑马灯显示的间隔时间单位以秒为单位</param>
        </member>
        <member name="T:GameIF.IHostMultiplayerGameService">
            <summary>
            多人游戏宿主统一服务接口
            </summary>
        </member>
        <member name="M:GameIF.IHostMultiplayerGameService.PlayerGameEnd(System.UInt32)">
            <summary>
            游戏插件通知宿主指定玩家游戏已经结束，这时候该玩家可以直接退出游戏到大厅
            </summary>
            <param name="playerID">结束游戏的玩家ID</param>
            <returns>返回平台处理状态的通知接口</returns>
        </member>
        <member name="M:GameIF.IHostMultiplayerGameService.DisconnectUser(QL.Common.TablePlayer,System.String)">
            <summary>
            
            </summary>
            <param name="player"></param>
            <param name="reason"></param>
            <returns></returns>
        </member>
        <member name="T:GameIF.IHostRandomService">
            <summary>
            平台宿主提供的随机数生成服务接口
            </summary>
        </member>
        <member name="M:GameIF.IHostRandomService.NextDouble">
            <summary>
            随机生成一个介于0.0和1.0之间的一个双精度的浮点型数值
            </summary>
            <returns></returns>
        </member>
        <member name="M:GameIF.IHostRandomService.Next(System.Int32,System.Int32)">
            <summary>
            生成一个大于等于最小值且小于最大值的随机整数
            </summary>
            <param name="min">随机数的最小值，随机数可以取该最小值</param>
            <param name="max">随机数最大值，随机数不可以取得该最大值</param>
            <returns></returns>
        </member>
        <member name="M:GameIF.IHostRandomService.GetNewGuidString">
            <summary>
            获取一个新的全局标识符字符串
            </summary>
            <returns></returns>
        </member>
        <member name="T:GameIF.IHostSettlementService">
            <summary>
            平台提供的玩家游戏结算的统一服务接口
            </summary>
        </member>
        <member name="P:GameIF.IHostSettlementService.GameBonusNum">
            <summary>
            获取当前游戏奖池的总奖金金额，不计算占比，是全部游戏的总奖金额度
            </summary>
        </member>
        <member name="M:GameIF.IHostSettlementService.PlayerForFeeMultiple(QL.Common.PlayerForFeeDataMultiple,System.Action{QL.Common.UserAuditResultTable})">
            <summary>
            玩家游戏结算（针对多人结算模式）
            </summary>
            <param name="freeData">结算信息数据</param>
            <param name="callback">结算处理结果回调通知</param>
        </member>
        <member name="M:GameIF.IHostSettlementService.HandselSettlement(GameIF.Common.HandselSettlementPlayerReq,System.Action{GameIF.Common.HandselSettlementResult})">
            <summary>
            进行当前系统的彩金结算
            </summary>
        </member>
        <member name="M:GameIF.IHostSettlementService.WithHoldRoomCost(System.UInt32,QL.Common.CurrencyType,System.UInt32,System.String,System.Action{GameIF.Common.WithHoldRoomCostCallback})">
            <summary>
            预扣玩家的余额信息
            </summary>
            <param name="UserID">玩家ID</param>
            <param name="MoneyType">预扣的币种</param>
            <param name="MoneyNum">预扣的数量</param>
            <param name="Mark">结算备注说明</param>
            <param name="callback">操作回调</param>
        </member>
        <member name="M:GameIF.IHostSettlementService.WithHoldRoomCostBack(System.UInt32,System.Int32,System.Action{GameIF.Common.WithHoldRoomCostCallback})">
            <summary>
            返还预扣玩家的余额信息
            </summary>
            <param name="PrePayID">预扣时返回的编号</param>
            <param name="callback">操作回调</param>
            <param name="PayStatus">支付的类别，可选参数（1：已支付；2：游戏开始返还；3：解散返还）</param> 
        </member>
        <member name="T:GameIF.IHostHundredGameSettlementService">
            <summary>
            百人游戏结算的统一服务接口
            </summary>
        </member>
        <member name="M:GameIF.IHostHundredGameSettlementService.ZJH_HandInsert(System.UInt32,System.Int32,System.Int32,System.Int32,System.Int32,System.Action{GameIF.AsynChronyResult})">
            <summary>
            玩家投注结算（炸金花）（只要玩家投注必须调这个投注存储过程）
            </summary>
            <param name="userid">玩家ID</param> 
            <param name="A">玩家投注A的金额</param>
            <param name="B">玩家投注B的金额</param>
            <param name="C">玩家投注C的金额</param>
            <param name="D">玩家投注D的金额</param>
        </member>
        <member name="M:GameIF.IHostHundredGameSettlementService.ZJH_PlayerSettlement_HG(System.Int32,System.Int32,System.UInt32,System.Int64,System.String,System.Action{GameIF.ZJH_PlayerSettlementResult})">
            <summary>
            百人游戏结算（炸金花）
            </summary>
            <param name="Result">开奖结果 开奖数字,2等于庄家，3等于A区，5等于B区，7等于C区，11等于D区【如果出了A区和B区 直接将3*5=15 其他同理】</param>
            <param name="DownJackpot">是否出现特殊牌型 0,代表无奖池，13代表豹子AAA奖池，17代表豹子，19代表同花顺【如果出现豹子AAA奖池，且是A区的 就拿3*13=39  代表是A区触发AAA奖了 其他同理—A：3  B：5 C:7  D：11】</param>
            <param name="userid">下局上庄用户ID</param>
            <param name="szMoney">下局上庄金额</param>
            <param name="Remark">开奖结果描述（例如--  庄:7QA_单张@闲A:AA9_对子@闲B:AA9_对子@闲C:AA9_对子@闲D:AA9_对子）</param>
        </member>
        <member name="M:GameIF.IHostHundredGameSettlementService.ZJH_UpdatePoolUser(System.UInt32,System.Int64,System.Action{GameIF.AsynChronyResult})">
            <summary>
            更新下局上庄用户ID和金额
            </summary>
            <param name="userid">下局上庄用户ID</param>
            <param name="szMoney">下局上庄金额</param>
            <param name="resultCallback"></param>
        </member>
        <member name="M:GameIF.IHostHundredGameSettlementService.ZJH_GetZJHSet(System.Action{GameIF.GetZJHSetResult})">
            <summary>
            
            </summary>
            <param name="userid"></param>
            <param name="szMoney"></param>
            <param name="resultCallback"></param>
        </member>
        <member name="T:GameIF.IHostTimerService">
            <summary>
            平台提供的定时器注册服务，提供游戏计时服务
            </summary>
        </member>
        <member name="M:GameIF.IHostTimerService.DestroyTimer(System.Int32)">
            <summary>
            销毁一个定时器
            </summary>
            <param name="timerID">要销毁的定时器ID</param>
            <returns>0表示销毁成功，1表示没有找到该定时器</returns>
        </member>
        <member name="M:GameIF.IHostTimerService.ClearAllTimer">
            <summary>
            清理所有注册的定时器实例
            </summary>
        </member>
        <member name="M:GameIF.IHostTimerService.CheckHasTimer(System.Int32)">
            <summary>
            检查指定的定时器是否已经注册
            </summary>
            <param name="timerID">需要检查的定时器ID</param>
            <returns></returns>
        </member>
        <member name="M:GameIF.IHostTimerService.RegTimerHandle(System.Int32,System.Int32,System.Action)">
            <summary>
            注册一个定时器
            </summary>
            <param name="timerID">定时器ID，在桌子内要唯一</param>
            <param name="timeInterval">定时器间隔，单位秒，最小间隔为1秒</param>
            <param name="callBack">定时任务的回调方法</param>
            <returns>0表示注册成功,注册失败为其他值</returns>
        </member>
        <member name="M:GameIF.IHostTimerService.RegTimerNonAutoHandle(System.Int32,System.Int32,System.Action)">
            <summary>
            注册一个定时器，这个定时器只会运行一次
            <para> ===================关于这个定时器的时间间隔的传值=================================</para>
            <para>1、这个间隔的时间是按照服务器配置的最小计算时间间隔走的，一般以100毫秒一个时间周期。</para>
            <para>2、填写时间间隔时填写期望定时器按照服务器配置的最小计算时间间隔计算的计时周期数。</para>
            <para>例如：当服务器最小时间间隔为100毫秒时，1个定时器计时周期是100毫秒; 当服务器最小时间间隔为10毫秒时，1个定时器计时周期是10毫秒;以此类推</para>
            </summary>
            <param name="timerID">定时器ID，在桌子内要唯一</param>
            <param name="timeInterval">定时器间隔。</param>
            <param name="callBack">定时任务的回调方法</param>
            <returns></returns>
        </member>
        <member name="T:GameIF.IHostSystemConfigManager">
            <summary>
            服务器的系统配置数据管理器
            </summary>
        </member>
        <member name="P:GameIF.IHostSystemConfigManager.Item(System.String)">
            <summary>
            获取服务器的系统配置数据，如果配置不存在获取失败则返回null
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:GameIF.IHostGameReplayHelperServices">
            <summary>
            游戏录像的上传并保存接口
            </summary>
        </member>
        <member name="M:GameIF.IHostGameReplayHelperServices.Deserialzier``1(System.Byte[])">
            <summary>
            反序列化消息对象
            </summary>
            <typeparam name="T">消息类型</typeparam>
            <param name="bytes">该消息的序列化完成的字节信息</param>
            <returns>返回反序列化成功的对象信息，如果序列化失败则为null</returns>
        </member>
        <member name="M:GameIF.IHostGameReplayHelperServices.Serialzier(GameIF.CustomMessage)">
            <summary>
            将一个对象序列化为字节数据，返回序列的结果数据
            </summary>
            <param name="message">需要序列化的对象信息，该对象不要求继承消息体基类，但必须符合类型序列化的规则（即序列化器的序列化规则）</param>
            <returns>返回序列化完成获得的字节数组</returns>
        </member>
        <member name="M:GameIF.IHostGameReplayHelperServices.ObjectToJson(System.Object)">
            <summary>
            转换对象为json格式
            </summary>
            <param name="o">需要转换的对象</param>
            <returns>转化成果返回的json字符串</returns>
        </member>
        <member name="M:GameIF.IHostGameReplayHelperServices.JsonToObject``1(System.String)">
            <summary>
            将json转换为指定类型的对象，如果转换失败则返回null
            </summary>
            <typeparam name="T"></typeparam>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="M:GameIF.IHostGameReplayHelperServices.SaveRecord(GameIF.SaveRecordData,System.Action{GameIF.SaveRecordRessult})">
            <summary>
            上传保存游戏录像数据
            </summary>
            <param name="recdata">表示游戏录像相关的数据内容信息</param>
            <param name="call">上传录像操作完成后回调，回调参数是生成的录像路径，保存计分数据时需要携带该录像路径参数</param>
        </member>
        <member name="T:GameIF.IHostGameContinueService">
            <summary>
            续局管理器，提供续局操作的服务
            </summary>
        </member>
        <member name="T:GameIF.SaveRecordRessult">
            <summary>
            
            </summary>
        </member>
        <member name="F:GameIF.SaveRecordRessult.Path">
            <summary>
            保存录像生成的路径
            </summary>
        </member>
        <member name="F:GameIF.SaveRecordRessult.Message">
            <summary>
            操作结果说明
            </summary>
        </member>
        <member name="T:GameIF.SaveRecordData">
            <summary>
            表示游戏录像相关的数据内容信息
            </summary>
        </member>
        <member name="F:GameIF.SaveRecordData.GameGroupName">
            <summary>
            游戏分局的总局号
            </summary>
        </member>
        <member name="F:GameIF.SaveRecordData.GameNo">
            <summary>
            游戏局号，区分于总局号，每个游戏录像的唯一标识建议使用guid
            </summary>
        </member>
        <member name="F:GameIF.SaveRecordData.RecrdData">
            <summary>
            录像数据
            </summary>
        </member>
        <member name="F:GameIF.SaveRecordData.Type">
            <summary>
            游戏录像的类别
            </summary>
        </member>
        <member name="F:GameIF.SaveRecordData.RoomOwner">
            <summary>
            当前房间的房主ID
            </summary>
        </member>
        <member name="F:GameIF.SaveRecordData.RecordDataArray">
            <summary>
            本局参与游戏的玩家游戏数据数组
            </summary>
        </member>
        <member name="F:GameIF.SaveRecordData.MarkContext">
            <summary>
            本局结算的备注说明信息
            </summary>
        </member>
        <member name="F:GameIF.SaveRecordData.RuleId">
            <summary>
            指定创建当前游戏的玩法编号
            </summary>
        </member>
        <member name="F:GameIF.SaveRecordData.Mark">
            <summary>
            本局游戏结算的描述信息
            </summary>
        </member>
        <member name="T:GameIF.UserRecordData">
            <summary>
            游戏录像的结算数据信息
            </summary>
        </member>
        <member name="F:GameIF.UserRecordData.UserID">
            <summary>
            玩家ID
            </summary>
        </member>
        <member name="F:GameIF.UserRecordData.MoneyType">
            <summary>
            游戏币种
            </summary>
        </member>
        <member name="F:GameIF.UserRecordData.MoneyNum">
            <summary>
            结算数量
            </summary>
        </member>
        <member name="F:GameIF.UserRecordData.NickName">
            <summary>
            玩家昵称
            </summary>
        </member>
        <member name="F:GameIF.UserRecordData.MarkContext">
            <summary>
            玩家本局结算的相关备注说明（限制200字以内）
            </summary>
        </member>
        <member name="T:GameIF.GameRecordType">
            <summary>
            结算游戏的录像类型
            </summary>
        </member>
        <member name="F:GameIF.GameRecordType.Unknown">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:GameIF.GameRecordType.AutoMatch">
            <summary>
            自动匹配
            </summary>
        </member>
        <member name="F:GameIF.GameRecordType.CreateGlodRoom">
            <summary>
            创建房间金币场
            </summary>
        </member>
        <member name="F:GameIF.GameRecordType.CreateScoreRoom">
             <summary>
            创建房间记分场 
             </summary>
        </member>
        <member name="T:GameIF.RecrdDataBase">
             <summary>
            
             </summary>
        </member>
        <member name="F:GameIF.RecrdDataBase.status">
             <summary>
            
             </summary>
        </member>
        <member name="F:GameIF.RecrdDataBase.msg">
             <summary>
            
             </summary>
        </member>
        <member name="M:GameIF.RecrdDataBase.GetRecordJsonData">
            <summary>
            输出录像文件的json 数据
            </summary>
            <returns></returns>
        </member>
        <member name="F:GameIF.FrozenUserAccountParam.in_ObjectId">
            <summary>
            指定此次预扣的账户Id
            </summary>
        </member>
        <member name="F:GameIF.FrozenUserAccountParam.in_ObjectType">
            <summary>
            指定账户类型 1：玩家 2：圈主 3：代理
            </summary>
        </member>
        <member name="F:GameIF.FrozenUserAccountParam.MoneyType">
            <summary>
            暂扣的货币道具类型
            </summary>
        </member>
        <member name="F:GameIF.FrozenUserAccountParam.MoneyNum">
            <summary>
            暂扣的数量
            </summary>
        </member>
        <member name="F:GameIF.FrozenUserAccountParam.Mark">
            <summary>
            备注信息
            </summary>
        </member>
        <member name="F:GameIF.FrozenUserAccountParam.TableId">
            <summary>
            当前结算的桌子编号。不用赋值，平台会自动赋值
            </summary>
        </member>
        <member name="F:GameIF.FrozenUserAccountParam.OwnerId">
            <summary>
            当前结算的桌子的房主Id。不用赋值，平台会自动赋值
            </summary>
        </member>
        <member name="F:GameIF.FrozenUserAccountParam.RoomId">
            <summary>
            当前结算的桌子所属的场地Id。不用赋值，平台会自动赋值
            </summary>
        </member>
        <member name="F:GameIF.FrozenUserAccountParam.GameId">
            <summary>
            当前结算的桌子所属的游戏Id。不用赋值，平台会自动赋值
            </summary>
        </member>
        <member name="F:GameIF.FrozenUserAccountObjectType.Unknown">
            <summary>
            
            </summary>
        </member>
        <member name="F:GameIF.FrozenUserAccountObjectType.PlayerId">
            <summary>
            
            </summary>
        </member>
        <member name="F:GameIF.FrozenUserAccountObjectType.GroupId">
            <summary>
            
            </summary>
        </member>
        <member name="F:GameIF.FrozenUserAccountObjectType.AgentId">
            <summary>
            
            </summary>
        </member>
        <member name="F:GameIF.FrozenUserAccountResult.OrderId">
            <summary>
            暂扣的订单Id,解冻操作时需要透传
            </summary>
        </member>
        <member name="F:GameIF.ThawUserAccountParam.OrderId">
            <summary>
            暂扣的订单号
            </summary>
        </member>
        <member name="F:GameIF.ThawUserAccountParam.MoneyNum">
            <summary>
            本局游戏中实际需要扣除钻石的数量
            </summary>
        </member>
        <member name="T:GameIF.ZJH_PlayerSettlementResult">
            <summary>
            异步操作结果
            </summary>
        </member>
        <member name="F:GameIF.ZJH_PlayerSettlementResult.AtttchDataTable">
            <summary>
            结算时返回附加的参数数据
            </summary>
        </member>
        <member name="F:GameIF.ZJH_PlayerSettlementResult.Jackpot">
            <summary>
            
            </summary>
        </member>
        <member name="F:GameIF.ZJH_PlayerSettlementResult.PlayerWinTable">
            <summary>
            玩家的输赢结果表
            </summary>
        </member>
        <member name="T:GameIF.AsynChronyResult">
            <summary>
            异步操作结果
            </summary>
        </member>
        <member name="F:GameIF.AsynChronyResult.IsSuccess">
            <summary>
            表示当前期望的操作结果是否正确完成
            </summary>
        </member>
        <member name="T:GameIF.GetZJHSetResult">
            <summary>
            异步操作结果
            </summary>
        </member>
        <member name="F:GameIF.GetZJHSetResult.IsSuccess">
            <summary>
            表示当前期望的操作结果是否正确完成
            </summary>
        </member>
        <member name="F:GameIF.GetZJHSetResult.ZJH_PoolA">
            <summary>
            豹子AAA奖池抽取比例
            </summary>
        </member>
        <member name="F:GameIF.GetZJHSetResult.ZJH_PoolB">
            <summary>
            豹子奖池抽取比例
            </summary>
        </member>
        <member name="F:GameIF.GetZJHSetResult.ZJH_PoolC">
            <summary>
            同花顺奖池抽取比例
            </summary>
        </member>
        <member name="F:GameIF.GetZJHSetResult.ZJH_PoolOn">
            <summary>
            玩家赢钱抽水
            </summary>
        </member>
        <member name="F:GameIF.GetZJHSetResult.ZJH_WinPG">
            <summary>
            玩家抽水进入奖池比例
            </summary>
        </member>
        <member name="T:GameIF.UserGameDataInfoBase">
            <summary>
            为服务器游戏插件保存玩家游戏数据提供抽象基类协定
            </summary>
        </member>
        <member name="M:GameIF.UserGameDataInfoBase.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:GameIF.UserGameDataInfoBase.PlayerID">
            <summary>
            玩家ID，自己的用户ID
            </summary>
        </member>
        <member name="P:GameIF.UserGameDataInfoBase.FriendID">
            <summary>
            玩家推广时的推广玩家ID（邀请玩家枪红包的邀请者ID,注意：这个只要ID,请不要使用这个玩家ID获取其他信息。）
            </summary>
        </member>
        <member name="P:GameIF.UserGameDataInfoBase.DataID">
            <summary>
            数据的编号ID
            </summary>
        </member>
        <member name="T:GameIF.GamePlayerForFeeResult">
            <summary>
            玩家结算结果消息基类
            </summary>
        </member>
        <member name="F:GameIF.GamePlayerForFeeResult.PlayerID">
            <summary>
            玩家ID
            </summary>
        </member>
        <member name="F:GameIF.GamePlayerForFeeResult.Result">
            <summary>
            结算结果
            </summary>
        </member>
        <member name="F:GameIF.GamePlayerForFeeResult.ResultData">
            <summary>
            服务器结算携带的处理数据，根据不同游戏区别处理
            </summary>
        </member>
        <member name="T:GameIF.Tools.GMToolsBase">
            <summary>
            游戏GMTools的操作基类
            </summary>
        </member>
        <member name="M:GameIF.Tools.GMToolsBase.#ctor(GameIF.GamePlugBaseClass)">
            <summary>
            
            </summary>
            <param name="gameIFPlug"></param>
        </member>
        <member name="M:GameIF.Tools.GMToolsBase.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:GameIF.Tools.GMToolsBase.DefWndProc(System.Windows.Forms.Message@)">
            <summary>
            
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:GameIF.Tools.GMToolsBase.ReadConfig``1(System.String)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="configkey"></param>
            <returns></returns>
        </member>
        <member name="M:GameIF.Tools.GMToolsBase.SaveConfig``1(System.String,``0)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="configkey"></param>
            <param name="obj"></param>
        </member>
        <member name="T:GameIF.QLDictionary`2">
            <summary>
            表示键和值的集合
            </summary>
            <typeparam name="TKey">字典中的键的类型</typeparam>
            <typeparam name="TValue">字典中的值的类型</typeparam>
        </member>
        <member name="P:GameIF.QLDictionary`2.Item(`0)">
            <summary>
            获取或设置与指定的键相关联的值
            </summary>
            <param name="key">要获取或设置的值的键</param>
            <returns></returns>
        </member>
    </members>
</doc>
