<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RegisterApp</name>
    </assembly>
    <members>
        <member name="M:RegisterApp.Program.Main">
            <summary>
            应用程序的主入口点。
            </summary>
        </member>
        <member name="T:RegisterApp.Properties.Resources">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:RegisterApp.Properties.Resources.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:RegisterApp.Properties.Resources.Culture">
            <summary>
              使用此强类型资源类，为所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="M:QL.Server.RegManage.SoftReg.GetDiskVolumeSerialNumber">
            <summary>
            取得设备硬盘的卷标号
            </summary>
            <returns></returns>
        </member>
        <member name="M:QL.Server.RegManage.SoftReg.getCpu">
            <summary>
            获得CPU的序列号
            </summary>
            <returns></returns>
        </member>
        <member name="M:QL.Server.RegManage.SoftReg.getMNum">
            <summary>
            生成机器码
            </summary>
            <returns></returns>
        </member>
        <member name="T:QL.Security.QLEncryption">
            <summary>
            为加密处理的操作提供服务模块
            </summary>
        </member>
        <member name="M:QL.Security.QLEncryption.#cctor">
            <summary>
            静态构造函数
            </summary>
        </member>
        <member name="M:QL.Security.QLEncryption.MD5Encrypt(System.String)">
            <summary>
            采用MD5加密协议加密字符串
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:QL.Security.QLEncryption.MD5Encrypt(System.String,System.Text.Encoding)">
            <summary>
            采用MD5加密协议加密字符串
            </summary>
            <param name="context">待加密的文本</param>
            <param name="encoding">加密文本的编码格式</param>
            <returns></returns>
        </member>
        <member name="M:QL.Security.QLEncryption.MD5EncryptBase64(System.String,System.Text.Encoding)">
            <summary>
            采用MD5加密协议加密字符串 返回Base64编码的字符串的加密结果
            </summary>
            <param name="context"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:QL.Security.QLEncryption.MD5EncryptBase64(System.String)">
            <summary>
            采用MD5加密协议加密字符串 返回Base64编码的字符串的加密结果
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:QL.Security.QLEncryption.MD5EncryptBytes(System.String)">
            <summary>
            采用MD5加密协议加密字符串 返回字节数组的加密结果
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:QL.Security.QLEncryption.MD5EncryptBytes(System.String,System.Text.Encoding)">
            <summary>
            采用MD5加密协议加密字符串 返回字节数组的加密结果
            </summary>
            <param name="context"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:QL.Security.QLEncryption.Sha1Encrypt(System.String)">
            <summary>
            采用Sha1加密协议加密字符串
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:QL.Security.QLEncryption.Sha1Base64String(System.String)">
            <summary>
            采用Sha1加密协议加密字符串
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:QL.Security.QLEncryption.Sha1Encrypt(System.String,System.Text.Encoding)">
            <summary>
            采用Sha1加密协议加密字符串
            </summary>
            <param name="context"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:QL.Security.QLEncryption.Sha1Base64String(System.String,System.Text.Encoding)">
            <summary>
            采用Sha1加密协议加密字符串
            </summary>
            <param name="encoding"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:QL.Security.QLEncryption.Sha256Encrypt(System.String)">
            <summary>
            采用 SHA256 加密协议加密字符串
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:QL.Security.QLEncryption.Sha256Base64String(System.String)">
            <summary>
            采用 SHA256 加密协议加密字符串
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:QL.Security.QLEncryption.Sha384Encrypt(System.String)">
            <summary>
            采用 SHA384 加密协议加密字符串
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:QL.Security.QLEncryption.Sha384Base64String(System.String)">
            <summary>
            采用 SHA384 加密协议加密字符串
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:QL.Security.QLEncryption.Sha512Encrypt(System.String)">
            <summary>
            采用 SHA512 加密协议加密字符串
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:QL.Security.QLEncryption.Sha512Base64String(System.String)">
            <summary>
            采用 SHA512 加密协议加密字符串
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:QL.Security.QLEncryption.DESEncrypt(System.String)">
            <summary>
            采用DES加密协议加密字符串
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:QL.Security.QLEncryption.DESDecrypt(System.String)">
            <summary>
            采用DES加密协议解密字符串
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:QL.Security.QLEncryption.DESEncrypt(System.Byte[])">
            <summary>
            采用DES加密协议加密字节数组
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:QL.Security.QLEncryption.DESDecrypt(System.Byte[])">
            <summary>
            采用DES加密协议解密字节数组
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:QL.Security.QLEncryption.Base64Encrypt(System.String)">
            <summary>
            采用Base64加密协议加密字符串
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:QL.Security.QLEncryption.Base64Decrypt(System.String)">
            <summary>
            采用Base64加密协议解密字符串
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:QL.Security.QLEncryption.ToBase64String(System.Byte[])">
            <summary>
            将字节数组转换为Base64String的表示形式
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:QL.Security.QLEncryption.ToBase64Bytes(System.String)">
            <summary>
            从base64字符串中还原字节数据
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:QL.Security.QLEncryption.ToSimpleBase64String(System.Byte[])">
            <summary>
            将字节数组转换成一个简单的Base64格式
            </summary>
            <param name="data">需要转换的字节数组</param>
            <returns></returns>
        </member>
        <member name="M:QL.Security.QLEncryption.FromSimpleBase64String(System.String)">
            <summary>
            将字节数组转换成一个简单的Base64格式
            </summary>
            <param name="str">需要转换的字节数组</param>
            <returns></returns>
        </member>
        <member name="T:QL.Security.QLEncryption.EncryptionHelper">
            <summary>
            平台数据加密服务的帮助类，提供一些加密验证服务的帮助方法
            </summary>
        </member>
        <member name="M:QL.Security.QLEncryption.EncryptionHelper.GetTimeStamp">
            <summary>
            获取当前时间的时间戳的字符串表示形式
            </summary>
            <returns></returns>
        </member>
        <member name="M:QL.Security.QLEncryption.EncryptionHelper.GetDateTimeFromTimeStamp(System.String)">
            <summary>
            将时间戳转换为本地时间
            </summary>
            <param name="timestampStr"></param>
            <returns></returns>
        </member>
        <member name="M:QL.Security.QLEncryption.EncryptionHelper.GetTimeStampInt32">
            <summary>
            获取当前时间的时间戳的字符串表示形式
            </summary>
            <returns></returns>
        </member>
        <member name="M:QL.Security.QLEncryption.EncryptionHelper.GetTimeStampInt64">
            <summary>
            获取当前时间的时间戳的字符串表示形式
            </summary>
            <returns></returns>
        </member>
        <member name="M:QL.Security.QLEncryption.EncryptionHelper.GetDateTimeFromTimeStamp(System.Int32)">
            <summary>
            将时间戳转换为本地时间
            </summary>
            <param name="timestampStr"></param>
            <returns></returns>
        </member>
        <member name="T:QL.Security.QLEncryption.DESEncryptServices">
            <summary>
            DESEncryptServices
            </summary>
        </member>
        <member name="M:QL.Security.QLEncryption.DESEncryptServices.EncryptDES(System.String)">
            <summary>
            DES加密字符串
            </summary>
            <param name="encryptString">待加密的字符串</param>
            <param name="encryptKey">加密密钥,要求为16位</param>
            <returns>加密成功返回加密后的字符串，失败返回源串</returns>
        </member>
        <member name="M:QL.Security.QLEncryption.DESEncryptServices.DecryptDES(System.String)">
            <summary>
            DES解密字符串
            </summary>
            <param name="decryptString">待解密的字符串</param>
            <param name="decryptKey">解密密钥,要求为16位,和加密密钥相同</param>
            <returns>解密成功返回解密后的字符串，失败返源串</returns>
        </member>
        <member name="M:QL.Security.QLEncryption.DESEncryptServices.DecryptDES(System.Byte[])">
            <summary>
            DES解密字节数组
            </summary>
            <param name="inputByteArray"></param>
            <returns></returns>
        </member>
        <member name="M:QL.Security.QLEncryption.DESEncryptServices.EncryptDES(System.Byte[])">
            <summary>
            DES加密字节数组
            </summary>
            <param name="encryptString">待加密的字符串</param>
            <param name="encryptKey">加密密钥,要求为8位</param>
            <returns>加密成功返回加密后的字符串，失败返回源串</returns>
        </member>
        <member name="T:QL.Security.QLEncryption.RSAEncryptServices">
            <summary>
            服务器通用RSA非对称加密算法
            </summary>
        </member>
        <member name="P:QL.Security.QLEncryption.RSAEncryptServices.RSA_KEY_XML">
            <summary>
            
            </summary>
        </member>
        <member name="M:QL.Security.QLEncryption.RSAEncryptServices.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:QL.Security.QLEncryption.RSAEncryptServices.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="rsaKeyXml"></param>
        </member>
        <member name="M:QL.Security.QLEncryption.RSAEncryptServices.#ctor(System.Security.Cryptography.RSAParameters)">
            <summary>
            
            </summary>
            <param name="rsaParam"></param>
        </member>
        <member name="M:QL.Security.QLEncryption.RSAEncryptServices.EncryptDES(System.Byte[])">
            <summary>
             RSA加密数据
            </summary>
            <param name="encryptBytes">待加密的字符串</param> 
            <returns>加密成功返回加密后的字符串，失败返回源串</returns>
        </member>
        <member name="M:QL.Security.QLEncryption.RSAEncryptServices.DecryptDES(System.Byte[])">
            <summary>
            DES解密数据
            </summary>
            <param name="encryptBytes">待解密的字节数据</param>  
        </member>
        <member name="M:QL.Security.QLEncryption.RSAEncryptServices.SignData(System.Byte[],System.Object)">
            <summary>
             使用指定的哈希算法计算指定字节数组的哈希值，并对计算所得的哈希值签名。
            </summary>
            <param name="content"></param>
            <param name="ha"></param>
            <returns></returns>
        </member>
        <member name="M:QL.Security.QLEncryption.RSAEncryptServices.SignHash(System.Byte[],System.String)">
            <summary>
             通过用私钥对其进行加密来计算指定哈希值的签名。
            </summary>
            <param name="content"></param>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:QL.Security.QLEncryption.RSAEncryptServices.VerifyData(System.Byte[],System.Object,System.Byte[])">
            <summary>
            通过将指定的签名数据与为指定数据计算的签名进行比较来验证指定的签名数据。
            </summary> 
        </member>
        <member name="M:QL.Security.QLEncryption.RSAEncryptServices.ConvertFromPublicKey(System.String)">
            <summary>
            解析.net 生成的Pem
            </summary>
            <param name="pemFileConent"></param>
            <returns></returns>
        </member>
        <member name="M:QL.Security.QLEncryption.RSAEncryptServices.ConvertFromPrivateKey(System.String)">
            <summary>
            解析.net 生成的Pem
            </summary>
            <param name="pemFileConent"></param>
            <returns></returns>
        </member>
        <member name="M:QL.Security.QLEncryption.RSAEncryptServices.DecodePemPrivateKey(System.String)">
            <summary>
            解析java生成的pem文件私钥
            </summary>
            <param name="pemstr"></param>
            <returns></returns>
        </member>
    </members>
</doc>
