<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ServerManageTools</name>
    </assembly>
    <members>
        <member name="F:QL.Server.DBTools.EffentNextType.None">
            <summary>
            对其他语句无任何影响 
            </summary>
        </member>
        <member name="F:QL.Server.DBTools.EffentNextType.WhenHaveContine">
            <summary>
            当前语句必须为"select count(1) from .."格式，如果存在则继续执行，不存在回滚事务
            </summary>
        </member>
        <member name="F:QL.Server.DBTools.EffentNextType.WhenNoHaveContine">
            <summary>
            当前语句必须为"select count(1) from .."格式，如果不存在则继续执行，存在回滚事务
            </summary>
        </member>
        <member name="F:QL.Server.DBTools.EffentNextType.ExcuteEffectRows">
            <summary>
            当前语句影响到的行数必须大于0，否则回滚事务
            </summary>
        </member>
        <member name="F:QL.Server.DBTools.EffentNextType.SolicitationEvent">
            <summary>
            引发事件-当前语句必须为"select count(1) from .."格式，如果不存在则继续执行，存在回滚事务
            </summary>
        </member>
        <member name="P:QL.Server.DBTools.DbHelperSQLBase`1.ConnectionStringMain">
            <summary>
            数据库连接字符串主服务器提供写入服务
            </summary>
        </member>
        <member name="P:QL.Server.DBTools.DbHelperSQLBase`1.DBEntityProvide">
            <summary>
            
            </summary>
        </member>
        <member name="P:QL.Server.DBTools.DbHelperSQLBase`1.Instance">
            <summary>
            
            </summary>
        </member>
        <member name="M:QL.Server.DBTools.DbHelperSQLBase`1.RunProcedure(System.String,System.Data.IDataParameter[],System.Data.DataSet@)">
            <summary>
            执行存储过程，返回ReturnValue
            </summary>
            <param name="storedProcName"></param>
            <param name="parameters"></param>
            <param name="dataSet"></param>
            <returns></returns>
        </member>
        <member name="P:QL.Server.DBTools.Write.DbHelperSQL.ConnectionStringMain">
            <summary>
            
            </summary>
        </member>
        <member name="P:QL.Server.DBTools.Write.DbHelperSQL.DBEntityProvide">
            <summary>
            
            </summary>
        </member>
        <member name="M:QL.Server.DBTools.Write.ProcedureHelper.CSLoadForAIInfo(System.Data.DataSet@)">
            <summary>
            执行存储过程 CSLoadForAIInfo 并返回执行结果
            </summary>
        </member>
        <member name="M:QL.Server.DBTools.Write.ProcedureHelper.CSLoadGameList(System.Data.DataSet@)">
            <summary>
            执行存储过程 CSLoadGameList 并返回执行结果
            </summary>
        </member>
        <member name="M:QL.Server.DBTools.Write.ProcedureHelper.CSLoadSysConfigFromDB(System.Int32,System.Data.DataSet@)">
            <summary>
            执行存储过程 CSLoadSysConfigFromDB 并返回执行结果
            </summary>
        </member>
        <member name="M:QL.Server.DBTools.Write.ProcedureHelper.CSRegOLogin(System.String,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32@,System.Data.DataSet@)">
            <summary>
            执行存储过程 CSRegOLogin 并返回执行结果
            </summary>
        </member>
        <member name="M:QL.Server.DBTools.Write.ProcedureHelper.CS_User_Info_InitUser_dp_Query(System.Int32,System.Data.DataSet@)">
            <summary>
            执行存储过程 CS_User_Info_InitUser_dp_Query 并返回执行结果
            </summary>
        </member>
        <member name="M:QL.Server.DBTools.Write.ProcedureHelper.GSLoadAgentRoomList(System.Int32,System.Data.DataSet@)">
            <summary>
            执行存储过程 GSLoadAgentRoomList 并返回执行结果
            </summary>
        </member>
        <member name="M:QL.Server.DBTools.Write.ProcedureHelper.GS_PlayerSettlementMultiple(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Data.DataSet@)">
            <summary>
            执行存储过程 GS_PlayerSettlementMultiple 并返回执行结果
            </summary>
        </member>
        <member name="M:QL.Server.DBTools.Write.ProcedureHelper.GS_SaveGameUserRecordData(System.String,System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.Data.DataSet@)">
            <summary>
            执行存储过程 GS_SaveGameUserRecordData 并返回执行结果
            </summary>
        </member>
        <member name="M:QL.Server.DBTools.Write.ProcedureHelper.GS_SettlementOne(System.Int32,System.Object,System.Int32,System.Int32,System.Int32,System.Int32@,System.Data.DataSet@)">
            <summary>
            执行存储过程 GS_SettlementOne 并返回执行结果
            </summary>
        </member>
        <member name="M:QL.Server.DBTools.Write.ProcedureHelper.CS_Get_AIDispositionParam(System.Data.DataSet@)">
            <summary>
            执行存储过程 CS_Get_AIDispositionParam 并返回执行结果
            </summary>
        </member>
        <member name="M:QL.Server.DBTools.Write.ProcedureHelper.CS_Get_AITimeParam(System.Data.DataSet@)">
            <summary>
            执行存储过程 CS_Get_AITimeParam 并返回执行结果
            </summary>
        </member>
        <member name="M:QL.Server.DBTools.Write.ProcedureHelper.GS_GetRoomInfoByRoomIDArray(System.String,System.Int32,System.Data.DataSet@)">
            <summary>
            执行存储过程 GS_GetRoomInfoByRoomIDArray 并返回执行结果
            </summary>
        </member>
        <member name="M:QL.Server.DBTools.Write.ProcedureHelper.GS_FrozenUserAccount(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String@,System.Data.DataSet@)">
            <summary>
            执行存储过程 GS_FrozenUserAccount 并返回执行结果
            </summary>
        </member>
        <member name="M:QL.Server.DBTools.Write.ProcedureHelper.GS_ThawUserAccount(System.String,System.Int32,System.Data.DataSet@)">
            <summary>
            执行存储过程 GS_FrozenUserAccount 并返回执行结果
            </summary>
        </member>
        <member name="T:QL.Server.IPAddressEnity">
            <summary>
            类IPAddressEnity的注释信息
            </summary>
        </member>
        <member name="T:QL.Server.RedisOP.RedisOperation">
            <summary>
            提供Redis操作类
            </summary>
        </member>
        <member name="P:QL.Server.RedisOP.RedisOperation.ServerType">
            <summary>
            
            </summary>
        </member>
        <member name="P:QL.Server.RedisOP.RedisOperation.ServerUuid">
            <summary>
            当前服务器的服务器编号
            </summary>
        </member>
        <member name="F:QL.Server.RedisOP.RedisOperation.ServerUuidStr">
            <summary>
            
            </summary>
        </member>
        <member name="E:QL.Server.RedisOP.RedisOperation.RedisMessageComing">
            <summary>
            
            </summary>
        </member>
        <member name="E:QL.Server.RedisOP.RedisOperation.ConnectInitCompleted">
             <summary>
                    
            </summary>
        </member>
        <member name="P:QL.Server.RedisOP.RedisOperation.CGServer">
            <summary>
            游戏服务器配置
            </summary>
        </member>
        <member name="P:QL.Server.RedisOP.RedisOperation.CLServer">
            <summary>
            登陆服务器配置
            </summary>
        </member>
        <member name="M:QL.Server.RedisOP.RedisOperation.SendDataToServer(System.Guid,GameIF.RedisMessage)">
            <summary>
            
            </summary>
            <param name="serverUuid"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:QL.Server.RedisOP.RedisOperation.SendDataToAllServer(GameIF.RedisMessage)">
            <summary>
            
            </summary> 
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:QL.Server.RedisOP.RedisOperation.SendDataToGameServer(GameIF.RedisMessage)">
            <summary>
            
            </summary> 
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:QL.Server.RedisOP.RedisOperation.SendDataToLogonServer(GameIF.RedisMessage)">
            <summary>
            
            </summary> 
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:QL.Server.RedisOP.RedisOperation.SendMessageToUserServer(System.UInt32,GameIF.RedisMessage)">
            <summary>
            
            </summary>
            <param name="userId"></param>
            <param name="message"></param>
        </member>
        <member name="M:QL.Server.RedisOP.RedisOperation.SendMessageToUser(System.UInt32,GameIF.CustomMessage)">
            <summary>
            
            </summary>
            <param name="userId"></param>
            <param name="message"></param>
        </member>
        <member name="M:QL.Server.RedisOP.RedisOperation.SetUserLsLoc(System.UInt32,QL.Common.UserLSLocation,System.Action{QL.Common.UserLSLocation})">
            <summary>
            
            </summary>
            <param name="UserId"></param>
            <param name="loc"></param>
            <param name="call"></param>
        </member>
        <member name="M:QL.Server.RedisOP.RedisOperation.GetUserLsLoc(System.UInt32,System.Action{QL.Common.UserLSLocation})">
            <summary>
            
            </summary>
            <param name="UserId"></param> 
            <param name="call"></param>
        </member>
        <member name="M:QL.Server.RedisOP.RedisOperation.SetUserOfflineLoc(System.UInt32,QL.Common.R2GsInfo,System.Func{QL.Common.R2GsInfo,System.Boolean})">
            <summary>
            
            </summary>
            <param name="UserId"></param>
            <param name="loc"></param>
            <param name="call"></param>
        </member>
        <member name="M:QL.Server.RedisOP.RedisOperation.GetUserOfflineLoc(System.UInt32,System.Action{QL.Common.R2GsInfo})">
            <summary>
            
            </summary>
            <param name="UserId"></param> 
            <param name="call"></param>
        </member>
        <member name="M:QL.Server.RedisOP.RedisOperation.RemoveUserOfflineLoc(System.UInt32,System.UInt32)">
            <summary>
            
            </summary>
            <param name="UserId"></param>
            <param name="RoomId"></param>
        </member>
        <member name="M:QL.Server.RedisOP.RedisOperation.RemoveUserloc(System.UInt32,System.Func{QL.Common.UserLSLocation,System.Boolean})">
            <summary>
            
            </summary>
            <param name="UserId"></param>
            <param name="func"></param>
        </member>
        <member name="M:QL.Server.RedisOP.RedisOperation.CreateOrUpdateTableInfo(QL.Common.UserCRoomInfo,System.Boolean)">
            <summary>
            
            </summary>
            <param name="cr"></param>
            <param name="isUpdate"></param>
            <returns></returns>
        </member>
        <member name="M:QL.Server.RedisOP.RedisOperation.SetTableOwnerInfo(QL.Common.UserCRoomInfo,System.UInt32)">
            <summary>
            
            </summary>
            <param name="cr"></param>
            <param name="oldOwnerId"></param>
        </member>
        <member name="M:QL.Server.RedisOP.RedisOperation.RemoveTableInfo(QL.Common.UserCRoomInfo)">
            <summary>
            
            </summary>
            <param name="cr"></param>
        </member>
        <member name="M:QL.Server.RedisOP.RedisOperation.SetServerMaintain(System.Boolean,System.String)">
            <summary>
            
            </summary>
            <param name="isMaintain"></param>
            <param name="MaintainR"></param>
        </member>
        <member name="M:QL.Server.RedisOP.RedisOperation.RemoveTableInfoByUserId(System.UInt32,System.UInt32)">
            <summary>
            
            </summary>
            <param name="tableId"></param>
            <param name="ownerId"></param>
        </member>
        <member name="M:QL.Server.RedisOP.RedisOperation.RemoveTableInfoByRoomId(System.UInt32,System.UInt32)">
            <summary>
            
            </summary>
            <param name="tableId"></param>
            <param name="roomId"></param>
        </member>
        <member name="M:QL.Server.RedisOP.RedisOperation.GetCreateTableInfo(System.UInt32,System.Action{QL.Common.UserCRoomInfo})">
            <summary>
            
            </summary>
            <param name="tableId"></param>
            <param name="call"></param>
        </member>
        <member name="M:QL.Server.RedisOP.RedisOperation.GetUserCreateTables(System.UInt32,System.Action{QL.Common.UserCRoomInfo[]})">
            <summary>
            获取玩家创建的房间列表
            </summary>
            <param name="userId"></param>
            <param name="call"></param>
        </member>
        <member name="M:QL.Server.RedisOP.RedisOperation.NoticeUserCTableOver(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            
            </summary>
            <param name="tableId"></param>
            <param name="userId"></param>
            <param name="groupId"></param>
        </member>
        <member name="M:QL.Server.RedisOP.RedisOperation.GetGroupTableInfo(System.UInt32,System.Action{QL.Common.UserCRoomInfo[]})">
            <summary>
            
            </summary>
            <param name="groupId"></param>
            <param name="call"></param>
        </member>
        <member name="M:QL.Server.ServerCheckUpdate.CheckUpdate">
            <summary>
            
            
            </summary>
        </member>
        <member name="M:QL.Server.ServerCheckUpdate.Close">
            <summary>
            
            </summary>
        </member>
        <member name="F:QL.Server.ServerCheckUpdate.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:QL.Server.ServerCheckUpdate.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:QL.Server.ServerCheckUpdate.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:QL.Server.CheckUpdateResponse">
            <summary>
            
            </summary>
        </member>
        <member name="P:QL.Server.CheckUpdateResponse.ServerDownloadUrl">
            <summary>
            
            </summary>
        </member>
        <member name="P:QL.Server.CheckUpdateResponse.LSVersion">
            <summary>
            
            </summary>
        </member>
        <member name="P:QL.Server.CheckUpdateResponse.GSVersion">
            <summary>
            
            </summary>
        </member>
        <member name="T:QL.Server.SystemCommonConfig">
            <summary>
            提供对基础配置文件的访问
            </summary> 
        </member>
        <member name="F:QL.Server.SystemCommonConfig.RegionHost">
            <summary>
            指示当前连接的分区信息
            </summary>
        </member>
        <member name="F:QL.Server.SystemCommonConfig.SslServerHost">
            <summary>
            证书地址
            </summary>
        </member>
        <member name="F:QL.Server.SystemCommonConfig.SslPassword">
            <summary>
            证书密码
            </summary>
        </member>
        <member name="P:QL.Server.SystemCommonConfig.Version">
            <summary>
            服务版本号
            </summary>
        </member>
        <member name="F:QL.Server.SystemCommonConfig.PublicRsaKey">
            <summary>
            公钥
            </summary>
        </member>
        <member name="F:QL.Server.SystemCommonConfig.AppId">
            <summary>
            平台和网站Api接口交互时使用的接口鉴权AppId
            </summary>
        </member>
        <member name="F:QL.Server.SystemCommonConfig.AppSecret">
            <summary>
            平台和网站Api接口交互时使用的接口鉴权 AppSecret
            </summary>
        </member>
        <member name="P:QL.Server.SystemCommonConfig.WebConfig">
            <summary>
            网站配置类
            </summary>
        </member>
        <member name="F:QL.Server.SystemCommonConfig.MySqlConstr">
            <summary>
            数据库连接字符串
            </summary>
        </member>
        <member name="F:QL.Server.SystemCommonConfig.RedisConstr">
            <summary>
            Redis 主库的连接字符串
            </summary>
        </member>
        <member name="F:QL.Server.SystemCommonConfig.RedisDbId">
            <summary>
            Redis 主库
            </summary>
        </member>
        <member name="P:QL.Server.SystemCommonConfig.PlatfromConfig">
            <summary>
            
            </summary>
        </member>
        <member name="P:QL.Server.SystemCommonConfig.ServerUpdate">
            <summary>
            服务器更新的配置文件
            </summary>
        </member>
        <member name="P:QL.Server.SystemCommonConfig.CilentUpdateConfig">
            <summary>
            
            </summary>
        </member>
        <member name="F:QL.Server.SystemCommonConfig.KeepAliveiInterval">
            <summary>
            心跳包检测间隔
            </summary>
        </member>
        <member name="F:QL.Server.SystemCommonConfig.KeepAliveiDelay">
            <summary>
            心跳包检测失败重试延迟，心跳包检测失败重试五次
            </summary>
        </member>
        <member name="T:QL.Server.WebConfig">
            <summary>
            网站接口协调相关的配置
            </summary>
        </member>
        <member name="F:QL.Server.WebConfig.OSSAccessKeyId">
            <summary>
            七牛云的AppId
            </summary>
        </member>
        <member name="F:QL.Server.WebConfig.OSSAccessSecret">
            <summary>
            七牛云的AppSecret
            </summary>
        </member>
        <member name="F:QL.Server.WebConfig.OSSBucketName">
            <summary>
            七牛云上传文件的存储库
            </summary>
        </member>
        <member name="F:QL.Server.WebConfig.OSSUploadUrl">
            <summary>
            七牛云上传文件接口地址
            </summary>
        </member>
        <member name="F:QL.Server.WebConfig.OSSBaseUrl">
            <summary>
            七牛云上传文件回传下载文件地址Url前缀
            </summary>
        </member>
        <member name="F:QL.Server.WebConfig.OSSUplodPrefix">
            <summary>
            七牛云上传文件Key使用前缀
            </summary>
        </member>
        <member name="F:QL.Server.WebConfig.WebSecret">
            <summary>
            网站接口密钥，主密钥
            </summary>
        </member>
        <member name="T:QL.Server.CilentUpdateConfig">
            <summary>
            客户端相关的配置信息
            </summary>
        </member>
        <member name="F:QL.Server.CilentUpdateConfig.OnlyToken">
            <summary>
            指示当前客户端是否仅仅支持使用token登陆
            </summary>
        </member>
        <member name="F:QL.Server.CilentUpdateConfig.ErrorLogonMsg">
            <summary>
            登陆失败时提示的错误文本
            </summary>
        </member>
        <member name="T:QL.Server.PlatfromConfig">
            <summary>
            
            </summary>
        </member>
        <member name="F:QL.Server.PlatfromConfig.CsPort">
            <summary>
            中心服务器连接端口
            </summary>
        </member>
        <member name="F:QL.Server.PlatfromConfig.GsPort">
            <summary>
            游戏服务器端口
            </summary>
        </member>
        <member name="F:QL.Server.PlatfromConfig.LsPort">
            <summary>
            登陆服务器端口
            </summary>
        </member>
        <member name="F:QL.Server.PlatfromConfig.WsPort">
            <summary>
            WebSocket服务端口
            </summary>
        </member>
        <member name="F:QL.Server.PlatfromConfig.WebPort">
            <summary>
            平台提供的网站服务接口端口
            </summary>
        </member>
        <member name="F:QL.Server.PlatfromConfig.WssPort">
            <summary>
            安全的 WebSocket 服务端口
            </summary>
        </member>
        <member name="F:QL.Server.PlatfromConfig.ServerIp">
            <summary>
            服务器Ip
            </summary>
        </member>
        <member name="F:QL.Server.PlatfromConfig.GsId">
            <summary>
            游戏服务器管理Id
            </summary>
        </member>
        <member name="P:QL.Server.PlatfromConfig.GServerIp">
            <summary>
            
            </summary>
        </member>
        <member name="P:QL.Server.PlatfromConfig.BindServerIp">
            <summary>
            
            </summary>
        </member>
        <member name="T:QL.Server.ServerUpdate">
            <summary>
            服务端更新配置文件
            </summary>
        </member>
        <member name="P:QL.Server.ServerUpdate.LSVersion">
            <summary>
            
            </summary>
        </member>
        <member name="P:QL.Server.ServerUpdate.GSVersion">
            <summary>
            
            </summary>
        </member>
        <member name="P:QL.Server.ServerUpdate.CheckUpdateUrl">
            <summary>
            
            </summary>
        </member>
        <member name="T:QL.Server.Threading.QLThreadPool">
            <summary>
            为系统程序调用提供线程池实现
            </summary>
        </member>
        <member name="M:QL.Server.Threading.QLThreadPool.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:QL.Server.Threading.QLThreadPool.#ctor(System.Boolean)">
            <summary>
            
            </summary>
            <param name="startSuspended"></param>
        </member>
        <member name="M:QL.Server.Threading.QLThreadPool.#ctor(Amib.Threading.STPStartInfo)">
            <summary>
            
            </summary>
            <param name="stpStartInfo"></param>
        </member>
        <member name="M:QL.Server.Threading.QLThreadPool.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="idleTimeout"></param>
        </member>
        <member name="M:QL.Server.Threading.QLThreadPool.#ctor(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="idleTimeout"></param>
            <param name="maxWorkerThreads"></param>
        </member>
        <member name="M:QL.Server.Threading.QLThreadPool.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="idleTimeout"></param>
            <param name="maxWorkerThreads"></param>
            <param name="minWorkerThreads"></param>
        </member>
        <member name="M:QL.Server.Threading.QLThreadPool.QueueUserWorkItem(QL.QLAction)">
            <summary>
            
            </summary>
            <param name="runMethod"></param>
            <returns></returns>
        </member>
        <member name="T:QL.Server.Tools.AIIPRandomService">
            <summary>
            类AIIPRandomService的注释信息
            </summary>
        </member>
        <member name="M:QL.Server.Tools.AIIPRandomService.GetIPString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:QL.Server.Tools.DBDataProcessHelper">
            <summary>
            为数据转对象数据的帮助类
            </summary>
        </member>
        <member name="M:QL.Server.Tools.DBDataProcessHelper.Create_AITimeParam(System.Data.DataTable)">
            <summary>
            AI时间投放控制参数
            </summary>
            <param name="dataTable"></param>
            <returns></returns>
        </member>
        <member name="M:QL.Server.Tools.DBDataProcessHelper.Create_AIDispositionParam(System.Data.DataTable)">
            <summary>
            AI性格控制参数
            </summary>
            <param name="dataTable"></param>
            <returns></returns>
        </member>
        <member name="M:QL.Server.Tools.DBDataProcessHelper.Create_GameInfo(System.Data.DataTable)">
            <summary>
            游戏信息
            </summary>
            <param name="dataTable"></param>
            <returns></returns>
        </member>
        <member name="M:QL.Server.Tools.DBDataProcessHelper.Create_RoomServer(System.Data.DataTable)">
            <summary>
            场地
            </summary>
            <param name="dataTable"></param>
            <returns></returns>
        </member>
        <member name="M:QL.Server.Tools.LoadReflection.LoadGamePlugServer(System.String)">
            <summary>
            加载游戏插件的服务端
            </summary>
            <param name="path">dll地址路径</param>
            <returns></returns>
        </member>
        <member name="T:QL.Server.Tools.Model.GamePlugConfigList">
            <summary>
            类GamePlugConfig的注释信息
            </summary>
        </member>
        <member name="M:QL.Server.Tools.Model.GamePlugConfigList.LoadConfig(System.String)">
            <summary>
            加载配置信息
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:QL.Server.Tools.Model.GamePlugConfigList.SaveConfig(System.String)">
            <summary>
            保存配置信息
            </summary>
            <param name="path"></param>
        </member>
        <member name="T:QL.Server.Tools.Model.GamePlugConfig">
            <summary>
            类GamePlugConfig的注释信息
            </summary>
        </member>
        <member name="F:QL.Server.Tools.Model.GamePlugConfig.RelativePath">
            <summary>
            游戏插件的相对路径
            </summary>
        </member>
        <member name="T:QL.Server.Tools.SendMail">
            <summary>
            邮件发送的处理类
            </summary>
        </member>
        <member name="P:QL.Server.Tools.SendMail.Instance">
            <summary>
            邮件发送系统的单根实例
            </summary>
        </member>
        <member name="F:QL.Server.Tools.SendMail._sendmailMQ">
            <summary>
            系统邮件发送队列
            </summary>
        </member>
        <member name="M:QL.Server.Tools.SendMail.#ctor">
            <summary>  
            初始化类的新实例  
            </summary>   
        </member>
        <member name="M:QL.Server.Tools.SendMail._sendmailMQ_MessageComing(System.Object,QL.Tools.MessageEventArgs{QL.Server.Tools.SendMail.MailMessage})">
            <summary>
            邮件的消息发送处理队列
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:QL.Server.Tools.SendMail.Send(System.String,System.String,System.IO.Stream,System.String,System.String[])">
            <summary>  
            发送邮件  
            </summary>  
        </member>
        <member name="T:QL.Server.Tools.SendMail.MailMessage">
            <summary>
            邮件消息类
            </summary>
        </member>
        <member name="F:QL.Server.Tools.SendMail.MailMessage.Title">
            <summary>
            邮件的标题
            </summary>
        </member>
        <member name="F:QL.Server.Tools.SendMail.MailMessage.Body">
            <summary>
            邮件的文本内容
            </summary>
        </member>
        <member name="F:QL.Server.Tools.SendMail.MailMessage.ContextStream">
            <summary>
            需要添加附件的文件流
            </summary>
        </member>
        <member name="F:QL.Server.Tools.SendMail.MailMessage.AttachName">
            <summary>
            添加附件的名称
            </summary>
        </member>
        <member name="T:QL.Server.Tools.QLConcurrentDictionary`2">
            <summary>
            进行封装过后的线程安全的键值对字典集合
            </summary>
            <typeparam name="Tkey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="M:QL.Server.Tools.QLConcurrentDictionary`2.Remove(`0)">
            <summary>
            删除指定键位置的对象
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:QL.Server.Tools.QLConcurrentDictionary`2.Remove(`0,`1)">
            <summary>
            比较性删除，如果要删除的值与提供的值相等则删除，否则不删除
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:QL.Server.Tools.QLConcurrentDictionary`2.Item(`0)">
            <summary>
            获取或设置当前集合指定key的对象
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:QL.Server.Tools.QLConcurrentDictionary`2.GetValue(`0)">
            <summary>
            尝试获取集合内的数据，如果获取失败则为null
            </summary>
            <param name="key">需要获取对象信息的key</param>
            <returns></returns>
        </member>
        <member name="M:QL.Server.Tools.QLConcurrentDictionary`2.Add(`0,`1)">
            <summary>
            添加或者更新集合信息
            </summary>
            <param name="key">需要添加的的键值</param>
            <param name="value">需要添加指定键的对象信息</param>
        </member>
        <member name="M:QL.Server.Tools.QLConcurrentDictionary`2.TryUpdate(`0,`1)">
            <summary>
            尝试更新指定key的集合项，并返回一个是否更新成功的bool值
            </summary>
            <param name="key">需要更新的指定键</param>
            <param name="value">需要更新指定键的值</param>
        </member>
        <member name="T:QL.Server.Model.AITimeParam">
             <summary>
            AI按照时间段投放逻辑的配置参数
             </summary> 
        </member>
        <member name="F:QL.Server.Model.AITimeParam.timeid">
             <summary>
            timeid
             </summary> 
        </member>
        <member name="F:QL.Server.Model.AITimeParam.join_time">
             <summary>
            join_time
             </summary> 
        </member>
        <member name="F:QL.Server.Model.AITimeParam.preset_prob">
             <summary>
            preset_prob
             </summary> 
        </member>
        <member name="F:QL.Server.Model.AITimeParam.mark">
             <summary>
            mark
             </summary> 
        </member>
        <member name="M:QL.Server.Model.AITimeParam.NextAIRequestTableTime">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:QL.Server.Model.AITimeParam.IsDOPresetAI">
            <summary>
            判定是否需要执行预置AI逻辑
            </summary>
            <returns></returns>
        </member>
        <member name="T:QL.Server.Model.AIDispositionParam">
            <summary>
            AI性格配置相关参数
            </summary>
        </member>
        <member name="F:QL.Server.Model.AIDispositionParam.Default">
            <summary>
            
            </summary>
        </member>
        <member name="M:QL.Server.Model.AIDispositionParam.#ctor">
            <summary>
            初始化一个新实例
            </summary>
        </member>
        <member name="F:QL.Server.Model.AIDispositionParam.aiid">
             <summary>
            aiid
             </summary> 
        </member>
        <member name="F:QL.Server.Model.AIDispositionParam.f_ready_prob">
             <summary>
            f_ready_prob
             </summary> 
        </member>
        <member name="F:QL.Server.Model.AIDispositionParam.f_out_prob">
             <summary>
            f_out_prob
             </summary> 
        </member>
        <member name="F:QL.Server.Model.AIDispositionParam.f_ready_time">
             <summary>
            f_ready_time
             </summary> 
        </member>
        <member name="F:QL.Server.Model.AIDispositionParam.f_out_time">
             <summary>
            f_out_time
             </summary> 
        </member>
        <member name="F:QL.Server.Model.AIDispositionParam.f_wait_time">
             <summary>
            f_wait_time
             </summary> 
        </member>
        <member name="F:QL.Server.Model.AIDispositionParam.e_win_ready_prob">
             <summary>
            e_win_ready_prob
             </summary> 
        </member>
        <member name="F:QL.Server.Model.AIDispositionParam.e_win_ready_time">
             <summary>
            e_win_ready_time
             </summary> 
        </member>
        <member name="F:QL.Server.Model.AIDispositionParam.e_win_out_time">
             <summary>
            e_win_out_time
             </summary> 
        </member>
        <member name="F:QL.Server.Model.AIDispositionParam.e_lose_ready_prob">
             <summary>
            e_lose_ready_prob
             </summary> 
        </member>
        <member name="F:QL.Server.Model.AIDispositionParam.e_lose_ready_time">
             <summary>
            e_lose_ready_time
             </summary> 
        </member>
        <member name="F:QL.Server.Model.AIDispositionParam.e_lose_out_time">
             <summary>
            e_lose_out_time
             </summary> 
        </member>
        <member name="T:QL.Server.Model.PipelineMessage">
            <summary>
            管道通信消息
            </summary>
        </member>
        <member name="F:QL.Server.Model.PipelineMessage.pipeline">
            <summary>
            
            </summary>
        </member>
        <member name="F:QL.Server.Model.PipelineMessage.TableID">
            <summary>
            消息的桌子ID
            </summary>
        </member>
        <member name="F:QL.Server.Model.PipelineMessage.Message">
            <summary>
            服务消息
            </summary>
        </member>
        <member name="F:QL.Server.Model.PipelineMessage.ChairID">
            <summary>
            消息的椅子号
            </summary>
        </member>
        <member name="T:QL.Server.Manage.SysAITimeParamManageManagerBase">
            <summary>
            
            </summary>
        </member>
        <member name="M:QL.Server.Manage.SysAITimeParamManageManagerBase.GetCurrentHourTimeInstance">
            <summary>
            获取当前时间段的AI配置控制数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:QL.Server.Manage.SysAIDispositionParamManageManagerBase">
            <summary>
            
            </summary>
        </member>
        <member name="M:QL.Server.Manage.SysAIDispositionParamManageManagerBase.GetRandomInstance">
            <summary>
            随机获取一个AI性格配置参数
            </summary>
            <returns></returns>
        </member>
        <member name="T:QL.Server.Manage.SysRoomServerManager">
            <summary>
            场地信息的管理操作类
            </summary>
        </member>
        <member name="T:QL.Server.Manage.SysGameInfoManager">
            <summary>
            场地信息的管理操作类
            </summary>
        </member>
        <member name="M:QL.Server.Manage.SysGameInfoManager.LoadDataFromDB">
            <summary>
            
            </summary>
        </member>
        <member name="T:QL.Server.Manage.SysConfigManage">
            <summary>
            系统配置管理器
            </summary>
        </member>
        <member name="M:QL.Server.Manage.SysConfigManage.LoadDataFromDB">
            <summary>
            
            </summary>
        </member>
        <member name="P:QL.Server.Manage.SysConfigManage.LogonNonStr">
            <summary>
            
            </summary>
        </member>
        <member name="T:QL.Server.Manage.SysServerConfigDataManageBase`3">
            <summary>
            提供数据的管理集合基类
            </summary>
        </member>
        <member name="M:QL.Server.Manage.SysServerConfigDataManageBase`3.CreateNewHostTypeInstance">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="F:QL.Server.Manage.SysServerConfigDataManageBase`3._serverConfigDataList">
            <summary>
            玩家等级配置数据集合
            </summary>
        </member>
        <member name="P:QL.Server.Manage.SysServerConfigDataManageBase`3.Instance">
            <summary>
            获取配置数据管理集合的单根实例
            </summary>
        </member>
        <member name="M:QL.Server.Manage.SysServerConfigDataManageBase`3.InitData">
             <summary>
            初始化数据，一般需要从DB数据库刷新数据
             </summary>
        </member>
        <member name="P:QL.Server.Manage.SysServerConfigDataManageBase`3.Count">
            <summary>
            获取当前管理集合配置的数量
            </summary>
        </member>
        <member name="M:QL.Server.Manage.SysServerConfigDataManageBase`3.LoadDataFromDB">
            <summary>
            从数据库加载数据
            </summary>
        </member>
        <member name="M:QL.Server.Manage.SysServerConfigDataManageBase`3.#ctor">
            <summary>
            初始化新实例对象
            </summary>
        </member>
        <member name="M:QL.Server.Manage.SysServerConfigDataManageBase`3.GetConfig(System.Int32)">
            <summary>
            获取配置信息,按照给定数量对数据进行分段
            </summary>
            <param name="count">分段数量</param>
            <returns></returns>
        </member>
        <member name="M:QL.Server.Manage.SysServerConfigDataManageBase`3.GetAllConfig">
            <summary>
            获取一个数组，该数组包含当前管理数据集合的所有配置参数信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:QL.Server.Manage.SysServerConfigDataManageBase`3.GetWhereConfig(System.Func{`1,System.Boolean})">
            <summary>
            根据查询条件获取当前的配置数据集合，返回符合搜索条件的集合
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="P:QL.Server.Manage.SysServerConfigDataManageBase`3.Item(`0)">
            <summary>
            根据键值对的键来直接获取和修改配置数据，如果无法获取配置数据则返回 null 值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:QL.Server.Manage.SysServerConfigDataManageBase`3.GetConfig">
            <summary>
             获取一个数组，该数组包含当前管理数据集合的所有配置参数信息
            </summary>
            <returns>返回一个包含配置数据的数组</returns>
        </member>
        <member name="M:QL.Server.Manage.SysServerConfigDataManageBase`3.Dispose">
            <summary>
            数据清理数据
            </summary>
        </member>
        <member name="M:QL.Server.Manage.SysServerConfigDataManageBase`3.Clear">
            <summary>
            清理所有的管理数据集合
            </summary>
        </member>
        <member name="M:QL.Server.Manage.SysServerConfigDataManageBase`3.Remove(`0)">
            <summary>
            根据键来删除一个配置项目
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:QL.Server.Manage.SysServerConfigDataManageBase`3.InitData(`1[],System.Func{`1,`0})">
            <summary>
            
            </summary>
            <param name="configData"></param>
            <param name="getkey"></param>
        </member>
        <member name="M:QL.Server.Manage.SysServerConfigDataManageBase`3.GetEnumerator">
            <summary>
            当前实例的枚举器接口实现
            </summary>
            <returns></returns>
        </member>
        <member name="M:QL.Server.Manage.SysServerConfigDataManageBase`3.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            显示实现当前实例的枚举器接口
            </summary>
            <returns></returns>
        </member>
        <member name="T:QL.Server.Manage.SysServerPushDataStack`1">
            <summary>
            为服务器提供对象数据的可控大小的对象缓存池
            </summary>
            <typeparam name="T"></typeparam>`
        </member>
        <member name="F:QL.Server.Manage.SysServerPushDataStack`1.data">
            <summary>
            管理配置参数的内部管理集合对象
            </summary>
        </member>
        <member name="M:QL.Server.Manage.SysServerPushDataStack`1.Add(`0[])">
            <summary>
            添加缓存数组数据
            </summary>
            <param name="configData"></param>
        </member>
        <member name="M:QL.Server.Manage.SysServerPushDataStack`1.Add(`0)">
            <summary>
            添加缓存信息
            </summary>
            <param name="config"></param>
        </member>
        <member name="P:QL.Server.Manage.SysServerPushDataStack`1.MaxPoolSize">
            <summary>
            配置缓存池的最大限度值
            </summary>
        </member>
        <member name="M:QL.Server.Manage.SysServerPushDataStack`1.GetConfigArrayData">
            <summary>
            返回一个数组，表示所有的缓存数据
            </summary>
            <returns></returns>
        </member>
        <member name="E:QL.Server.Manage.SysServerPushDataStack`1.ConfigDataRemoved">
            <summary>
            
            </summary>
        </member>
        <member name="M:QL.Server.Manage.SysServerPushDataStack`1.Clear">
            <summary>
            清理当前管理集合内保存的所有配置数据
            </summary>
        </member>
        <member name="F:QL.Server.QLServerConfigProvider.CenterTimerServiceInterval">
            <summary>
            中心服务器定时器最小基本定时间隔，1秒钟一个最小周期
            </summary>
        </member>
        <member name="F:QL.Server.QLServerConfigProvider.GameServerTimerServiceInterval">
            <summary>
            游戏服务器定时器最小基本定时间隔，100毫秒一个最小周期
            </summary>
        </member>
        <member name="F:QL.Server.QLServerConfigProvider.LogonTimerServiceInterval">
            <summary>
            登录服务器定时器最小基本定时间隔，1秒钟一个最小周期
            </summary>
        </member>
        <member name="P:QL.Server.QLServerConfigProvider.HeartData">
            <summary>
            心跳包数据
            </summary>
        </member>
        <member name="P:QL.Server.QLServerConfigProvider.ProcessBaseDir">
            <summary>
            进程基础文件夹路径
            </summary>
        </member>
        <member name="P:QL.Server.QLServerConfigProvider.ProcessName">
            <summary>
            当前程序的进程名称
            </summary>
        </member>
        <member name="M:QL.Server.QLServerConfigProvider.ServerInit(System.Action)">
            <summary>
            进行服务器初始化
            </summary>
        </member>
        <member name="T:QL.Server.UploadSDKHelper.UPYunHelper">
            <summary>
            又拍云文件上传帮助类
            </summary>
        </member>
        <member name="M:QL.Server.UploadSDKHelper.UPYunHelper.UpGameRecordFile(System.Byte[],System.String,QL.QLAction{System.String})">
            <summary>
            上传游戏录像
            </summary> 
            <param name="context"></param>
            <param name="path"></param> 
            <param name="call"></param>
        </member>
        <member name="T:QL.Security.SensitiveWordsCheckServices">
            <summary>
            平台系统敏感词限制检测服务
            </summary>
        </member>
        <member name="M:QL.Security.SensitiveWordsCheckServices.ReplaceSensitiveWords(System.String,System.Boolean,System.Char)">
            <summary>
            检查输入的字符串中是否存在限制的敏感词
            </summary>
            <param name="value">需要验证的字符串</param>
            <param name="replacement">检测到敏感词数组需要替换的字符</param>
            <param name="nonSpace">输入字符是否需要处理掉多余的空格</param>
            <returns>如果字符串中存在限制的敏感词则为 true , 否则为 false</returns>
        </member>
        <member name="M:QL.Security.SensitiveWordsCheckServices.BeginReplaceSensitiveWords(System.String,System.Char,QL.QLAction{System.String})">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="replacement"></param>
            <param name="call"></param>
        </member>
        <member name="M:QL.Security.SensitiveWordsCheckServices.InitData">
            <summary>
            
            </summary>
        </member>
        <member name="T:QL.ServerMessage.ServerGeneral.Update_AITimeParam">
            <summary>
            刷新AI时间段控制参数数据
            </summary>
        </member>
        <member name="T:QL.ServerMessage.ServerGeneral.Update_AIDispositionParam">
            <summary>
             刷新AI性格控制参数配置数据
            </summary>
        </member>
        <member name="T:QL.Extension.Extension">
            <summary>
            .Net 类型扩展
            </summary>
        </member>
        <member name="F:QL.Extension.Extension.EmptyArray">
            <summary>
            表示一个空的字节数组
            </summary>
        </member>
        <member name="M:QL.Extension.Extension.SendSystemErrorCode(QL.Net.IPipeline,QL.Common.SystemErrorCode,System.String)">
            <summary>
            
            </summary>
            <param name="pipeline"></param>
            <param name="error"></param>
            <param name="errorReason"></param>
        </member>
        <member name="M:QL.Extension.Extension.GetPlayerMoneyChangedData(System.Data.DataTable)">
            <summary>
            加载玩家的财务背包信息的修改数据
            </summary>
            <param name="table"></param>
        </member>
        <member name="M:QL.Extension.Extension.ChangeUserMoineyBagData(QL.Common.PlayerBase,QL.Common.PlayerMoneyBagBase[])">
            <summary>
            
            </summary>
            <param name="player"></param>
            <param name="bags"></param>
        </member>
        <member name="M:QL.Extension.Extension.ChangeUserMoineyBagData(QL.Common.TablePlayer,QL.Common.PlayerMoneyBagBase[])">
            <summary>
            
            </summary>
            <param name="player"></param>
            <param name="bags"></param>
        </member>
        <member name="M:QL.Extension.Extension.DecodeMessage(System.Byte[])">
            <summary>
            尝试对数据完成反序列化
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:QL.Extension._Task">
            <summary>
            
            </summary>
        </member>
        <member name="M:QL.Extension._Task.RunTask(System.Action,System.Action{System.Exception})">
            <summary>
            
            </summary>
            <param name="action"></param>
            <param name="error"></param>
        </member>
        <member name="M:QL.Extension._Task.RunTask(QL.QLAction,System.Action{System.Exception})">
            <summary>
            
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:QL.Extension._Task.RunTask(System.Action,QL.Threading.IQLThreadPoolProvider)">
            <summary>
            将工作任务发送到指定的线程池调度器上执行
            </summary>
            <param name="action">需要执行的任务</param>
            <param name="threadproiver">提供线程池任务调度管理的对象</param>
        </member>
        <member name="M:QL.SystemErrorHelper.ThrowPlayerGStateError(QL.Common.GState,QL.Common.GState)">
            <summary>
            玩家在服务器的状态处理错误
            </summary>
            <param name="playerCurrentGState">玩家当前状态</param>
            <param name="expectGSState">期望正确的服务器状态</param>
            <returns></returns>
        </member>
    </members>
</doc>
